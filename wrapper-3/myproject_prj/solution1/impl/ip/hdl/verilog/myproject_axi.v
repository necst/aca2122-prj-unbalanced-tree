// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.973116,HLS_SYN_LAT=16,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1927,HLS_SYN_LUT=9236,HLS_VERSION=2020_1}" *)

module myproject_axi (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TUSER,
        in_r_TLAST,
        in_r_TID,
        in_r_TDEST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TUSER,
        out_r_TLAST,
        out_r_TID,
        out_r_TDEST
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
input  [0:0] in_r_TID;
input  [0:0] in_r_TDEST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TUSER;
output  [0:0] out_r_TLAST;
output  [0:0] out_r_TID;
output  [0:0] out_r_TDEST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg   [31:0] p_0_reg_2936;
reg   [31:0] p_s_reg_2942;
reg   [31:0] p_1_reg_2948;
reg   [31:0] p_2_reg_2954;
reg   [31:0] p_3_reg_2960;
reg   [31:0] p_4_reg_2966;
reg   [31:0] p_5_reg_2972;
reg   [31:0] p_6_reg_2978;
reg   [31:0] p_7_reg_2984;
reg   [31:0] p_8_reg_3035;
wire   [53:0] man_V_2_fu_320_p3;
reg   [53:0] man_V_2_reg_3045;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln580_fu_328_p2;
reg   [0:0] icmp_ln580_reg_3050;
wire   [0:0] icmp_ln590_fu_340_p2;
reg   [0:0] icmp_ln590_reg_3057;
wire   [11:0] add_ln590_fu_346_p2;
reg   [11:0] add_ln590_reg_3064;
wire   [11:0] sub_ln590_fu_352_p2;
reg   [11:0] sub_ln590_reg_3069;
wire   [0:0] icmp_ln591_fu_358_p2;
reg   [0:0] icmp_ln591_reg_3074;
wire   [31:0] trunc_ln592_fu_364_p1;
reg   [31:0] trunc_ln592_reg_3080;
wire   [53:0] man_V_5_fu_420_p3;
reg   [53:0] man_V_5_reg_3086;
wire   [0:0] icmp_ln580_1_fu_428_p2;
reg   [0:0] icmp_ln580_1_reg_3091;
wire   [0:0] icmp_ln590_1_fu_440_p2;
reg   [0:0] icmp_ln590_1_reg_3098;
wire   [11:0] add_ln590_1_fu_446_p2;
reg   [11:0] add_ln590_1_reg_3105;
wire   [11:0] sub_ln590_1_fu_452_p2;
reg   [11:0] sub_ln590_1_reg_3110;
wire   [0:0] icmp_ln591_1_fu_458_p2;
reg   [0:0] icmp_ln591_1_reg_3115;
wire   [31:0] trunc_ln592_1_fu_464_p1;
reg   [31:0] trunc_ln592_1_reg_3121;
wire   [53:0] man_V_8_fu_520_p3;
reg   [53:0] man_V_8_reg_3127;
wire   [0:0] icmp_ln580_2_fu_528_p2;
reg   [0:0] icmp_ln580_2_reg_3132;
wire   [0:0] icmp_ln590_2_fu_540_p2;
reg   [0:0] icmp_ln590_2_reg_3139;
wire   [11:0] add_ln590_2_fu_546_p2;
reg   [11:0] add_ln590_2_reg_3146;
wire   [11:0] sub_ln590_2_fu_552_p2;
reg   [11:0] sub_ln590_2_reg_3151;
wire   [0:0] icmp_ln591_2_fu_558_p2;
reg   [0:0] icmp_ln591_2_reg_3156;
wire   [31:0] trunc_ln592_2_fu_564_p1;
reg   [31:0] trunc_ln592_2_reg_3162;
wire   [53:0] man_V_11_fu_620_p3;
reg   [53:0] man_V_11_reg_3168;
wire   [0:0] icmp_ln580_3_fu_628_p2;
reg   [0:0] icmp_ln580_3_reg_3173;
wire   [0:0] icmp_ln590_3_fu_640_p2;
reg   [0:0] icmp_ln590_3_reg_3180;
wire   [11:0] add_ln590_3_fu_646_p2;
reg   [11:0] add_ln590_3_reg_3187;
wire   [11:0] sub_ln590_3_fu_652_p2;
reg   [11:0] sub_ln590_3_reg_3192;
wire   [0:0] icmp_ln591_3_fu_658_p2;
reg   [0:0] icmp_ln591_3_reg_3197;
wire   [31:0] trunc_ln592_3_fu_664_p1;
reg   [31:0] trunc_ln592_3_reg_3203;
wire   [53:0] man_V_14_fu_720_p3;
reg   [53:0] man_V_14_reg_3209;
wire   [0:0] icmp_ln580_4_fu_728_p2;
reg   [0:0] icmp_ln580_4_reg_3214;
wire   [0:0] icmp_ln590_4_fu_740_p2;
reg   [0:0] icmp_ln590_4_reg_3221;
wire   [11:0] add_ln590_4_fu_746_p2;
reg   [11:0] add_ln590_4_reg_3228;
wire   [11:0] sub_ln590_4_fu_752_p2;
reg   [11:0] sub_ln590_4_reg_3233;
wire   [0:0] icmp_ln591_4_fu_758_p2;
reg   [0:0] icmp_ln591_4_reg_3238;
wire   [31:0] trunc_ln592_4_fu_764_p1;
reg   [31:0] trunc_ln592_4_reg_3244;
wire   [53:0] man_V_17_fu_820_p3;
reg   [53:0] man_V_17_reg_3250;
wire   [0:0] icmp_ln580_5_fu_828_p2;
reg   [0:0] icmp_ln580_5_reg_3255;
wire   [0:0] icmp_ln590_5_fu_840_p2;
reg   [0:0] icmp_ln590_5_reg_3262;
wire   [11:0] add_ln590_5_fu_846_p2;
reg   [11:0] add_ln590_5_reg_3269;
wire   [11:0] sub_ln590_5_fu_852_p2;
reg   [11:0] sub_ln590_5_reg_3274;
wire   [0:0] icmp_ln591_5_fu_858_p2;
reg   [0:0] icmp_ln591_5_reg_3279;
wire   [31:0] trunc_ln592_5_fu_864_p1;
reg   [31:0] trunc_ln592_5_reg_3285;
wire   [53:0] man_V_20_fu_920_p3;
reg   [53:0] man_V_20_reg_3291;
wire   [0:0] icmp_ln580_6_fu_928_p2;
reg   [0:0] icmp_ln580_6_reg_3296;
wire   [0:0] icmp_ln590_6_fu_940_p2;
reg   [0:0] icmp_ln590_6_reg_3303;
wire   [11:0] add_ln590_6_fu_946_p2;
reg   [11:0] add_ln590_6_reg_3310;
wire   [11:0] sub_ln590_6_fu_952_p2;
reg   [11:0] sub_ln590_6_reg_3315;
wire   [0:0] icmp_ln591_6_fu_958_p2;
reg   [0:0] icmp_ln591_6_reg_3320;
wire   [31:0] trunc_ln592_6_fu_964_p1;
reg   [31:0] trunc_ln592_6_reg_3326;
wire   [53:0] man_V_23_fu_1020_p3;
reg   [53:0] man_V_23_reg_3332;
wire   [0:0] icmp_ln580_7_fu_1028_p2;
reg   [0:0] icmp_ln580_7_reg_3337;
wire   [0:0] icmp_ln590_7_fu_1040_p2;
reg   [0:0] icmp_ln590_7_reg_3344;
wire   [11:0] add_ln590_7_fu_1046_p2;
reg   [11:0] add_ln590_7_reg_3351;
wire   [11:0] sub_ln590_7_fu_1052_p2;
reg   [11:0] sub_ln590_7_reg_3356;
wire   [0:0] icmp_ln591_7_fu_1058_p2;
reg   [0:0] icmp_ln591_7_reg_3361;
wire   [31:0] trunc_ln592_7_fu_1064_p1;
reg   [31:0] trunc_ln592_7_reg_3367;
wire   [53:0] man_V_26_fu_1120_p3;
reg   [53:0] man_V_26_reg_3373;
wire   [0:0] icmp_ln580_8_fu_1128_p2;
reg   [0:0] icmp_ln580_8_reg_3378;
wire   [0:0] icmp_ln590_8_fu_1140_p2;
reg   [0:0] icmp_ln590_8_reg_3385;
wire   [11:0] add_ln590_8_fu_1146_p2;
reg   [11:0] add_ln590_8_reg_3392;
wire   [11:0] sub_ln590_8_fu_1152_p2;
reg   [11:0] sub_ln590_8_reg_3397;
wire   [0:0] icmp_ln591_8_fu_1158_p2;
reg   [0:0] icmp_ln591_8_reg_3402;
wire   [31:0] trunc_ln592_8_fu_1164_p1;
reg   [31:0] trunc_ln592_8_reg_3408;
wire   [53:0] man_V_29_fu_1220_p3;
reg   [53:0] man_V_29_reg_3414;
wire   [0:0] icmp_ln580_9_fu_1228_p2;
reg   [0:0] icmp_ln580_9_reg_3419;
wire   [0:0] icmp_ln590_9_fu_1240_p2;
reg   [0:0] icmp_ln590_9_reg_3426;
wire   [11:0] add_ln590_9_fu_1246_p2;
reg   [11:0] add_ln590_9_reg_3433;
wire   [11:0] sub_ln590_9_fu_1252_p2;
reg   [11:0] sub_ln590_9_reg_3438;
wire   [0:0] icmp_ln591_9_fu_1258_p2;
reg   [0:0] icmp_ln591_9_reg_3443;
wire   [31:0] trunc_ln592_9_fu_1264_p1;
reg   [31:0] trunc_ln592_9_reg_3449;
wire   [31:0] in_local_V_fu_1399_p3;
reg   [31:0] in_local_V_reg_3455;
wire    ap_CS_fsm_state12;
wire   [31:0] in_local_V_1_fu_1537_p3;
reg   [31:0] in_local_V_1_reg_3460;
wire   [31:0] in_local_V_2_fu_1675_p3;
reg   [31:0] in_local_V_2_reg_3465;
wire   [31:0] in_local_V_3_fu_1813_p3;
reg   [31:0] in_local_V_3_reg_3470;
wire   [31:0] in_local_V_4_fu_1951_p3;
reg   [31:0] in_local_V_4_reg_3475;
wire   [31:0] in_local_V_5_fu_2089_p3;
reg   [31:0] in_local_V_5_reg_3480;
wire   [31:0] in_local_V_6_fu_2227_p3;
reg   [31:0] in_local_V_6_reg_3485;
wire   [31:0] in_local_V_7_fu_2365_p3;
reg   [31:0] in_local_V_7_reg_3490;
wire   [31:0] in_local_V_8_fu_2503_p3;
reg   [31:0] in_local_V_8_reg_3495;
wire   [31:0] in_local_V_9_fu_2641_p3;
reg   [31:0] in_local_V_9_reg_3500;
wire   [31:0] out_local_V_myproject_fu_179_ap_return;
reg   [31:0] out_local_V_reg_3505;
wire    ap_CS_fsm_state13;
reg   [0:0] p_Result_22_reg_3512;
wire   [31:0] tmp_V_fu_2656_p2;
reg   [31:0] tmp_V_reg_3518;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln988_fu_2661_p2;
reg   [0:0] icmp_ln988_reg_3523;
wire    ap_CS_fsm_state15;
wire   [31:0] tmp_V_3_fu_2666_p3;
reg   [31:0] tmp_V_3_reg_3528;
wire   [31:0] sub_ln997_fu_2689_p2;
reg   [31:0] sub_ln997_reg_3533;
wire   [0:0] icmp_ln1011_fu_2783_p2;
reg   [0:0] icmp_ln1011_reg_3539;
wire   [0:0] select_ln1011_fu_2803_p3;
reg   [0:0] select_ln1011_reg_3544;
wire   [7:0] trunc_ln996_fu_2811_p1;
reg   [7:0] trunc_ln996_reg_3549;
wire    out_local_V_myproject_fu_179_ap_ready;
wire   [31:0] grp_fu_193_p0;
wire   [31:0] grp_fu_196_p0;
wire   [31:0] grp_fu_199_p0;
wire   [31:0] grp_fu_202_p0;
wire   [31:0] grp_fu_205_p0;
wire   [31:0] grp_fu_208_p0;
wire   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_214_p0;
wire   [31:0] grp_fu_217_p0;
wire   [31:0] grp_fu_220_p0;
wire   [63:0] grp_fu_193_p1;
wire   [63:0] ireg_fu_268_p1;
wire   [10:0] exp_tmp_fu_284_p4;
wire   [51:0] trunc_ln574_fu_298_p1;
wire   [52:0] p_Result_3_fu_302_p3;
wire   [53:0] zext_ln578_fu_310_p1;
wire   [0:0] p_Result_2_fu_276_p3;
wire   [53:0] man_V_1_fu_314_p2;
wire   [62:0] trunc_ln564_fu_272_p1;
wire   [11:0] zext_ln501_fu_294_p1;
wire   [11:0] F2_fu_334_p2;
wire   [63:0] grp_fu_196_p1;
wire   [63:0] ireg_1_fu_368_p1;
wire   [10:0] exp_tmp_1_fu_384_p4;
wire   [51:0] trunc_ln574_1_fu_398_p1;
wire   [52:0] p_Result_5_fu_402_p3;
wire   [53:0] zext_ln578_1_fu_410_p1;
wire   [0:0] p_Result_4_fu_376_p3;
wire   [53:0] man_V_4_fu_414_p2;
wire   [62:0] trunc_ln564_1_fu_372_p1;
wire   [11:0] zext_ln501_1_fu_394_p1;
wire   [11:0] F2_1_fu_434_p2;
wire   [63:0] grp_fu_199_p1;
wire   [63:0] ireg_2_fu_468_p1;
wire   [10:0] exp_tmp_2_fu_484_p4;
wire   [51:0] trunc_ln574_2_fu_498_p1;
wire   [52:0] p_Result_7_fu_502_p3;
wire   [53:0] zext_ln578_2_fu_510_p1;
wire   [0:0] p_Result_6_fu_476_p3;
wire   [53:0] man_V_7_fu_514_p2;
wire   [62:0] trunc_ln564_2_fu_472_p1;
wire   [11:0] zext_ln501_2_fu_494_p1;
wire   [11:0] F2_2_fu_534_p2;
wire   [63:0] grp_fu_202_p1;
wire   [63:0] ireg_3_fu_568_p1;
wire   [10:0] exp_tmp_3_fu_584_p4;
wire   [51:0] trunc_ln574_3_fu_598_p1;
wire   [52:0] p_Result_9_fu_602_p3;
wire   [53:0] zext_ln578_3_fu_610_p1;
wire   [0:0] p_Result_8_fu_576_p3;
wire   [53:0] man_V_10_fu_614_p2;
wire   [62:0] trunc_ln564_3_fu_572_p1;
wire   [11:0] zext_ln501_3_fu_594_p1;
wire   [11:0] F2_3_fu_634_p2;
wire   [63:0] grp_fu_205_p1;
wire   [63:0] ireg_4_fu_668_p1;
wire   [10:0] exp_tmp_4_fu_684_p4;
wire   [51:0] trunc_ln574_4_fu_698_p1;
wire   [52:0] p_Result_11_fu_702_p3;
wire   [53:0] zext_ln578_4_fu_710_p1;
wire   [0:0] p_Result_10_fu_676_p3;
wire   [53:0] man_V_13_fu_714_p2;
wire   [62:0] trunc_ln564_4_fu_672_p1;
wire   [11:0] zext_ln501_4_fu_694_p1;
wire   [11:0] F2_4_fu_734_p2;
wire   [63:0] grp_fu_208_p1;
wire   [63:0] ireg_5_fu_768_p1;
wire   [10:0] exp_tmp_5_fu_784_p4;
wire   [51:0] trunc_ln574_5_fu_798_p1;
wire   [52:0] p_Result_13_fu_802_p3;
wire   [53:0] zext_ln578_5_fu_810_p1;
wire   [0:0] p_Result_12_fu_776_p3;
wire   [53:0] man_V_16_fu_814_p2;
wire   [62:0] trunc_ln564_5_fu_772_p1;
wire   [11:0] zext_ln501_5_fu_794_p1;
wire   [11:0] F2_5_fu_834_p2;
wire   [63:0] grp_fu_211_p1;
wire   [63:0] ireg_6_fu_868_p1;
wire   [10:0] exp_tmp_6_fu_884_p4;
wire   [51:0] trunc_ln574_6_fu_898_p1;
wire   [52:0] p_Result_15_fu_902_p3;
wire   [53:0] zext_ln578_6_fu_910_p1;
wire   [0:0] p_Result_14_fu_876_p3;
wire   [53:0] man_V_19_fu_914_p2;
wire   [62:0] trunc_ln564_6_fu_872_p1;
wire   [11:0] zext_ln501_6_fu_894_p1;
wire   [11:0] F2_6_fu_934_p2;
wire   [63:0] grp_fu_214_p1;
wire   [63:0] ireg_7_fu_968_p1;
wire   [10:0] exp_tmp_7_fu_984_p4;
wire   [51:0] trunc_ln574_7_fu_998_p1;
wire   [52:0] p_Result_17_fu_1002_p3;
wire   [53:0] zext_ln578_7_fu_1010_p1;
wire   [0:0] p_Result_16_fu_976_p3;
wire   [53:0] man_V_22_fu_1014_p2;
wire   [62:0] trunc_ln564_7_fu_972_p1;
wire   [11:0] zext_ln501_7_fu_994_p1;
wire   [11:0] F2_7_fu_1034_p2;
wire   [63:0] grp_fu_217_p1;
wire   [63:0] ireg_8_fu_1068_p1;
wire   [10:0] exp_tmp_8_fu_1084_p4;
wire   [51:0] trunc_ln574_8_fu_1098_p1;
wire   [52:0] p_Result_19_fu_1102_p3;
wire   [53:0] zext_ln578_8_fu_1110_p1;
wire   [0:0] p_Result_18_fu_1076_p3;
wire   [53:0] man_V_25_fu_1114_p2;
wire   [62:0] trunc_ln564_8_fu_1072_p1;
wire   [11:0] zext_ln501_8_fu_1094_p1;
wire   [11:0] F2_8_fu_1134_p2;
wire   [63:0] grp_fu_220_p1;
wire   [63:0] ireg_9_fu_1168_p1;
wire   [10:0] exp_tmp_9_fu_1184_p4;
wire   [51:0] trunc_ln574_9_fu_1198_p1;
wire   [52:0] p_Result_21_fu_1202_p3;
wire   [53:0] zext_ln578_9_fu_1210_p1;
wire   [0:0] p_Result_20_fu_1176_p3;
wire   [53:0] man_V_28_fu_1214_p2;
wire   [62:0] trunc_ln564_9_fu_1172_p1;
wire   [11:0] zext_ln501_9_fu_1194_p1;
wire   [11:0] F2_9_fu_1234_p2;
wire  signed [11:0] sh_amt_fu_1268_p3;
wire   [6:0] tmp_fu_1283_p4;
wire  signed [31:0] sext_ln590_fu_1273_p1;
wire   [0:0] icmp_ln612_fu_1293_p2;
wire   [31:0] shl_ln613_fu_1299_p2;
wire   [53:0] zext_ln595_fu_1312_p1;
wire   [53:0] ashr_ln595_fu_1316_p2;
wire   [0:0] tmp_11_fu_1325_p3;
wire   [0:0] xor_ln580_fu_1340_p2;
wire   [0:0] and_ln591_fu_1345_p2;
wire   [31:0] select_ln597_fu_1332_p3;
wire   [0:0] or_ln591_fu_1357_p2;
wire   [0:0] or_ln590_fu_1361_p2;
wire   [31:0] select_ln591_fu_1350_p3;
wire   [31:0] select_ln612_fu_1304_p3;
wire   [0:0] icmp_ln594_fu_1277_p2;
wire   [0:0] xor_ln591_fu_1374_p2;
wire   [0:0] and_ln594_fu_1380_p2;
wire   [0:0] and_ln594_1_fu_1386_p2;
wire   [31:0] trunc_ln595_fu_1321_p1;
wire   [31:0] select_ln590_fu_1366_p3;
wire   [31:0] select_ln594_fu_1391_p3;
wire  signed [11:0] sh_amt_1_fu_1406_p3;
wire   [6:0] tmp_14_fu_1421_p4;
wire  signed [31:0] sext_ln590_1_fu_1411_p1;
wire   [0:0] icmp_ln612_1_fu_1431_p2;
wire   [31:0] shl_ln613_1_fu_1437_p2;
wire   [53:0] zext_ln595_1_fu_1450_p1;
wire   [53:0] ashr_ln595_1_fu_1454_p2;
wire   [0:0] tmp_15_fu_1463_p3;
wire   [0:0] xor_ln580_1_fu_1478_p2;
wire   [0:0] and_ln591_1_fu_1483_p2;
wire   [31:0] select_ln597_1_fu_1470_p3;
wire   [0:0] or_ln591_1_fu_1495_p2;
wire   [0:0] or_ln590_1_fu_1499_p2;
wire   [31:0] select_ln591_1_fu_1488_p3;
wire   [31:0] select_ln612_1_fu_1442_p3;
wire   [0:0] icmp_ln594_1_fu_1415_p2;
wire   [0:0] xor_ln591_1_fu_1512_p2;
wire   [0:0] and_ln594_2_fu_1518_p2;
wire   [0:0] and_ln594_3_fu_1524_p2;
wire   [31:0] trunc_ln595_1_fu_1459_p1;
wire   [31:0] select_ln590_2_fu_1504_p3;
wire   [31:0] select_ln594_1_fu_1529_p3;
wire  signed [11:0] sh_amt_2_fu_1544_p3;
wire   [6:0] tmp_18_fu_1559_p4;
wire  signed [31:0] sext_ln590_2_fu_1549_p1;
wire   [0:0] icmp_ln612_2_fu_1569_p2;
wire   [31:0] shl_ln613_2_fu_1575_p2;
wire   [53:0] zext_ln595_2_fu_1588_p1;
wire   [53:0] ashr_ln595_2_fu_1592_p2;
wire   [0:0] tmp_19_fu_1601_p3;
wire   [0:0] xor_ln580_2_fu_1616_p2;
wire   [0:0] and_ln591_2_fu_1621_p2;
wire   [31:0] select_ln597_2_fu_1608_p3;
wire   [0:0] or_ln591_2_fu_1633_p2;
wire   [0:0] or_ln590_2_fu_1637_p2;
wire   [31:0] select_ln591_2_fu_1626_p3;
wire   [31:0] select_ln612_2_fu_1580_p3;
wire   [0:0] icmp_ln594_2_fu_1553_p2;
wire   [0:0] xor_ln591_2_fu_1650_p2;
wire   [0:0] and_ln594_4_fu_1656_p2;
wire   [0:0] and_ln594_5_fu_1662_p2;
wire   [31:0] trunc_ln595_2_fu_1597_p1;
wire   [31:0] select_ln590_4_fu_1642_p3;
wire   [31:0] select_ln594_2_fu_1667_p3;
wire  signed [11:0] sh_amt_3_fu_1682_p3;
wire   [6:0] tmp_22_fu_1697_p4;
wire  signed [31:0] sext_ln590_3_fu_1687_p1;
wire   [0:0] icmp_ln612_3_fu_1707_p2;
wire   [31:0] shl_ln613_3_fu_1713_p2;
wire   [53:0] zext_ln595_3_fu_1726_p1;
wire   [53:0] ashr_ln595_3_fu_1730_p2;
wire   [0:0] tmp_23_fu_1739_p3;
wire   [0:0] xor_ln580_3_fu_1754_p2;
wire   [0:0] and_ln591_3_fu_1759_p2;
wire   [31:0] select_ln597_3_fu_1746_p3;
wire   [0:0] or_ln591_3_fu_1771_p2;
wire   [0:0] or_ln590_3_fu_1775_p2;
wire   [31:0] select_ln591_3_fu_1764_p3;
wire   [31:0] select_ln612_3_fu_1718_p3;
wire   [0:0] icmp_ln594_3_fu_1691_p2;
wire   [0:0] xor_ln591_3_fu_1788_p2;
wire   [0:0] and_ln594_6_fu_1794_p2;
wire   [0:0] and_ln594_7_fu_1800_p2;
wire   [31:0] trunc_ln595_3_fu_1735_p1;
wire   [31:0] select_ln590_6_fu_1780_p3;
wire   [31:0] select_ln594_3_fu_1805_p3;
wire  signed [11:0] sh_amt_4_fu_1820_p3;
wire   [6:0] tmp_26_fu_1835_p4;
wire  signed [31:0] sext_ln590_4_fu_1825_p1;
wire   [0:0] icmp_ln612_4_fu_1845_p2;
wire   [31:0] shl_ln613_4_fu_1851_p2;
wire   [53:0] zext_ln595_4_fu_1864_p1;
wire   [53:0] ashr_ln595_4_fu_1868_p2;
wire   [0:0] tmp_27_fu_1877_p3;
wire   [0:0] xor_ln580_4_fu_1892_p2;
wire   [0:0] and_ln591_4_fu_1897_p2;
wire   [31:0] select_ln597_4_fu_1884_p3;
wire   [0:0] or_ln591_4_fu_1909_p2;
wire   [0:0] or_ln590_4_fu_1913_p2;
wire   [31:0] select_ln591_4_fu_1902_p3;
wire   [31:0] select_ln612_4_fu_1856_p3;
wire   [0:0] icmp_ln594_4_fu_1829_p2;
wire   [0:0] xor_ln591_4_fu_1926_p2;
wire   [0:0] and_ln594_8_fu_1932_p2;
wire   [0:0] and_ln594_9_fu_1938_p2;
wire   [31:0] trunc_ln595_4_fu_1873_p1;
wire   [31:0] select_ln590_8_fu_1918_p3;
wire   [31:0] select_ln594_4_fu_1943_p3;
wire  signed [11:0] sh_amt_5_fu_1958_p3;
wire   [6:0] tmp_30_fu_1973_p4;
wire  signed [31:0] sext_ln590_5_fu_1963_p1;
wire   [0:0] icmp_ln612_5_fu_1983_p2;
wire   [31:0] shl_ln613_5_fu_1989_p2;
wire   [53:0] zext_ln595_5_fu_2002_p1;
wire   [53:0] ashr_ln595_5_fu_2006_p2;
wire   [0:0] tmp_31_fu_2015_p3;
wire   [0:0] xor_ln580_5_fu_2030_p2;
wire   [0:0] and_ln591_5_fu_2035_p2;
wire   [31:0] select_ln597_5_fu_2022_p3;
wire   [0:0] or_ln591_5_fu_2047_p2;
wire   [0:0] or_ln590_5_fu_2051_p2;
wire   [31:0] select_ln591_5_fu_2040_p3;
wire   [31:0] select_ln612_5_fu_1994_p3;
wire   [0:0] icmp_ln594_5_fu_1967_p2;
wire   [0:0] xor_ln591_5_fu_2064_p2;
wire   [0:0] and_ln594_10_fu_2070_p2;
wire   [0:0] and_ln594_11_fu_2076_p2;
wire   [31:0] trunc_ln595_5_fu_2011_p1;
wire   [31:0] select_ln590_10_fu_2056_p3;
wire   [31:0] select_ln594_5_fu_2081_p3;
wire  signed [11:0] sh_amt_6_fu_2096_p3;
wire   [6:0] tmp_34_fu_2111_p4;
wire  signed [31:0] sext_ln590_6_fu_2101_p1;
wire   [0:0] icmp_ln612_6_fu_2121_p2;
wire   [31:0] shl_ln613_6_fu_2127_p2;
wire   [53:0] zext_ln595_6_fu_2140_p1;
wire   [53:0] ashr_ln595_6_fu_2144_p2;
wire   [0:0] tmp_35_fu_2153_p3;
wire   [0:0] xor_ln580_6_fu_2168_p2;
wire   [0:0] and_ln591_6_fu_2173_p2;
wire   [31:0] select_ln597_6_fu_2160_p3;
wire   [0:0] or_ln591_6_fu_2185_p2;
wire   [0:0] or_ln590_6_fu_2189_p2;
wire   [31:0] select_ln591_6_fu_2178_p3;
wire   [31:0] select_ln612_6_fu_2132_p3;
wire   [0:0] icmp_ln594_6_fu_2105_p2;
wire   [0:0] xor_ln591_6_fu_2202_p2;
wire   [0:0] and_ln594_12_fu_2208_p2;
wire   [0:0] and_ln594_13_fu_2214_p2;
wire   [31:0] trunc_ln595_6_fu_2149_p1;
wire   [31:0] select_ln590_12_fu_2194_p3;
wire   [31:0] select_ln594_6_fu_2219_p3;
wire  signed [11:0] sh_amt_7_fu_2234_p3;
wire   [6:0] tmp_38_fu_2249_p4;
wire  signed [31:0] sext_ln590_7_fu_2239_p1;
wire   [0:0] icmp_ln612_7_fu_2259_p2;
wire   [31:0] shl_ln613_7_fu_2265_p2;
wire   [53:0] zext_ln595_7_fu_2278_p1;
wire   [53:0] ashr_ln595_7_fu_2282_p2;
wire   [0:0] tmp_39_fu_2291_p3;
wire   [0:0] xor_ln580_7_fu_2306_p2;
wire   [0:0] and_ln591_7_fu_2311_p2;
wire   [31:0] select_ln597_7_fu_2298_p3;
wire   [0:0] or_ln591_7_fu_2323_p2;
wire   [0:0] or_ln590_7_fu_2327_p2;
wire   [31:0] select_ln591_7_fu_2316_p3;
wire   [31:0] select_ln612_7_fu_2270_p3;
wire   [0:0] icmp_ln594_7_fu_2243_p2;
wire   [0:0] xor_ln591_7_fu_2340_p2;
wire   [0:0] and_ln594_14_fu_2346_p2;
wire   [0:0] and_ln594_15_fu_2352_p2;
wire   [31:0] trunc_ln595_7_fu_2287_p1;
wire   [31:0] select_ln590_14_fu_2332_p3;
wire   [31:0] select_ln594_7_fu_2357_p3;
wire  signed [11:0] sh_amt_8_fu_2372_p3;
wire   [6:0] tmp_42_fu_2387_p4;
wire  signed [31:0] sext_ln590_8_fu_2377_p1;
wire   [0:0] icmp_ln612_8_fu_2397_p2;
wire   [31:0] shl_ln613_8_fu_2403_p2;
wire   [53:0] zext_ln595_8_fu_2416_p1;
wire   [53:0] ashr_ln595_8_fu_2420_p2;
wire   [0:0] tmp_43_fu_2429_p3;
wire   [0:0] xor_ln580_8_fu_2444_p2;
wire   [0:0] and_ln591_8_fu_2449_p2;
wire   [31:0] select_ln597_8_fu_2436_p3;
wire   [0:0] or_ln591_8_fu_2461_p2;
wire   [0:0] or_ln590_8_fu_2465_p2;
wire   [31:0] select_ln591_8_fu_2454_p3;
wire   [31:0] select_ln612_8_fu_2408_p3;
wire   [0:0] icmp_ln594_8_fu_2381_p2;
wire   [0:0] xor_ln591_8_fu_2478_p2;
wire   [0:0] and_ln594_16_fu_2484_p2;
wire   [0:0] and_ln594_17_fu_2490_p2;
wire   [31:0] trunc_ln595_8_fu_2425_p1;
wire   [31:0] select_ln590_16_fu_2470_p3;
wire   [31:0] select_ln594_8_fu_2495_p3;
wire  signed [11:0] sh_amt_9_fu_2510_p3;
wire   [6:0] tmp_46_fu_2525_p4;
wire  signed [31:0] sext_ln590_9_fu_2515_p1;
wire   [0:0] icmp_ln612_9_fu_2535_p2;
wire   [31:0] shl_ln613_9_fu_2541_p2;
wire   [53:0] zext_ln595_9_fu_2554_p1;
wire   [53:0] ashr_ln595_9_fu_2558_p2;
wire   [0:0] tmp_47_fu_2567_p3;
wire   [0:0] xor_ln580_9_fu_2582_p2;
wire   [0:0] and_ln591_9_fu_2587_p2;
wire   [31:0] select_ln597_9_fu_2574_p3;
wire   [0:0] or_ln591_9_fu_2599_p2;
wire   [0:0] or_ln590_9_fu_2603_p2;
wire   [31:0] select_ln591_9_fu_2592_p3;
wire   [31:0] select_ln612_9_fu_2546_p3;
wire   [0:0] icmp_ln594_9_fu_2519_p2;
wire   [0:0] xor_ln591_9_fu_2616_p2;
wire   [0:0] and_ln594_18_fu_2622_p2;
wire   [0:0] and_ln594_19_fu_2628_p2;
wire   [31:0] trunc_ln595_9_fu_2563_p1;
wire   [31:0] select_ln590_18_fu_2608_p3;
wire   [31:0] select_ln594_9_fu_2633_p3;
reg   [31:0] p_Result_23_fu_2671_p4;
reg   [31:0] l_fu_2681_p3;
wire   [31:0] lsb_index_fu_2695_p2;
wire   [30:0] tmp_49_fu_2701_p4;
wire   [5:0] trunc_ln1000_fu_2717_p1;
wire   [5:0] sub_ln1000_fu_2721_p2;
wire   [31:0] zext_ln1000_fu_2727_p1;
wire   [31:0] lshr_ln1000_fu_2731_p2;
wire   [31:0] shl_ln1002_fu_2737_p2;
wire   [31:0] or_ln1002_1_fu_2743_p2;
wire   [31:0] and_ln1002_fu_2749_p2;
wire   [0:0] tmp_50_fu_2761_p3;
wire   [0:0] p_Result_24_fu_2775_p3;
wire   [0:0] xor_ln1002_fu_2769_p2;
wire   [0:0] icmp_ln999_fu_2711_p2;
wire   [0:0] icmp_ln1002_fu_2755_p2;
wire   [0:0] select_ln999_fu_2795_p3;
wire   [0:0] and_ln1002_1_fu_2789_p2;
wire   [31:0] sub_ln1012_fu_2818_p2;
wire   [63:0] zext_ln1010_fu_2815_p1;
wire   [63:0] zext_ln1012_fu_2823_p1;
wire   [31:0] add_ln1011_fu_2833_p2;
wire   [63:0] zext_ln1011_fu_2838_p1;
wire   [63:0] lshr_ln1011_fu_2842_p2;
wire   [63:0] shl_ln1012_fu_2827_p2;
wire   [63:0] m_fu_2848_p3;
wire   [63:0] zext_ln1014_fu_2855_p1;
wire   [63:0] m_2_fu_2858_p2;
wire   [62:0] m_5_fu_2864_p4;
wire   [0:0] p_Result_s_fu_2878_p3;
wire   [7:0] sub_ln1017_fu_2894_p2;
wire   [7:0] select_ln996_fu_2886_p3;
wire   [7:0] add_ln1017_fu_2899_p2;
wire   [63:0] zext_ln1015_fu_2874_p1;
wire   [8:0] tmp_9_fu_2905_p3;
wire   [63:0] p_Result_25_fu_2912_p5;
wire   [31:0] LD_10_fu_2924_p1;
reg    grp_fu_193_ce;
reg    grp_fu_196_ce;
reg    grp_fu_199_ce;
reg    grp_fu_202_ce;
reg    grp_fu_205_ce;
reg    grp_fu_208_ce;
reg    grp_fu_211_ce;
reg    grp_fu_214_ce;
reg    grp_fu_217_ce;
reg    grp_fu_220_ce;
reg   [16:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    regslice_both_out_r_V_data_V_U_apdone_blk;
reg    ap_block_state17;
wire    regslice_both_in_r_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_V_data_V_U_ack_in;
wire    regslice_both_in_r_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_r_V_keep_V_U_vld_out;
wire    regslice_both_in_r_V_keep_V_U_ack_in;
wire    regslice_both_in_r_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_r_V_strb_V_U_vld_out;
wire    regslice_both_in_r_V_strb_V_U_ack_in;
wire    regslice_both_in_r_V_user_V_U_apdone_blk;
wire   [0:0] in_r_TUSER_int_regslice;
wire    regslice_both_in_r_V_user_V_U_vld_out;
wire    regslice_both_in_r_V_user_V_U_ack_in;
wire    regslice_both_in_r_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_r_V_last_V_U_vld_out;
wire    regslice_both_in_r_V_last_V_U_ack_in;
wire    regslice_both_in_r_V_id_V_U_apdone_blk;
wire   [0:0] in_r_TID_int_regslice;
wire    regslice_both_in_r_V_id_V_U_vld_out;
wire    regslice_both_in_r_V_id_V_U_ack_in;
wire    regslice_both_in_r_V_dest_V_U_apdone_blk;
wire   [0:0] in_r_TDEST_int_regslice;
wire    regslice_both_in_r_V_dest_V_U_vld_out;
wire    regslice_both_in_r_V_dest_V_U_ack_in;
wire   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_V_data_V_U_vld_out;
wire    regslice_both_out_r_V_keep_V_U_apdone_blk;
wire    regslice_both_out_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_keep_V_U_vld_out;
wire    regslice_both_out_r_V_strb_V_U_apdone_blk;
wire    regslice_both_out_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_strb_V_U_vld_out;
wire    regslice_both_out_r_V_user_V_U_apdone_blk;
wire    regslice_both_out_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_user_V_U_vld_out;
wire    regslice_both_out_r_V_last_V_U_apdone_blk;
wire    regslice_both_out_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_last_V_U_vld_out;
wire    regslice_both_out_r_V_id_V_U_apdone_blk;
wire    regslice_both_out_r_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_id_V_U_vld_out;
wire    regslice_both_out_r_V_dest_V_U_apdone_blk;
wire    regslice_both_out_r_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

myproject_axi_myproject out_local_V_myproject_fu_179(
    .ap_ready(out_local_V_myproject_fu_179_ap_ready),
    .p_read(in_local_V_reg_3455),
    .p_read1(in_local_V_1_reg_3460),
    .p_read2(in_local_V_2_reg_3465),
    .p_read3(in_local_V_3_reg_3470),
    .p_read4(in_local_V_4_reg_3475),
    .p_read5(in_local_V_5_reg_3480),
    .p_read6(in_local_V_6_reg_3485),
    .p_read7(in_local_V_7_reg_3490),
    .p_read8(in_local_V_8_reg_3495),
    .p_read9(in_local_V_9_reg_3500),
    .ap_return(out_local_V_myproject_fu_179_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_193_p0),
    .ce(grp_fu_193_ce),
    .dout(grp_fu_193_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_196_p0),
    .ce(grp_fu_196_ce),
    .dout(grp_fu_196_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_199_p0),
    .ce(grp_fu_199_ce),
    .dout(grp_fu_199_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_202_p0),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_205_p0),
    .ce(grp_fu_205_ce),
    .dout(grp_fu_205_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_208_p0),
    .ce(grp_fu_208_ce),
    .dout(grp_fu_208_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_211_p0),
    .ce(grp_fu_211_ce),
    .dout(grp_fu_211_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_214_p0),
    .ce(grp_fu_214_ce),
    .dout(grp_fu_214_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_217_p0),
    .ce(grp_fu_217_ce),
    .dout(grp_fu_217_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_220_p0),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_r_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_r_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TUSER),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_user_V_U_ack_in),
    .data_out(in_r_TUSER_int_regslice),
    .vld_out(regslice_both_in_r_V_user_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_user_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_r_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TID),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_id_V_U_ack_in),
    .data_out(in_r_TID_int_regslice),
    .vld_out(regslice_both_in_r_V_id_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_id_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDEST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_dest_V_U_ack_in),
    .data_out(in_r_TDEST_int_regslice),
    .vld_out(regslice_both_in_r_V_dest_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_dest_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_r_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_r_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_user_V_U_ack_in_dummy),
    .data_out(out_r_TUSER),
    .vld_out(regslice_both_out_r_V_user_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_user_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd1),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_r_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_id_V_U_ack_in_dummy),
    .data_out(out_r_TID),
    .vld_out(regslice_both_out_r_V_id_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_id_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_dest_V_U_ack_in_dummy),
    .data_out(out_r_TDEST),
    .vld_out(regslice_both_out_r_V_dest_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln590_1_reg_3105 <= add_ln590_1_fu_446_p2;
        add_ln590_2_reg_3146 <= add_ln590_2_fu_546_p2;
        add_ln590_3_reg_3187 <= add_ln590_3_fu_646_p2;
        add_ln590_4_reg_3228 <= add_ln590_4_fu_746_p2;
        add_ln590_5_reg_3269 <= add_ln590_5_fu_846_p2;
        add_ln590_6_reg_3310 <= add_ln590_6_fu_946_p2;
        add_ln590_7_reg_3351 <= add_ln590_7_fu_1046_p2;
        add_ln590_8_reg_3392 <= add_ln590_8_fu_1146_p2;
        add_ln590_9_reg_3433 <= add_ln590_9_fu_1246_p2;
        add_ln590_reg_3064 <= add_ln590_fu_346_p2;
        icmp_ln580_1_reg_3091 <= icmp_ln580_1_fu_428_p2;
        icmp_ln580_2_reg_3132 <= icmp_ln580_2_fu_528_p2;
        icmp_ln580_3_reg_3173 <= icmp_ln580_3_fu_628_p2;
        icmp_ln580_4_reg_3214 <= icmp_ln580_4_fu_728_p2;
        icmp_ln580_5_reg_3255 <= icmp_ln580_5_fu_828_p2;
        icmp_ln580_6_reg_3296 <= icmp_ln580_6_fu_928_p2;
        icmp_ln580_7_reg_3337 <= icmp_ln580_7_fu_1028_p2;
        icmp_ln580_8_reg_3378 <= icmp_ln580_8_fu_1128_p2;
        icmp_ln580_9_reg_3419 <= icmp_ln580_9_fu_1228_p2;
        icmp_ln580_reg_3050 <= icmp_ln580_fu_328_p2;
        icmp_ln590_1_reg_3098 <= icmp_ln590_1_fu_440_p2;
        icmp_ln590_2_reg_3139 <= icmp_ln590_2_fu_540_p2;
        icmp_ln590_3_reg_3180 <= icmp_ln590_3_fu_640_p2;
        icmp_ln590_4_reg_3221 <= icmp_ln590_4_fu_740_p2;
        icmp_ln590_5_reg_3262 <= icmp_ln590_5_fu_840_p2;
        icmp_ln590_6_reg_3303 <= icmp_ln590_6_fu_940_p2;
        icmp_ln590_7_reg_3344 <= icmp_ln590_7_fu_1040_p2;
        icmp_ln590_8_reg_3385 <= icmp_ln590_8_fu_1140_p2;
        icmp_ln590_9_reg_3426 <= icmp_ln590_9_fu_1240_p2;
        icmp_ln590_reg_3057 <= icmp_ln590_fu_340_p2;
        icmp_ln591_1_reg_3115 <= icmp_ln591_1_fu_458_p2;
        icmp_ln591_2_reg_3156 <= icmp_ln591_2_fu_558_p2;
        icmp_ln591_3_reg_3197 <= icmp_ln591_3_fu_658_p2;
        icmp_ln591_4_reg_3238 <= icmp_ln591_4_fu_758_p2;
        icmp_ln591_5_reg_3279 <= icmp_ln591_5_fu_858_p2;
        icmp_ln591_6_reg_3320 <= icmp_ln591_6_fu_958_p2;
        icmp_ln591_7_reg_3361 <= icmp_ln591_7_fu_1058_p2;
        icmp_ln591_8_reg_3402 <= icmp_ln591_8_fu_1158_p2;
        icmp_ln591_9_reg_3443 <= icmp_ln591_9_fu_1258_p2;
        icmp_ln591_reg_3074 <= icmp_ln591_fu_358_p2;
        man_V_11_reg_3168 <= man_V_11_fu_620_p3;
        man_V_14_reg_3209 <= man_V_14_fu_720_p3;
        man_V_17_reg_3250 <= man_V_17_fu_820_p3;
        man_V_20_reg_3291 <= man_V_20_fu_920_p3;
        man_V_23_reg_3332 <= man_V_23_fu_1020_p3;
        man_V_26_reg_3373 <= man_V_26_fu_1120_p3;
        man_V_29_reg_3414 <= man_V_29_fu_1220_p3;
        man_V_2_reg_3045 <= man_V_2_fu_320_p3;
        man_V_5_reg_3086 <= man_V_5_fu_420_p3;
        man_V_8_reg_3127 <= man_V_8_fu_520_p3;
        sub_ln590_1_reg_3110 <= sub_ln590_1_fu_452_p2;
        sub_ln590_2_reg_3151 <= sub_ln590_2_fu_552_p2;
        sub_ln590_3_reg_3192 <= sub_ln590_3_fu_652_p2;
        sub_ln590_4_reg_3233 <= sub_ln590_4_fu_752_p2;
        sub_ln590_5_reg_3274 <= sub_ln590_5_fu_852_p2;
        sub_ln590_6_reg_3315 <= sub_ln590_6_fu_952_p2;
        sub_ln590_7_reg_3356 <= sub_ln590_7_fu_1052_p2;
        sub_ln590_8_reg_3397 <= sub_ln590_8_fu_1152_p2;
        sub_ln590_9_reg_3438 <= sub_ln590_9_fu_1252_p2;
        sub_ln590_reg_3069 <= sub_ln590_fu_352_p2;
        trunc_ln592_1_reg_3121 <= trunc_ln592_1_fu_464_p1;
        trunc_ln592_2_reg_3162 <= trunc_ln592_2_fu_564_p1;
        trunc_ln592_3_reg_3203 <= trunc_ln592_3_fu_664_p1;
        trunc_ln592_4_reg_3244 <= trunc_ln592_4_fu_764_p1;
        trunc_ln592_5_reg_3285 <= trunc_ln592_5_fu_864_p1;
        trunc_ln592_6_reg_3326 <= trunc_ln592_6_fu_964_p1;
        trunc_ln592_7_reg_3367 <= trunc_ln592_7_fu_1064_p1;
        trunc_ln592_8_reg_3408 <= trunc_ln592_8_fu_1164_p1;
        trunc_ln592_9_reg_3449 <= trunc_ln592_9_fu_1264_p1;
        trunc_ln592_reg_3080 <= trunc_ln592_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln1011_reg_3539 <= icmp_ln1011_fu_2783_p2;
        icmp_ln988_reg_3523 <= icmp_ln988_fu_2661_p2;
        select_ln1011_reg_3544 <= select_ln1011_fu_2803_p3;
        sub_ln997_reg_3533 <= sub_ln997_fu_2689_p2;
        tmp_V_3_reg_3528 <= tmp_V_3_fu_2666_p3;
        trunc_ln996_reg_3549 <= trunc_ln996_fu_2811_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        in_local_V_1_reg_3460 <= in_local_V_1_fu_1537_p3;
        in_local_V_2_reg_3465 <= in_local_V_2_fu_1675_p3;
        in_local_V_3_reg_3470 <= in_local_V_3_fu_1813_p3;
        in_local_V_4_reg_3475 <= in_local_V_4_fu_1951_p3;
        in_local_V_5_reg_3480 <= in_local_V_5_fu_2089_p3;
        in_local_V_6_reg_3485 <= in_local_V_6_fu_2227_p3;
        in_local_V_7_reg_3490 <= in_local_V_7_fu_2365_p3;
        in_local_V_8_reg_3495 <= in_local_V_8_fu_2503_p3;
        in_local_V_9_reg_3500 <= in_local_V_9_fu_2641_p3;
        in_local_V_reg_3455 <= in_local_V_fu_1399_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_local_V_reg_3505 <= out_local_V_myproject_fu_179_ap_return;
        p_Result_22_reg_3512 <= out_local_V_myproject_fu_179_ap_return[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_0_reg_2936 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_1_reg_2948 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_2_reg_2954 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_3_reg_2960 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_4_reg_2966 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_5_reg_2972 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_6_reg_2978 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_7_reg_2984 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_8_reg_3035 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_s_reg_2942 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (p_Result_22_reg_3512 == 1'd1))) begin
        tmp_V_reg_3518 <= tmp_V_fu_2656_p2;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_193_ce = 1'b1;
    end else begin
        grp_fu_193_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_196_ce = 1'b1;
    end else begin
        grp_fu_196_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_199_ce = 1'b1;
    end else begin
        grp_fu_199_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_205_ce = 1'b1;
    end else begin
        grp_fu_205_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_208_ce = 1'b1;
    end else begin
        grp_fu_208_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_211_ce = 1'b1;
    end else begin
        grp_fu_211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_214_ce = 1'b1;
    end else begin
        grp_fu_214_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_217_ce = 1'b1;
    end else begin
        grp_fu_217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state10))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_434_p2 = (12'd1075 - zext_ln501_1_fu_394_p1);

assign F2_2_fu_534_p2 = (12'd1075 - zext_ln501_2_fu_494_p1);

assign F2_3_fu_634_p2 = (12'd1075 - zext_ln501_3_fu_594_p1);

assign F2_4_fu_734_p2 = (12'd1075 - zext_ln501_4_fu_694_p1);

assign F2_5_fu_834_p2 = (12'd1075 - zext_ln501_5_fu_794_p1);

assign F2_6_fu_934_p2 = (12'd1075 - zext_ln501_6_fu_894_p1);

assign F2_7_fu_1034_p2 = (12'd1075 - zext_ln501_7_fu_994_p1);

assign F2_8_fu_1134_p2 = (12'd1075 - zext_ln501_8_fu_1094_p1);

assign F2_9_fu_1234_p2 = (12'd1075 - zext_ln501_9_fu_1194_p1);

assign F2_fu_334_p2 = (12'd1075 - zext_ln501_fu_294_p1);

assign LD_10_fu_2924_p1 = p_Result_25_fu_2912_p5[31:0];

assign add_ln1011_fu_2833_p2 = ($signed(sub_ln997_reg_3533) + $signed(32'd4294967271));

assign add_ln1017_fu_2899_p2 = (sub_ln1017_fu_2894_p2 + select_ln996_fu_2886_p3);

assign add_ln590_1_fu_446_p2 = ($signed(F2_1_fu_434_p2) + $signed(12'd4080));

assign add_ln590_2_fu_546_p2 = ($signed(F2_2_fu_534_p2) + $signed(12'd4080));

assign add_ln590_3_fu_646_p2 = ($signed(F2_3_fu_634_p2) + $signed(12'd4080));

assign add_ln590_4_fu_746_p2 = ($signed(F2_4_fu_734_p2) + $signed(12'd4080));

assign add_ln590_5_fu_846_p2 = ($signed(F2_5_fu_834_p2) + $signed(12'd4080));

assign add_ln590_6_fu_946_p2 = ($signed(F2_6_fu_934_p2) + $signed(12'd4080));

assign add_ln590_7_fu_1046_p2 = ($signed(F2_7_fu_1034_p2) + $signed(12'd4080));

assign add_ln590_8_fu_1146_p2 = ($signed(F2_8_fu_1134_p2) + $signed(12'd4080));

assign add_ln590_9_fu_1246_p2 = ($signed(F2_9_fu_1234_p2) + $signed(12'd4080));

assign add_ln590_fu_346_p2 = ($signed(F2_fu_334_p2) + $signed(12'd4080));

assign and_ln1002_1_fu_2789_p2 = (xor_ln1002_fu_2769_p2 & p_Result_24_fu_2775_p3);

assign and_ln1002_fu_2749_p2 = (tmp_V_3_fu_2666_p3 & or_ln1002_1_fu_2743_p2);

assign and_ln591_1_fu_1483_p2 = (xor_ln580_1_fu_1478_p2 & icmp_ln591_1_reg_3115);

assign and_ln591_2_fu_1621_p2 = (xor_ln580_2_fu_1616_p2 & icmp_ln591_2_reg_3156);

assign and_ln591_3_fu_1759_p2 = (xor_ln580_3_fu_1754_p2 & icmp_ln591_3_reg_3197);

assign and_ln591_4_fu_1897_p2 = (xor_ln580_4_fu_1892_p2 & icmp_ln591_4_reg_3238);

assign and_ln591_5_fu_2035_p2 = (xor_ln580_5_fu_2030_p2 & icmp_ln591_5_reg_3279);

assign and_ln591_6_fu_2173_p2 = (xor_ln580_6_fu_2168_p2 & icmp_ln591_6_reg_3320);

assign and_ln591_7_fu_2311_p2 = (xor_ln580_7_fu_2306_p2 & icmp_ln591_7_reg_3361);

assign and_ln591_8_fu_2449_p2 = (xor_ln580_8_fu_2444_p2 & icmp_ln591_8_reg_3402);

assign and_ln591_9_fu_2587_p2 = (xor_ln580_9_fu_2582_p2 & icmp_ln591_9_reg_3443);

assign and_ln591_fu_1345_p2 = (xor_ln580_fu_1340_p2 & icmp_ln591_reg_3074);

assign and_ln594_10_fu_2070_p2 = (xor_ln591_5_fu_2064_p2 & icmp_ln594_5_fu_1967_p2);

assign and_ln594_11_fu_2076_p2 = (icmp_ln590_5_reg_3262 & and_ln594_10_fu_2070_p2);

assign and_ln594_12_fu_2208_p2 = (xor_ln591_6_fu_2202_p2 & icmp_ln594_6_fu_2105_p2);

assign and_ln594_13_fu_2214_p2 = (icmp_ln590_6_reg_3303 & and_ln594_12_fu_2208_p2);

assign and_ln594_14_fu_2346_p2 = (xor_ln591_7_fu_2340_p2 & icmp_ln594_7_fu_2243_p2);

assign and_ln594_15_fu_2352_p2 = (icmp_ln590_7_reg_3344 & and_ln594_14_fu_2346_p2);

assign and_ln594_16_fu_2484_p2 = (xor_ln591_8_fu_2478_p2 & icmp_ln594_8_fu_2381_p2);

assign and_ln594_17_fu_2490_p2 = (icmp_ln590_8_reg_3385 & and_ln594_16_fu_2484_p2);

assign and_ln594_18_fu_2622_p2 = (xor_ln591_9_fu_2616_p2 & icmp_ln594_9_fu_2519_p2);

assign and_ln594_19_fu_2628_p2 = (icmp_ln590_9_reg_3426 & and_ln594_18_fu_2622_p2);

assign and_ln594_1_fu_1386_p2 = (icmp_ln590_reg_3057 & and_ln594_fu_1380_p2);

assign and_ln594_2_fu_1518_p2 = (xor_ln591_1_fu_1512_p2 & icmp_ln594_1_fu_1415_p2);

assign and_ln594_3_fu_1524_p2 = (icmp_ln590_1_reg_3098 & and_ln594_2_fu_1518_p2);

assign and_ln594_4_fu_1656_p2 = (xor_ln591_2_fu_1650_p2 & icmp_ln594_2_fu_1553_p2);

assign and_ln594_5_fu_1662_p2 = (icmp_ln590_2_reg_3139 & and_ln594_4_fu_1656_p2);

assign and_ln594_6_fu_1794_p2 = (xor_ln591_3_fu_1788_p2 & icmp_ln594_3_fu_1691_p2);

assign and_ln594_7_fu_1800_p2 = (icmp_ln590_3_reg_3180 & and_ln594_6_fu_1794_p2);

assign and_ln594_8_fu_1932_p2 = (xor_ln591_4_fu_1926_p2 & icmp_ln594_4_fu_1829_p2);

assign and_ln594_9_fu_1938_p2 = (icmp_ln590_4_reg_3221 & and_ln594_8_fu_1932_p2);

assign and_ln594_fu_1380_p2 = (xor_ln591_fu_1374_p2 & icmp_ln594_fu_1277_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state17 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1));
end


assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln595_1_fu_1454_p2 = $signed(man_V_5_reg_3086) >>> zext_ln595_1_fu_1450_p1;

assign ashr_ln595_2_fu_1592_p2 = $signed(man_V_8_reg_3127) >>> zext_ln595_2_fu_1588_p1;

assign ashr_ln595_3_fu_1730_p2 = $signed(man_V_11_reg_3168) >>> zext_ln595_3_fu_1726_p1;

assign ashr_ln595_4_fu_1868_p2 = $signed(man_V_14_reg_3209) >>> zext_ln595_4_fu_1864_p1;

assign ashr_ln595_5_fu_2006_p2 = $signed(man_V_17_reg_3250) >>> zext_ln595_5_fu_2002_p1;

assign ashr_ln595_6_fu_2144_p2 = $signed(man_V_20_reg_3291) >>> zext_ln595_6_fu_2140_p1;

assign ashr_ln595_7_fu_2282_p2 = $signed(man_V_23_reg_3332) >>> zext_ln595_7_fu_2278_p1;

assign ashr_ln595_8_fu_2420_p2 = $signed(man_V_26_reg_3373) >>> zext_ln595_8_fu_2416_p1;

assign ashr_ln595_9_fu_2558_p2 = $signed(man_V_29_reg_3414) >>> zext_ln595_9_fu_2554_p1;

assign ashr_ln595_fu_1316_p2 = $signed(man_V_2_reg_3045) >>> zext_ln595_fu_1312_p1;

assign exp_tmp_1_fu_384_p4 = {{ireg_1_fu_368_p1[62:52]}};

assign exp_tmp_2_fu_484_p4 = {{ireg_2_fu_468_p1[62:52]}};

assign exp_tmp_3_fu_584_p4 = {{ireg_3_fu_568_p1[62:52]}};

assign exp_tmp_4_fu_684_p4 = {{ireg_4_fu_668_p1[62:52]}};

assign exp_tmp_5_fu_784_p4 = {{ireg_5_fu_768_p1[62:52]}};

assign exp_tmp_6_fu_884_p4 = {{ireg_6_fu_868_p1[62:52]}};

assign exp_tmp_7_fu_984_p4 = {{ireg_7_fu_968_p1[62:52]}};

assign exp_tmp_8_fu_1084_p4 = {{ireg_8_fu_1068_p1[62:52]}};

assign exp_tmp_9_fu_1184_p4 = {{ireg_9_fu_1168_p1[62:52]}};

assign exp_tmp_fu_284_p4 = {{ireg_fu_268_p1[62:52]}};

assign grp_fu_193_p0 = p_0_reg_2936;

assign grp_fu_196_p0 = p_s_reg_2942;

assign grp_fu_199_p0 = p_1_reg_2948;

assign grp_fu_202_p0 = p_2_reg_2954;

assign grp_fu_205_p0 = p_3_reg_2960;

assign grp_fu_208_p0 = p_4_reg_2966;

assign grp_fu_211_p0 = p_5_reg_2972;

assign grp_fu_214_p0 = p_6_reg_2978;

assign grp_fu_217_p0 = p_7_reg_2984;

assign grp_fu_220_p0 = in_r_TDATA_int_regslice;

assign icmp_ln1002_fu_2755_p2 = ((and_ln1002_fu_2749_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1011_fu_2783_p2 = (($signed(lsb_index_fu_2695_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_428_p2 = ((trunc_ln564_1_fu_372_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_528_p2 = ((trunc_ln564_2_fu_472_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_3_fu_628_p2 = ((trunc_ln564_3_fu_572_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_4_fu_728_p2 = ((trunc_ln564_4_fu_672_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_5_fu_828_p2 = ((trunc_ln564_5_fu_772_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_6_fu_928_p2 = ((trunc_ln564_6_fu_872_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_7_fu_1028_p2 = ((trunc_ln564_7_fu_972_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_8_fu_1128_p2 = ((trunc_ln564_8_fu_1072_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_9_fu_1228_p2 = ((trunc_ln564_9_fu_1172_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_328_p2 = ((trunc_ln564_fu_272_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_440_p2 = (($signed(F2_1_fu_434_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_2_fu_540_p2 = (($signed(F2_2_fu_534_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_3_fu_640_p2 = (($signed(F2_3_fu_634_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_4_fu_740_p2 = (($signed(F2_4_fu_734_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_5_fu_840_p2 = (($signed(F2_5_fu_834_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_6_fu_940_p2 = (($signed(F2_6_fu_934_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_7_fu_1040_p2 = (($signed(F2_7_fu_1034_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_8_fu_1140_p2 = (($signed(F2_8_fu_1134_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_9_fu_1240_p2 = (($signed(F2_9_fu_1234_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_340_p2 = (($signed(F2_fu_334_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_458_p2 = ((F2_1_fu_434_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_558_p2 = ((F2_2_fu_534_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_3_fu_658_p2 = ((F2_3_fu_634_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_4_fu_758_p2 = ((F2_4_fu_734_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_5_fu_858_p2 = ((F2_5_fu_834_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_6_fu_958_p2 = ((F2_6_fu_934_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_7_fu_1058_p2 = ((F2_7_fu_1034_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_8_fu_1158_p2 = ((F2_8_fu_1134_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_9_fu_1258_p2 = ((F2_9_fu_1234_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_358_p2 = ((F2_fu_334_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_1415_p2 = ((sh_amt_1_fu_1406_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_2_fu_1553_p2 = ((sh_amt_2_fu_1544_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_3_fu_1691_p2 = ((sh_amt_3_fu_1682_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_4_fu_1829_p2 = ((sh_amt_4_fu_1820_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_5_fu_1967_p2 = ((sh_amt_5_fu_1958_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_6_fu_2105_p2 = ((sh_amt_6_fu_2096_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_7_fu_2243_p2 = ((sh_amt_7_fu_2234_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_8_fu_2381_p2 = ((sh_amt_8_fu_2372_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_9_fu_2519_p2 = ((sh_amt_9_fu_2510_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_1277_p2 = ((sh_amt_fu_1268_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_1431_p2 = ((tmp_14_fu_1421_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_2_fu_1569_p2 = ((tmp_18_fu_1559_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_3_fu_1707_p2 = ((tmp_22_fu_1697_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_4_fu_1845_p2 = ((tmp_26_fu_1835_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_5_fu_1983_p2 = ((tmp_30_fu_1973_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_6_fu_2121_p2 = ((tmp_34_fu_2111_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_7_fu_2259_p2 = ((tmp_38_fu_2249_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_8_fu_2397_p2 = ((tmp_42_fu_2387_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_9_fu_2535_p2 = ((tmp_46_fu_2525_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_1293_p2 = ((tmp_fu_1283_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln988_fu_2661_p2 = ((out_local_V_reg_3505 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln999_fu_2711_p2 = (($signed(tmp_49_fu_2701_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_1537_p3 = ((icmp_ln580_1_reg_3091[0:0] == 1'b1) ? 32'd0 : select_ln594_1_fu_1529_p3);

assign in_local_V_2_fu_1675_p3 = ((icmp_ln580_2_reg_3132[0:0] == 1'b1) ? 32'd0 : select_ln594_2_fu_1667_p3);

assign in_local_V_3_fu_1813_p3 = ((icmp_ln580_3_reg_3173[0:0] == 1'b1) ? 32'd0 : select_ln594_3_fu_1805_p3);

assign in_local_V_4_fu_1951_p3 = ((icmp_ln580_4_reg_3214[0:0] == 1'b1) ? 32'd0 : select_ln594_4_fu_1943_p3);

assign in_local_V_5_fu_2089_p3 = ((icmp_ln580_5_reg_3255[0:0] == 1'b1) ? 32'd0 : select_ln594_5_fu_2081_p3);

assign in_local_V_6_fu_2227_p3 = ((icmp_ln580_6_reg_3296[0:0] == 1'b1) ? 32'd0 : select_ln594_6_fu_2219_p3);

assign in_local_V_7_fu_2365_p3 = ((icmp_ln580_7_reg_3337[0:0] == 1'b1) ? 32'd0 : select_ln594_7_fu_2357_p3);

assign in_local_V_8_fu_2503_p3 = ((icmp_ln580_8_reg_3378[0:0] == 1'b1) ? 32'd0 : select_ln594_8_fu_2495_p3);

assign in_local_V_9_fu_2641_p3 = ((icmp_ln580_9_reg_3419[0:0] == 1'b1) ? 32'd0 : select_ln594_9_fu_2633_p3);

assign in_local_V_fu_1399_p3 = ((icmp_ln580_reg_3050[0:0] == 1'b1) ? 32'd0 : select_ln594_fu_1391_p3);

assign in_r_TREADY = regslice_both_in_r_V_data_V_U_ack_in;

assign ireg_1_fu_368_p1 = grp_fu_196_p1;

assign ireg_2_fu_468_p1 = grp_fu_199_p1;

assign ireg_3_fu_568_p1 = grp_fu_202_p1;

assign ireg_4_fu_668_p1 = grp_fu_205_p1;

assign ireg_5_fu_768_p1 = grp_fu_208_p1;

assign ireg_6_fu_868_p1 = grp_fu_211_p1;

assign ireg_7_fu_968_p1 = grp_fu_214_p1;

assign ireg_8_fu_1068_p1 = grp_fu_217_p1;

assign ireg_9_fu_1168_p1 = grp_fu_220_p1;

assign ireg_fu_268_p1 = grp_fu_193_p1;


always @ (p_Result_23_fu_2671_p4) begin
    if (p_Result_23_fu_2671_p4[0] == 1'b1) begin
        l_fu_2681_p3 = 32'd0;
    end else if (p_Result_23_fu_2671_p4[1] == 1'b1) begin
        l_fu_2681_p3 = 32'd1;
    end else if (p_Result_23_fu_2671_p4[2] == 1'b1) begin
        l_fu_2681_p3 = 32'd2;
    end else if (p_Result_23_fu_2671_p4[3] == 1'b1) begin
        l_fu_2681_p3 = 32'd3;
    end else if (p_Result_23_fu_2671_p4[4] == 1'b1) begin
        l_fu_2681_p3 = 32'd4;
    end else if (p_Result_23_fu_2671_p4[5] == 1'b1) begin
        l_fu_2681_p3 = 32'd5;
    end else if (p_Result_23_fu_2671_p4[6] == 1'b1) begin
        l_fu_2681_p3 = 32'd6;
    end else if (p_Result_23_fu_2671_p4[7] == 1'b1) begin
        l_fu_2681_p3 = 32'd7;
    end else if (p_Result_23_fu_2671_p4[8] == 1'b1) begin
        l_fu_2681_p3 = 32'd8;
    end else if (p_Result_23_fu_2671_p4[9] == 1'b1) begin
        l_fu_2681_p3 = 32'd9;
    end else if (p_Result_23_fu_2671_p4[10] == 1'b1) begin
        l_fu_2681_p3 = 32'd10;
    end else if (p_Result_23_fu_2671_p4[11] == 1'b1) begin
        l_fu_2681_p3 = 32'd11;
    end else if (p_Result_23_fu_2671_p4[12] == 1'b1) begin
        l_fu_2681_p3 = 32'd12;
    end else if (p_Result_23_fu_2671_p4[13] == 1'b1) begin
        l_fu_2681_p3 = 32'd13;
    end else if (p_Result_23_fu_2671_p4[14] == 1'b1) begin
        l_fu_2681_p3 = 32'd14;
    end else if (p_Result_23_fu_2671_p4[15] == 1'b1) begin
        l_fu_2681_p3 = 32'd15;
    end else if (p_Result_23_fu_2671_p4[16] == 1'b1) begin
        l_fu_2681_p3 = 32'd16;
    end else if (p_Result_23_fu_2671_p4[17] == 1'b1) begin
        l_fu_2681_p3 = 32'd17;
    end else if (p_Result_23_fu_2671_p4[18] == 1'b1) begin
        l_fu_2681_p3 = 32'd18;
    end else if (p_Result_23_fu_2671_p4[19] == 1'b1) begin
        l_fu_2681_p3 = 32'd19;
    end else if (p_Result_23_fu_2671_p4[20] == 1'b1) begin
        l_fu_2681_p3 = 32'd20;
    end else if (p_Result_23_fu_2671_p4[21] == 1'b1) begin
        l_fu_2681_p3 = 32'd21;
    end else if (p_Result_23_fu_2671_p4[22] == 1'b1) begin
        l_fu_2681_p3 = 32'd22;
    end else if (p_Result_23_fu_2671_p4[23] == 1'b1) begin
        l_fu_2681_p3 = 32'd23;
    end else if (p_Result_23_fu_2671_p4[24] == 1'b1) begin
        l_fu_2681_p3 = 32'd24;
    end else if (p_Result_23_fu_2671_p4[25] == 1'b1) begin
        l_fu_2681_p3 = 32'd25;
    end else if (p_Result_23_fu_2671_p4[26] == 1'b1) begin
        l_fu_2681_p3 = 32'd26;
    end else if (p_Result_23_fu_2671_p4[27] == 1'b1) begin
        l_fu_2681_p3 = 32'd27;
    end else if (p_Result_23_fu_2671_p4[28] == 1'b1) begin
        l_fu_2681_p3 = 32'd28;
    end else if (p_Result_23_fu_2671_p4[29] == 1'b1) begin
        l_fu_2681_p3 = 32'd29;
    end else if (p_Result_23_fu_2671_p4[30] == 1'b1) begin
        l_fu_2681_p3 = 32'd30;
    end else if (p_Result_23_fu_2671_p4[31] == 1'b1) begin
        l_fu_2681_p3 = 32'd31;
    end else begin
        l_fu_2681_p3 = 32'd32;
    end
end

assign lsb_index_fu_2695_p2 = ($signed(sub_ln997_fu_2689_p2) + $signed(32'd4294967272));

assign lshr_ln1000_fu_2731_p2 = 32'd4294967295 >> zext_ln1000_fu_2727_p1;

assign lshr_ln1011_fu_2842_p2 = zext_ln1010_fu_2815_p1 >> zext_ln1011_fu_2838_p1;

assign m_2_fu_2858_p2 = (m_fu_2848_p3 + zext_ln1014_fu_2855_p1);

assign m_5_fu_2864_p4 = {{m_2_fu_2858_p2[63:1]}};

assign m_fu_2848_p3 = ((icmp_ln1011_reg_3539[0:0] == 1'b1) ? lshr_ln1011_fu_2842_p2 : shl_ln1012_fu_2827_p2);

assign man_V_10_fu_614_p2 = (54'd0 - zext_ln578_3_fu_610_p1);

assign man_V_11_fu_620_p3 = ((p_Result_8_fu_576_p3[0:0] == 1'b1) ? man_V_10_fu_614_p2 : zext_ln578_3_fu_610_p1);

assign man_V_13_fu_714_p2 = (54'd0 - zext_ln578_4_fu_710_p1);

assign man_V_14_fu_720_p3 = ((p_Result_10_fu_676_p3[0:0] == 1'b1) ? man_V_13_fu_714_p2 : zext_ln578_4_fu_710_p1);

assign man_V_16_fu_814_p2 = (54'd0 - zext_ln578_5_fu_810_p1);

assign man_V_17_fu_820_p3 = ((p_Result_12_fu_776_p3[0:0] == 1'b1) ? man_V_16_fu_814_p2 : zext_ln578_5_fu_810_p1);

assign man_V_19_fu_914_p2 = (54'd0 - zext_ln578_6_fu_910_p1);

assign man_V_1_fu_314_p2 = (54'd0 - zext_ln578_fu_310_p1);

assign man_V_20_fu_920_p3 = ((p_Result_14_fu_876_p3[0:0] == 1'b1) ? man_V_19_fu_914_p2 : zext_ln578_6_fu_910_p1);

assign man_V_22_fu_1014_p2 = (54'd0 - zext_ln578_7_fu_1010_p1);

assign man_V_23_fu_1020_p3 = ((p_Result_16_fu_976_p3[0:0] == 1'b1) ? man_V_22_fu_1014_p2 : zext_ln578_7_fu_1010_p1);

assign man_V_25_fu_1114_p2 = (54'd0 - zext_ln578_8_fu_1110_p1);

assign man_V_26_fu_1120_p3 = ((p_Result_18_fu_1076_p3[0:0] == 1'b1) ? man_V_25_fu_1114_p2 : zext_ln578_8_fu_1110_p1);

assign man_V_28_fu_1214_p2 = (54'd0 - zext_ln578_9_fu_1210_p1);

assign man_V_29_fu_1220_p3 = ((p_Result_20_fu_1176_p3[0:0] == 1'b1) ? man_V_28_fu_1214_p2 : zext_ln578_9_fu_1210_p1);

assign man_V_2_fu_320_p3 = ((p_Result_2_fu_276_p3[0:0] == 1'b1) ? man_V_1_fu_314_p2 : zext_ln578_fu_310_p1);

assign man_V_4_fu_414_p2 = (54'd0 - zext_ln578_1_fu_410_p1);

assign man_V_5_fu_420_p3 = ((p_Result_4_fu_376_p3[0:0] == 1'b1) ? man_V_4_fu_414_p2 : zext_ln578_1_fu_410_p1);

assign man_V_7_fu_514_p2 = (54'd0 - zext_ln578_2_fu_510_p1);

assign man_V_8_fu_520_p3 = ((p_Result_6_fu_476_p3[0:0] == 1'b1) ? man_V_7_fu_514_p2 : zext_ln578_2_fu_510_p1);

assign or_ln1002_1_fu_2743_p2 = (shl_ln1002_fu_2737_p2 | lshr_ln1000_fu_2731_p2);

assign or_ln590_1_fu_1499_p2 = (or_ln591_1_fu_1495_p2 | icmp_ln590_1_reg_3098);

assign or_ln590_2_fu_1637_p2 = (or_ln591_2_fu_1633_p2 | icmp_ln590_2_reg_3139);

assign or_ln590_3_fu_1775_p2 = (or_ln591_3_fu_1771_p2 | icmp_ln590_3_reg_3180);

assign or_ln590_4_fu_1913_p2 = (or_ln591_4_fu_1909_p2 | icmp_ln590_4_reg_3221);

assign or_ln590_5_fu_2051_p2 = (or_ln591_5_fu_2047_p2 | icmp_ln590_5_reg_3262);

assign or_ln590_6_fu_2189_p2 = (or_ln591_6_fu_2185_p2 | icmp_ln590_6_reg_3303);

assign or_ln590_7_fu_2327_p2 = (or_ln591_7_fu_2323_p2 | icmp_ln590_7_reg_3344);

assign or_ln590_8_fu_2465_p2 = (or_ln591_8_fu_2461_p2 | icmp_ln590_8_reg_3385);

assign or_ln590_9_fu_2603_p2 = (or_ln591_9_fu_2599_p2 | icmp_ln590_9_reg_3426);

assign or_ln590_fu_1361_p2 = (or_ln591_fu_1357_p2 | icmp_ln590_reg_3057);

assign or_ln591_1_fu_1495_p2 = (icmp_ln591_1_reg_3115 | icmp_ln580_1_reg_3091);

assign or_ln591_2_fu_1633_p2 = (icmp_ln591_2_reg_3156 | icmp_ln580_2_reg_3132);

assign or_ln591_3_fu_1771_p2 = (icmp_ln591_3_reg_3197 | icmp_ln580_3_reg_3173);

assign or_ln591_4_fu_1909_p2 = (icmp_ln591_4_reg_3238 | icmp_ln580_4_reg_3214);

assign or_ln591_5_fu_2047_p2 = (icmp_ln591_5_reg_3279 | icmp_ln580_5_reg_3255);

assign or_ln591_6_fu_2185_p2 = (icmp_ln591_6_reg_3320 | icmp_ln580_6_reg_3296);

assign or_ln591_7_fu_2323_p2 = (icmp_ln591_7_reg_3361 | icmp_ln580_7_reg_3337);

assign or_ln591_8_fu_2461_p2 = (icmp_ln591_8_reg_3402 | icmp_ln580_8_reg_3378);

assign or_ln591_9_fu_2599_p2 = (icmp_ln591_9_reg_3443 | icmp_ln580_9_reg_3419);

assign or_ln591_fu_1357_p2 = (icmp_ln591_reg_3074 | icmp_ln580_reg_3050);

assign out_r_TDATA_int_regslice = ((icmp_ln988_reg_3523[0:0] == 1'b1) ? 32'd0 : LD_10_fu_2924_p1);

assign out_r_TVALID = regslice_both_out_r_V_data_V_U_vld_out;

assign p_Result_10_fu_676_p3 = ireg_4_fu_668_p1[32'd63];

assign p_Result_11_fu_702_p3 = {{1'd1}, {trunc_ln574_4_fu_698_p1}};

assign p_Result_12_fu_776_p3 = ireg_5_fu_768_p1[32'd63];

assign p_Result_13_fu_802_p3 = {{1'd1}, {trunc_ln574_5_fu_798_p1}};

assign p_Result_14_fu_876_p3 = ireg_6_fu_868_p1[32'd63];

assign p_Result_15_fu_902_p3 = {{1'd1}, {trunc_ln574_6_fu_898_p1}};

assign p_Result_16_fu_976_p3 = ireg_7_fu_968_p1[32'd63];

assign p_Result_17_fu_1002_p3 = {{1'd1}, {trunc_ln574_7_fu_998_p1}};

assign p_Result_18_fu_1076_p3 = ireg_8_fu_1068_p1[32'd63];

assign p_Result_19_fu_1102_p3 = {{1'd1}, {trunc_ln574_8_fu_1098_p1}};

assign p_Result_20_fu_1176_p3 = ireg_9_fu_1168_p1[32'd63];

assign p_Result_21_fu_1202_p3 = {{1'd1}, {trunc_ln574_9_fu_1198_p1}};

integer ap_tvar_int_0;

always @ (tmp_V_3_fu_2666_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_23_fu_2671_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_2671_p4[ap_tvar_int_0] = tmp_V_3_fu_2666_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_24_fu_2775_p3 = tmp_V_3_fu_2666_p3[lsb_index_fu_2695_p2];

assign p_Result_25_fu_2912_p5 = {{zext_ln1015_fu_2874_p1[63:32]}, {tmp_9_fu_2905_p3}, {zext_ln1015_fu_2874_p1[22:0]}};

assign p_Result_2_fu_276_p3 = ireg_fu_268_p1[32'd63];

assign p_Result_3_fu_302_p3 = {{1'd1}, {trunc_ln574_fu_298_p1}};

assign p_Result_4_fu_376_p3 = ireg_1_fu_368_p1[32'd63];

assign p_Result_5_fu_402_p3 = {{1'd1}, {trunc_ln574_1_fu_398_p1}};

assign p_Result_6_fu_476_p3 = ireg_2_fu_468_p1[32'd63];

assign p_Result_7_fu_502_p3 = {{1'd1}, {trunc_ln574_2_fu_498_p1}};

assign p_Result_8_fu_576_p3 = ireg_3_fu_568_p1[32'd63];

assign p_Result_9_fu_602_p3 = {{1'd1}, {trunc_ln574_3_fu_598_p1}};

assign p_Result_s_fu_2878_p3 = m_2_fu_2858_p2[32'd25];

assign select_ln1011_fu_2803_p3 = ((icmp_ln1011_fu_2783_p2[0:0] == 1'b1) ? select_ln999_fu_2795_p3 : and_ln1002_1_fu_2789_p2);

assign select_ln590_10_fu_2056_p3 = ((or_ln590_5_fu_2051_p2[0:0] == 1'b1) ? select_ln591_5_fu_2040_p3 : select_ln612_5_fu_1994_p3);

assign select_ln590_12_fu_2194_p3 = ((or_ln590_6_fu_2189_p2[0:0] == 1'b1) ? select_ln591_6_fu_2178_p3 : select_ln612_6_fu_2132_p3);

assign select_ln590_14_fu_2332_p3 = ((or_ln590_7_fu_2327_p2[0:0] == 1'b1) ? select_ln591_7_fu_2316_p3 : select_ln612_7_fu_2270_p3);

assign select_ln590_16_fu_2470_p3 = ((or_ln590_8_fu_2465_p2[0:0] == 1'b1) ? select_ln591_8_fu_2454_p3 : select_ln612_8_fu_2408_p3);

assign select_ln590_18_fu_2608_p3 = ((or_ln590_9_fu_2603_p2[0:0] == 1'b1) ? select_ln591_9_fu_2592_p3 : select_ln612_9_fu_2546_p3);

assign select_ln590_2_fu_1504_p3 = ((or_ln590_1_fu_1499_p2[0:0] == 1'b1) ? select_ln591_1_fu_1488_p3 : select_ln612_1_fu_1442_p3);

assign select_ln590_4_fu_1642_p3 = ((or_ln590_2_fu_1637_p2[0:0] == 1'b1) ? select_ln591_2_fu_1626_p3 : select_ln612_2_fu_1580_p3);

assign select_ln590_6_fu_1780_p3 = ((or_ln590_3_fu_1775_p2[0:0] == 1'b1) ? select_ln591_3_fu_1764_p3 : select_ln612_3_fu_1718_p3);

assign select_ln590_8_fu_1918_p3 = ((or_ln590_4_fu_1913_p2[0:0] == 1'b1) ? select_ln591_4_fu_1902_p3 : select_ln612_4_fu_1856_p3);

assign select_ln590_fu_1366_p3 = ((or_ln590_fu_1361_p2[0:0] == 1'b1) ? select_ln591_fu_1350_p3 : select_ln612_fu_1304_p3);

assign select_ln591_1_fu_1488_p3 = ((and_ln591_1_fu_1483_p2[0:0] == 1'b1) ? trunc_ln592_1_reg_3121 : select_ln597_1_fu_1470_p3);

assign select_ln591_2_fu_1626_p3 = ((and_ln591_2_fu_1621_p2[0:0] == 1'b1) ? trunc_ln592_2_reg_3162 : select_ln597_2_fu_1608_p3);

assign select_ln591_3_fu_1764_p3 = ((and_ln591_3_fu_1759_p2[0:0] == 1'b1) ? trunc_ln592_3_reg_3203 : select_ln597_3_fu_1746_p3);

assign select_ln591_4_fu_1902_p3 = ((and_ln591_4_fu_1897_p2[0:0] == 1'b1) ? trunc_ln592_4_reg_3244 : select_ln597_4_fu_1884_p3);

assign select_ln591_5_fu_2040_p3 = ((and_ln591_5_fu_2035_p2[0:0] == 1'b1) ? trunc_ln592_5_reg_3285 : select_ln597_5_fu_2022_p3);

assign select_ln591_6_fu_2178_p3 = ((and_ln591_6_fu_2173_p2[0:0] == 1'b1) ? trunc_ln592_6_reg_3326 : select_ln597_6_fu_2160_p3);

assign select_ln591_7_fu_2316_p3 = ((and_ln591_7_fu_2311_p2[0:0] == 1'b1) ? trunc_ln592_7_reg_3367 : select_ln597_7_fu_2298_p3);

assign select_ln591_8_fu_2454_p3 = ((and_ln591_8_fu_2449_p2[0:0] == 1'b1) ? trunc_ln592_8_reg_3408 : select_ln597_8_fu_2436_p3);

assign select_ln591_9_fu_2592_p3 = ((and_ln591_9_fu_2587_p2[0:0] == 1'b1) ? trunc_ln592_9_reg_3449 : select_ln597_9_fu_2574_p3);

assign select_ln591_fu_1350_p3 = ((and_ln591_fu_1345_p2[0:0] == 1'b1) ? trunc_ln592_reg_3080 : select_ln597_fu_1332_p3);

assign select_ln594_1_fu_1529_p3 = ((and_ln594_3_fu_1524_p2[0:0] == 1'b1) ? trunc_ln595_1_fu_1459_p1 : select_ln590_2_fu_1504_p3);

assign select_ln594_2_fu_1667_p3 = ((and_ln594_5_fu_1662_p2[0:0] == 1'b1) ? trunc_ln595_2_fu_1597_p1 : select_ln590_4_fu_1642_p3);

assign select_ln594_3_fu_1805_p3 = ((and_ln594_7_fu_1800_p2[0:0] == 1'b1) ? trunc_ln595_3_fu_1735_p1 : select_ln590_6_fu_1780_p3);

assign select_ln594_4_fu_1943_p3 = ((and_ln594_9_fu_1938_p2[0:0] == 1'b1) ? trunc_ln595_4_fu_1873_p1 : select_ln590_8_fu_1918_p3);

assign select_ln594_5_fu_2081_p3 = ((and_ln594_11_fu_2076_p2[0:0] == 1'b1) ? trunc_ln595_5_fu_2011_p1 : select_ln590_10_fu_2056_p3);

assign select_ln594_6_fu_2219_p3 = ((and_ln594_13_fu_2214_p2[0:0] == 1'b1) ? trunc_ln595_6_fu_2149_p1 : select_ln590_12_fu_2194_p3);

assign select_ln594_7_fu_2357_p3 = ((and_ln594_15_fu_2352_p2[0:0] == 1'b1) ? trunc_ln595_7_fu_2287_p1 : select_ln590_14_fu_2332_p3);

assign select_ln594_8_fu_2495_p3 = ((and_ln594_17_fu_2490_p2[0:0] == 1'b1) ? trunc_ln595_8_fu_2425_p1 : select_ln590_16_fu_2470_p3);

assign select_ln594_9_fu_2633_p3 = ((and_ln594_19_fu_2628_p2[0:0] == 1'b1) ? trunc_ln595_9_fu_2563_p1 : select_ln590_18_fu_2608_p3);

assign select_ln594_fu_1391_p3 = ((and_ln594_1_fu_1386_p2[0:0] == 1'b1) ? trunc_ln595_fu_1321_p1 : select_ln590_fu_1366_p3);

assign select_ln597_1_fu_1470_p3 = ((tmp_15_fu_1463_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_2_fu_1608_p3 = ((tmp_19_fu_1601_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_3_fu_1746_p3 = ((tmp_23_fu_1739_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_4_fu_1884_p3 = ((tmp_27_fu_1877_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_5_fu_2022_p3 = ((tmp_31_fu_2015_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_6_fu_2160_p3 = ((tmp_35_fu_2153_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_7_fu_2298_p3 = ((tmp_39_fu_2291_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_8_fu_2436_p3 = ((tmp_43_fu_2429_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_9_fu_2574_p3 = ((tmp_47_fu_2567_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_fu_1332_p3 = ((tmp_11_fu_1325_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_1_fu_1442_p3 = ((icmp_ln612_1_fu_1431_p2[0:0] == 1'b1) ? shl_ln613_1_fu_1437_p2 : 32'd0);

assign select_ln612_2_fu_1580_p3 = ((icmp_ln612_2_fu_1569_p2[0:0] == 1'b1) ? shl_ln613_2_fu_1575_p2 : 32'd0);

assign select_ln612_3_fu_1718_p3 = ((icmp_ln612_3_fu_1707_p2[0:0] == 1'b1) ? shl_ln613_3_fu_1713_p2 : 32'd0);

assign select_ln612_4_fu_1856_p3 = ((icmp_ln612_4_fu_1845_p2[0:0] == 1'b1) ? shl_ln613_4_fu_1851_p2 : 32'd0);

assign select_ln612_5_fu_1994_p3 = ((icmp_ln612_5_fu_1983_p2[0:0] == 1'b1) ? shl_ln613_5_fu_1989_p2 : 32'd0);

assign select_ln612_6_fu_2132_p3 = ((icmp_ln612_6_fu_2121_p2[0:0] == 1'b1) ? shl_ln613_6_fu_2127_p2 : 32'd0);

assign select_ln612_7_fu_2270_p3 = ((icmp_ln612_7_fu_2259_p2[0:0] == 1'b1) ? shl_ln613_7_fu_2265_p2 : 32'd0);

assign select_ln612_8_fu_2408_p3 = ((icmp_ln612_8_fu_2397_p2[0:0] == 1'b1) ? shl_ln613_8_fu_2403_p2 : 32'd0);

assign select_ln612_9_fu_2546_p3 = ((icmp_ln612_9_fu_2535_p2[0:0] == 1'b1) ? shl_ln613_9_fu_2541_p2 : 32'd0);

assign select_ln612_fu_1304_p3 = ((icmp_ln612_fu_1293_p2[0:0] == 1'b1) ? shl_ln613_fu_1299_p2 : 32'd0);

assign select_ln996_fu_2886_p3 = ((p_Result_s_fu_2878_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln999_fu_2795_p3 = ((icmp_ln999_fu_2711_p2[0:0] == 1'b1) ? icmp_ln1002_fu_2755_p2 : p_Result_24_fu_2775_p3);

assign sext_ln590_1_fu_1411_p1 = sh_amt_1_fu_1406_p3;

assign sext_ln590_2_fu_1549_p1 = sh_amt_2_fu_1544_p3;

assign sext_ln590_3_fu_1687_p1 = sh_amt_3_fu_1682_p3;

assign sext_ln590_4_fu_1825_p1 = sh_amt_4_fu_1820_p3;

assign sext_ln590_5_fu_1963_p1 = sh_amt_5_fu_1958_p3;

assign sext_ln590_6_fu_2101_p1 = sh_amt_6_fu_2096_p3;

assign sext_ln590_7_fu_2239_p1 = sh_amt_7_fu_2234_p3;

assign sext_ln590_8_fu_2377_p1 = sh_amt_8_fu_2372_p3;

assign sext_ln590_9_fu_2515_p1 = sh_amt_9_fu_2510_p3;

assign sext_ln590_fu_1273_p1 = sh_amt_fu_1268_p3;

assign sh_amt_1_fu_1406_p3 = ((icmp_ln590_1_reg_3098[0:0] == 1'b1) ? add_ln590_1_reg_3105 : sub_ln590_1_reg_3110);

assign sh_amt_2_fu_1544_p3 = ((icmp_ln590_2_reg_3139[0:0] == 1'b1) ? add_ln590_2_reg_3146 : sub_ln590_2_reg_3151);

assign sh_amt_3_fu_1682_p3 = ((icmp_ln590_3_reg_3180[0:0] == 1'b1) ? add_ln590_3_reg_3187 : sub_ln590_3_reg_3192);

assign sh_amt_4_fu_1820_p3 = ((icmp_ln590_4_reg_3221[0:0] == 1'b1) ? add_ln590_4_reg_3228 : sub_ln590_4_reg_3233);

assign sh_amt_5_fu_1958_p3 = ((icmp_ln590_5_reg_3262[0:0] == 1'b1) ? add_ln590_5_reg_3269 : sub_ln590_5_reg_3274);

assign sh_amt_6_fu_2096_p3 = ((icmp_ln590_6_reg_3303[0:0] == 1'b1) ? add_ln590_6_reg_3310 : sub_ln590_6_reg_3315);

assign sh_amt_7_fu_2234_p3 = ((icmp_ln590_7_reg_3344[0:0] == 1'b1) ? add_ln590_7_reg_3351 : sub_ln590_7_reg_3356);

assign sh_amt_8_fu_2372_p3 = ((icmp_ln590_8_reg_3385[0:0] == 1'b1) ? add_ln590_8_reg_3392 : sub_ln590_8_reg_3397);

assign sh_amt_9_fu_2510_p3 = ((icmp_ln590_9_reg_3426[0:0] == 1'b1) ? add_ln590_9_reg_3433 : sub_ln590_9_reg_3438);

assign sh_amt_fu_1268_p3 = ((icmp_ln590_reg_3057[0:0] == 1'b1) ? add_ln590_reg_3064 : sub_ln590_reg_3069);

assign shl_ln1002_fu_2737_p2 = 32'd1 << lsb_index_fu_2695_p2;

assign shl_ln1012_fu_2827_p2 = zext_ln1010_fu_2815_p1 << zext_ln1012_fu_2823_p1;

assign shl_ln613_1_fu_1437_p2 = trunc_ln592_1_reg_3121 << sext_ln590_1_fu_1411_p1;

assign shl_ln613_2_fu_1575_p2 = trunc_ln592_2_reg_3162 << sext_ln590_2_fu_1549_p1;

assign shl_ln613_3_fu_1713_p2 = trunc_ln592_3_reg_3203 << sext_ln590_3_fu_1687_p1;

assign shl_ln613_4_fu_1851_p2 = trunc_ln592_4_reg_3244 << sext_ln590_4_fu_1825_p1;

assign shl_ln613_5_fu_1989_p2 = trunc_ln592_5_reg_3285 << sext_ln590_5_fu_1963_p1;

assign shl_ln613_6_fu_2127_p2 = trunc_ln592_6_reg_3326 << sext_ln590_6_fu_2101_p1;

assign shl_ln613_7_fu_2265_p2 = trunc_ln592_7_reg_3367 << sext_ln590_7_fu_2239_p1;

assign shl_ln613_8_fu_2403_p2 = trunc_ln592_8_reg_3408 << sext_ln590_8_fu_2377_p1;

assign shl_ln613_9_fu_2541_p2 = trunc_ln592_9_reg_3449 << sext_ln590_9_fu_2515_p1;

assign shl_ln613_fu_1299_p2 = trunc_ln592_reg_3080 << sext_ln590_fu_1273_p1;

assign sub_ln1000_fu_2721_p2 = ($signed(6'd57) - $signed(trunc_ln1000_fu_2717_p1));

assign sub_ln1012_fu_2818_p2 = (32'd25 - sub_ln997_reg_3533);

assign sub_ln1017_fu_2894_p2 = (8'd16 - trunc_ln996_reg_3549);

assign sub_ln590_1_fu_452_p2 = (12'd16 - F2_1_fu_434_p2);

assign sub_ln590_2_fu_552_p2 = (12'd16 - F2_2_fu_534_p2);

assign sub_ln590_3_fu_652_p2 = (12'd16 - F2_3_fu_634_p2);

assign sub_ln590_4_fu_752_p2 = (12'd16 - F2_4_fu_734_p2);

assign sub_ln590_5_fu_852_p2 = (12'd16 - F2_5_fu_834_p2);

assign sub_ln590_6_fu_952_p2 = (12'd16 - F2_6_fu_934_p2);

assign sub_ln590_7_fu_1052_p2 = (12'd16 - F2_7_fu_1034_p2);

assign sub_ln590_8_fu_1152_p2 = (12'd16 - F2_8_fu_1134_p2);

assign sub_ln590_9_fu_1252_p2 = (12'd16 - F2_9_fu_1234_p2);

assign sub_ln590_fu_352_p2 = (12'd16 - F2_fu_334_p2);

assign sub_ln997_fu_2689_p2 = (32'd32 - l_fu_2681_p3);

assign tmp_11_fu_1325_p3 = p_0_reg_2936[32'd31];

assign tmp_14_fu_1421_p4 = {{sh_amt_1_fu_1406_p3[11:5]}};

assign tmp_15_fu_1463_p3 = p_s_reg_2942[32'd31];

assign tmp_18_fu_1559_p4 = {{sh_amt_2_fu_1544_p3[11:5]}};

assign tmp_19_fu_1601_p3 = p_1_reg_2948[32'd31];

assign tmp_22_fu_1697_p4 = {{sh_amt_3_fu_1682_p3[11:5]}};

assign tmp_23_fu_1739_p3 = p_2_reg_2954[32'd31];

assign tmp_26_fu_1835_p4 = {{sh_amt_4_fu_1820_p3[11:5]}};

assign tmp_27_fu_1877_p3 = p_3_reg_2960[32'd31];

assign tmp_30_fu_1973_p4 = {{sh_amt_5_fu_1958_p3[11:5]}};

assign tmp_31_fu_2015_p3 = p_4_reg_2966[32'd31];

assign tmp_34_fu_2111_p4 = {{sh_amt_6_fu_2096_p3[11:5]}};

assign tmp_35_fu_2153_p3 = p_5_reg_2972[32'd31];

assign tmp_38_fu_2249_p4 = {{sh_amt_7_fu_2234_p3[11:5]}};

assign tmp_39_fu_2291_p3 = p_6_reg_2978[32'd31];

assign tmp_42_fu_2387_p4 = {{sh_amt_8_fu_2372_p3[11:5]}};

assign tmp_43_fu_2429_p3 = p_7_reg_2984[32'd31];

assign tmp_46_fu_2525_p4 = {{sh_amt_9_fu_2510_p3[11:5]}};

assign tmp_47_fu_2567_p3 = p_8_reg_3035[32'd31];

assign tmp_49_fu_2701_p4 = {{lsb_index_fu_2695_p2[31:1]}};

assign tmp_50_fu_2761_p3 = lsb_index_fu_2695_p2[32'd31];

assign tmp_9_fu_2905_p3 = {{p_Result_22_reg_3512}, {add_ln1017_fu_2899_p2}};

assign tmp_V_3_fu_2666_p3 = ((p_Result_22_reg_3512[0:0] == 1'b1) ? tmp_V_reg_3518 : out_local_V_reg_3505);

assign tmp_V_fu_2656_p2 = (32'd0 - out_local_V_reg_3505);

assign tmp_fu_1283_p4 = {{sh_amt_fu_1268_p3[11:5]}};

assign trunc_ln1000_fu_2717_p1 = sub_ln997_fu_2689_p2[5:0];

assign trunc_ln564_1_fu_372_p1 = ireg_1_fu_368_p1[62:0];

assign trunc_ln564_2_fu_472_p1 = ireg_2_fu_468_p1[62:0];

assign trunc_ln564_3_fu_572_p1 = ireg_3_fu_568_p1[62:0];

assign trunc_ln564_4_fu_672_p1 = ireg_4_fu_668_p1[62:0];

assign trunc_ln564_5_fu_772_p1 = ireg_5_fu_768_p1[62:0];

assign trunc_ln564_6_fu_872_p1 = ireg_6_fu_868_p1[62:0];

assign trunc_ln564_7_fu_972_p1 = ireg_7_fu_968_p1[62:0];

assign trunc_ln564_8_fu_1072_p1 = ireg_8_fu_1068_p1[62:0];

assign trunc_ln564_9_fu_1172_p1 = ireg_9_fu_1168_p1[62:0];

assign trunc_ln564_fu_272_p1 = ireg_fu_268_p1[62:0];

assign trunc_ln574_1_fu_398_p1 = ireg_1_fu_368_p1[51:0];

assign trunc_ln574_2_fu_498_p1 = ireg_2_fu_468_p1[51:0];

assign trunc_ln574_3_fu_598_p1 = ireg_3_fu_568_p1[51:0];

assign trunc_ln574_4_fu_698_p1 = ireg_4_fu_668_p1[51:0];

assign trunc_ln574_5_fu_798_p1 = ireg_5_fu_768_p1[51:0];

assign trunc_ln574_6_fu_898_p1 = ireg_6_fu_868_p1[51:0];

assign trunc_ln574_7_fu_998_p1 = ireg_7_fu_968_p1[51:0];

assign trunc_ln574_8_fu_1098_p1 = ireg_8_fu_1068_p1[51:0];

assign trunc_ln574_9_fu_1198_p1 = ireg_9_fu_1168_p1[51:0];

assign trunc_ln574_fu_298_p1 = ireg_fu_268_p1[51:0];

assign trunc_ln592_1_fu_464_p1 = man_V_5_fu_420_p3[31:0];

assign trunc_ln592_2_fu_564_p1 = man_V_8_fu_520_p3[31:0];

assign trunc_ln592_3_fu_664_p1 = man_V_11_fu_620_p3[31:0];

assign trunc_ln592_4_fu_764_p1 = man_V_14_fu_720_p3[31:0];

assign trunc_ln592_5_fu_864_p1 = man_V_17_fu_820_p3[31:0];

assign trunc_ln592_6_fu_964_p1 = man_V_20_fu_920_p3[31:0];

assign trunc_ln592_7_fu_1064_p1 = man_V_23_fu_1020_p3[31:0];

assign trunc_ln592_8_fu_1164_p1 = man_V_26_fu_1120_p3[31:0];

assign trunc_ln592_9_fu_1264_p1 = man_V_29_fu_1220_p3[31:0];

assign trunc_ln592_fu_364_p1 = man_V_2_fu_320_p3[31:0];

assign trunc_ln595_1_fu_1459_p1 = ashr_ln595_1_fu_1454_p2[31:0];

assign trunc_ln595_2_fu_1597_p1 = ashr_ln595_2_fu_1592_p2[31:0];

assign trunc_ln595_3_fu_1735_p1 = ashr_ln595_3_fu_1730_p2[31:0];

assign trunc_ln595_4_fu_1873_p1 = ashr_ln595_4_fu_1868_p2[31:0];

assign trunc_ln595_5_fu_2011_p1 = ashr_ln595_5_fu_2006_p2[31:0];

assign trunc_ln595_6_fu_2149_p1 = ashr_ln595_6_fu_2144_p2[31:0];

assign trunc_ln595_7_fu_2287_p1 = ashr_ln595_7_fu_2282_p2[31:0];

assign trunc_ln595_8_fu_2425_p1 = ashr_ln595_8_fu_2420_p2[31:0];

assign trunc_ln595_9_fu_2563_p1 = ashr_ln595_9_fu_2558_p2[31:0];

assign trunc_ln595_fu_1321_p1 = ashr_ln595_fu_1316_p2[31:0];

assign trunc_ln996_fu_2811_p1 = l_fu_2681_p3[7:0];

assign xor_ln1002_fu_2769_p2 = (tmp_50_fu_2761_p3 ^ 1'd1);

assign xor_ln580_1_fu_1478_p2 = (icmp_ln580_1_reg_3091 ^ 1'd1);

assign xor_ln580_2_fu_1616_p2 = (icmp_ln580_2_reg_3132 ^ 1'd1);

assign xor_ln580_3_fu_1754_p2 = (icmp_ln580_3_reg_3173 ^ 1'd1);

assign xor_ln580_4_fu_1892_p2 = (icmp_ln580_4_reg_3214 ^ 1'd1);

assign xor_ln580_5_fu_2030_p2 = (icmp_ln580_5_reg_3255 ^ 1'd1);

assign xor_ln580_6_fu_2168_p2 = (icmp_ln580_6_reg_3296 ^ 1'd1);

assign xor_ln580_7_fu_2306_p2 = (icmp_ln580_7_reg_3337 ^ 1'd1);

assign xor_ln580_8_fu_2444_p2 = (icmp_ln580_8_reg_3378 ^ 1'd1);

assign xor_ln580_9_fu_2582_p2 = (icmp_ln580_9_reg_3419 ^ 1'd1);

assign xor_ln580_fu_1340_p2 = (icmp_ln580_reg_3050 ^ 1'd1);

assign xor_ln591_1_fu_1512_p2 = (or_ln591_1_fu_1495_p2 ^ 1'd1);

assign xor_ln591_2_fu_1650_p2 = (or_ln591_2_fu_1633_p2 ^ 1'd1);

assign xor_ln591_3_fu_1788_p2 = (or_ln591_3_fu_1771_p2 ^ 1'd1);

assign xor_ln591_4_fu_1926_p2 = (or_ln591_4_fu_1909_p2 ^ 1'd1);

assign xor_ln591_5_fu_2064_p2 = (or_ln591_5_fu_2047_p2 ^ 1'd1);

assign xor_ln591_6_fu_2202_p2 = (or_ln591_6_fu_2185_p2 ^ 1'd1);

assign xor_ln591_7_fu_2340_p2 = (or_ln591_7_fu_2323_p2 ^ 1'd1);

assign xor_ln591_8_fu_2478_p2 = (or_ln591_8_fu_2461_p2 ^ 1'd1);

assign xor_ln591_9_fu_2616_p2 = (or_ln591_9_fu_2599_p2 ^ 1'd1);

assign xor_ln591_fu_1374_p2 = (or_ln591_fu_1357_p2 ^ 1'd1);

assign zext_ln1000_fu_2727_p1 = sub_ln1000_fu_2721_p2;

assign zext_ln1010_fu_2815_p1 = tmp_V_3_reg_3528;

assign zext_ln1011_fu_2838_p1 = add_ln1011_fu_2833_p2;

assign zext_ln1012_fu_2823_p1 = sub_ln1012_fu_2818_p2;

assign zext_ln1014_fu_2855_p1 = select_ln1011_reg_3544;

assign zext_ln1015_fu_2874_p1 = m_5_fu_2864_p4;

assign zext_ln501_1_fu_394_p1 = exp_tmp_1_fu_384_p4;

assign zext_ln501_2_fu_494_p1 = exp_tmp_2_fu_484_p4;

assign zext_ln501_3_fu_594_p1 = exp_tmp_3_fu_584_p4;

assign zext_ln501_4_fu_694_p1 = exp_tmp_4_fu_684_p4;

assign zext_ln501_5_fu_794_p1 = exp_tmp_5_fu_784_p4;

assign zext_ln501_6_fu_894_p1 = exp_tmp_6_fu_884_p4;

assign zext_ln501_7_fu_994_p1 = exp_tmp_7_fu_984_p4;

assign zext_ln501_8_fu_1094_p1 = exp_tmp_8_fu_1084_p4;

assign zext_ln501_9_fu_1194_p1 = exp_tmp_9_fu_1184_p4;

assign zext_ln501_fu_294_p1 = exp_tmp_fu_284_p4;

assign zext_ln578_1_fu_410_p1 = p_Result_5_fu_402_p3;

assign zext_ln578_2_fu_510_p1 = p_Result_7_fu_502_p3;

assign zext_ln578_3_fu_610_p1 = p_Result_9_fu_602_p3;

assign zext_ln578_4_fu_710_p1 = p_Result_11_fu_702_p3;

assign zext_ln578_5_fu_810_p1 = p_Result_13_fu_802_p3;

assign zext_ln578_6_fu_910_p1 = p_Result_15_fu_902_p3;

assign zext_ln578_7_fu_1010_p1 = p_Result_17_fu_1002_p3;

assign zext_ln578_8_fu_1110_p1 = p_Result_19_fu_1102_p3;

assign zext_ln578_9_fu_1210_p1 = p_Result_21_fu_1202_p3;

assign zext_ln578_fu_310_p1 = p_Result_3_fu_302_p3;

assign zext_ln595_1_fu_1450_p1 = $unsigned(sext_ln590_1_fu_1411_p1);

assign zext_ln595_2_fu_1588_p1 = $unsigned(sext_ln590_2_fu_1549_p1);

assign zext_ln595_3_fu_1726_p1 = $unsigned(sext_ln590_3_fu_1687_p1);

assign zext_ln595_4_fu_1864_p1 = $unsigned(sext_ln590_4_fu_1825_p1);

assign zext_ln595_5_fu_2002_p1 = $unsigned(sext_ln590_5_fu_1963_p1);

assign zext_ln595_6_fu_2140_p1 = $unsigned(sext_ln590_6_fu_2101_p1);

assign zext_ln595_7_fu_2278_p1 = $unsigned(sext_ln590_7_fu_2239_p1);

assign zext_ln595_8_fu_2416_p1 = $unsigned(sext_ln590_8_fu_2377_p1);

assign zext_ln595_9_fu_2554_p1 = $unsigned(sext_ln590_9_fu_2515_p1);

assign zext_ln595_fu_1312_p1 = $unsigned(sext_ln590_fu_1273_p1);


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "myproject_axi_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //myproject_axi

