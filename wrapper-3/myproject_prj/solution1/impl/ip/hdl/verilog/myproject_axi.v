// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.971116,HLS_SYN_LAT=20,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=827,HLS_SYN_LUT=4988,HLS_VERSION=2020_1}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TLAST
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state6 = 6'd4;
parameter    ap_ST_fsm_state7 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TLAST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln22_fu_378_p2;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln32_reg_1615;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln32_reg_1615_pp1_iter1_reg;
reg   [31:0] in_local_V_9_083_reg_190;
reg   [31:0] in_local_V_8_082_reg_202;
reg   [31:0] in_local_V_9_18_reg_214;
reg   [31:0] in_local_V_9_27_reg_226;
reg   [31:0] in_local_V_9_35_reg_238;
reg   [31:0] in_local_V_9_42_reg_250;
reg   [31:0] in_local_V_9_48_reg_262;
reg   [31:0] in_local_V_9_53_reg_274;
reg   [31:0] in_local_V_9_57_reg_286;
reg   [31:0] in_local_V_9_60_reg_298;
reg   [3:0] i_reg_310;
reg   [3:0] i_reg_310_pp0_iter1_reg;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_reg_310_pp0_iter2_reg;
reg   [0:0] is_last_reg_322;
reg   [1:0] i_1_reg_334;
wire   [3:0] add_ln22_fu_372_p2;
reg   [3:0] add_ln22_reg_1459;
reg   [0:0] icmp_ln22_reg_1464;
reg   [0:0] icmp_ln22_reg_1464_pp0_iter1_reg;
reg   [0:0] icmp_ln22_reg_1464_pp0_iter2_reg;
reg   [31:0] ref_tmp_data_reg_1468;
reg   [31:0] ref_tmp_data_reg_1468_pp0_iter1_reg;
wire   [0:0] is_last_1_fu_397_p2;
reg   [0:0] is_last_1_reg_1478;
wire   [53:0] man_V_2_fu_455_p3;
reg   [53:0] man_V_2_reg_1483;
wire   [0:0] icmp_ln571_fu_463_p2;
reg   [0:0] icmp_ln571_reg_1488;
reg   [0:0] icmp_ln571_reg_1488_pp0_iter2_reg;
wire   [0:0] icmp_ln581_fu_475_p2;
reg   [0:0] icmp_ln581_reg_1495;
wire   [11:0] add_ln581_fu_481_p2;
reg   [11:0] add_ln581_reg_1502;
wire   [11:0] sub_ln581_fu_487_p2;
reg   [11:0] sub_ln581_reg_1507;
wire   [0:0] icmp_ln582_fu_493_p2;
reg   [0:0] icmp_ln582_reg_1512;
wire   [31:0] trunc_ln583_fu_499_p1;
reg   [31:0] trunc_ln583_reg_1518;
wire   [31:0] select_ln603_fu_650_p3;
reg   [31:0] select_ln603_reg_1524;
wire   [31:0] in_local_V_9_9_fu_782_p3;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] in_local_V_9_19_fu_854_p3;
wire   [31:0] in_local_V_9_28_fu_918_p3;
wire   [31:0] in_local_V_9_36_fu_974_p3;
wire   [31:0] in_local_V_9_43_fu_1022_p3;
wire   [31:0] in_local_V_9_49_fu_1062_p3;
wire   [31:0] in_local_V_9_54_fu_1094_p3;
wire   [31:0] in_local_V_9_58_fu_1118_p3;
wire   [31:0] in_local_V_9_61_fu_1134_p3;
wire   [31:0] in_local_V_9_62_fu_1142_p3;
wire   [31:0] out_local_V_0_myproject_fu_345_ap_return;
reg   [31:0] out_local_V_0_reg_1579;
wire    ap_CS_fsm_state6;
reg   [0:0] p_Result_4_reg_1586;
wire   [0:0] icmp_ln935_fu_1158_p2;
reg   [0:0] icmp_ln935_reg_1592;
wire    ap_CS_fsm_state7;
wire   [31:0] m_fu_1168_p3;
reg   [31:0] m_reg_1597;
wire   [63:0] zext_ln957_fu_1174_p1;
reg   [63:0] zext_ln957_reg_1604;
wire   [1:0] add_ln32_fu_1178_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state8_pp1_stage0_iter0;
reg    ap_block_state9_pp1_stage0_iter1;
reg    ap_block_state9_io;
reg    ap_block_state10_pp1_stage0_iter2;
reg    ap_block_state10_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln32_fu_1184_p2;
wire   [0:0] out_struct_last_V_fu_1196_p2;
reg   [0:0] out_struct_last_V_reg_1619;
wire   [31:0] sub_ln944_fu_1219_p2;
reg   [31:0] sub_ln944_reg_1624;
wire   [0:0] icmp_ln958_fu_1311_p2;
reg   [0:0] icmp_ln958_reg_1630;
wire   [0:0] select_ln958_fu_1331_p3;
reg   [0:0] select_ln958_reg_1635;
wire   [7:0] trunc_ln943_fu_1339_p1;
reg   [7:0] trunc_ln943_reg_1640;
wire    ap_CS_fsm_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
wire    out_local_V_0_myproject_fu_345_ap_ready;
reg   [3:0] ap_phi_mux_i_phi_fu_314_p4;
reg   [0:0] ap_phi_mux_is_last_phi_fu_326_p4;
reg    ap_block_pp1_stage0_01001;
wire   [31:0] grp_fu_369_p0;
wire   [63:0] grp_fu_369_p1;
wire   [63:0] ireg_fu_403_p1;
wire   [10:0] exp_tmp_fu_419_p4;
wire   [51:0] trunc_ln565_fu_433_p1;
wire   [52:0] p_Result_3_fu_437_p3;
wire   [53:0] zext_ln569_fu_445_p1;
wire   [0:0] p_Result_2_fu_411_p3;
wire   [53:0] man_V_1_fu_449_p2;
wire   [62:0] trunc_ln555_fu_407_p1;
wire   [11:0] zext_ln455_fu_429_p1;
wire   [11:0] F2_fu_469_p2;
wire  signed [11:0] sh_amt_fu_503_p3;
wire   [6:0] tmp_3_fu_518_p4;
wire  signed [31:0] sext_ln581_fu_508_p1;
wire   [53:0] zext_ln586_fu_534_p1;
wire   [53:0] ashr_ln586_fu_538_p2;
wire   [0:0] tmp_4_fu_547_p3;
wire   [0:0] xor_ln571_fu_567_p2;
wire   [0:0] and_ln582_fu_572_p2;
wire   [0:0] or_ln582_fu_584_p2;
wire   [0:0] xor_ln582_fu_588_p2;
wire   [0:0] and_ln581_fu_594_p2;
wire   [0:0] icmp_ln585_fu_512_p2;
wire   [0:0] and_ln585_fu_599_p2;
wire   [31:0] trunc_ln586_fu_543_p1;
wire   [31:0] select_ln582_fu_577_p3;
wire   [0:0] xor_ln585_fu_613_p2;
wire   [0:0] and_ln585_1_fu_619_p2;
wire   [31:0] select_ln588_fu_554_p3;
wire   [31:0] select_ln585_fu_605_p3;
wire   [0:0] or_ln581_fu_633_p2;
wire   [0:0] icmp_ln603_fu_528_p2;
wire   [0:0] xor_ln581_fu_638_p2;
wire   [0:0] and_ln603_fu_644_p2;
wire   [31:0] shl_ln604_fu_562_p2;
wire   [31:0] select_ln585_1_fu_625_p3;
wire   [0:0] icmp_ln26_fu_664_p2;
wire   [31:0] in_local_V_0_fu_658_p3;
wire   [0:0] icmp_ln26_1_fu_678_p2;
wire   [31:0] in_local_V_9_fu_670_p3;
wire   [0:0] icmp_ln26_2_fu_692_p2;
wire   [31:0] in_local_V_9_2_fu_684_p3;
wire   [0:0] icmp_ln26_3_fu_706_p2;
wire   [31:0] in_local_V_9_3_fu_698_p3;
wire   [0:0] icmp_ln26_4_fu_720_p2;
wire   [31:0] in_local_V_9_4_fu_712_p3;
wire   [0:0] icmp_ln26_5_fu_734_p2;
wire   [31:0] in_local_V_9_5_fu_726_p3;
wire   [0:0] icmp_ln26_6_fu_748_p2;
wire   [31:0] in_local_V_9_6_fu_740_p3;
wire   [0:0] icmp_ln26_7_fu_762_p2;
wire   [31:0] in_local_V_9_7_fu_754_p3;
wire   [0:0] icmp_ln26_8_fu_776_p2;
wire   [31:0] in_local_V_9_8_fu_768_p3;
wire   [31:0] in_local_V_9_10_fu_790_p3;
wire   [31:0] in_local_V_9_11_fu_798_p3;
wire   [31:0] in_local_V_9_12_fu_806_p3;
wire   [31:0] in_local_V_9_13_fu_814_p3;
wire   [31:0] in_local_V_9_14_fu_822_p3;
wire   [31:0] in_local_V_9_15_fu_830_p3;
wire   [31:0] in_local_V_9_16_fu_838_p3;
wire   [31:0] in_local_V_9_17_fu_846_p3;
wire   [31:0] in_local_V_9_20_fu_862_p3;
wire   [31:0] in_local_V_9_21_fu_870_p3;
wire   [31:0] in_local_V_9_22_fu_878_p3;
wire   [31:0] in_local_V_9_23_fu_886_p3;
wire   [31:0] in_local_V_9_24_fu_894_p3;
wire   [31:0] in_local_V_9_25_fu_902_p3;
wire   [31:0] in_local_V_9_26_fu_910_p3;
wire   [31:0] in_local_V_9_29_fu_926_p3;
wire   [31:0] in_local_V_9_30_fu_934_p3;
wire   [31:0] in_local_V_9_31_fu_942_p3;
wire   [31:0] in_local_V_9_32_fu_950_p3;
wire   [31:0] in_local_V_9_33_fu_958_p3;
wire   [31:0] in_local_V_9_34_fu_966_p3;
wire   [31:0] in_local_V_9_37_fu_982_p3;
wire   [31:0] in_local_V_9_38_fu_990_p3;
wire   [31:0] in_local_V_9_39_fu_998_p3;
wire   [31:0] in_local_V_9_40_fu_1006_p3;
wire   [31:0] in_local_V_9_41_fu_1014_p3;
wire   [31:0] in_local_V_9_44_fu_1030_p3;
wire   [31:0] in_local_V_9_45_fu_1038_p3;
wire   [31:0] in_local_V_9_46_fu_1046_p3;
wire   [31:0] in_local_V_9_47_fu_1054_p3;
wire   [31:0] in_local_V_9_50_fu_1070_p3;
wire   [31:0] in_local_V_9_51_fu_1078_p3;
wire   [31:0] in_local_V_9_52_fu_1086_p3;
wire   [31:0] in_local_V_9_55_fu_1102_p3;
wire   [31:0] in_local_V_9_56_fu_1110_p3;
wire   [31:0] in_local_V_9_59_fu_1126_p3;
wire   [31:0] tmp_V_fu_1163_p2;
wire   [0:0] icmp_ln34_fu_1190_p2;
reg   [31:0] p_Result_5_fu_1202_p4;
reg   [31:0] l_fu_1211_p3;
wire   [31:0] lsb_index_fu_1225_p2;
wire   [30:0] tmp_fu_1231_p4;
wire   [5:0] trunc_ln947_fu_1247_p1;
wire   [5:0] sub_ln947_fu_1251_p2;
wire   [31:0] zext_ln947_fu_1257_p1;
wire   [31:0] lshr_ln947_fu_1261_p2;
wire   [31:0] shl_ln949_fu_1267_p2;
wire   [31:0] or_ln949_1_fu_1273_p2;
wire   [31:0] and_ln949_fu_1279_p2;
wire   [0:0] tmp_5_fu_1290_p3;
wire   [0:0] p_Result_6_fu_1304_p3;
wire   [0:0] xor_ln949_fu_1298_p2;
wire   [0:0] icmp_ln946_fu_1241_p2;
wire   [0:0] icmp_ln949_fu_1284_p2;
wire   [0:0] select_ln946_fu_1323_p3;
wire   [0:0] and_ln949_1_fu_1317_p2;
wire   [31:0] sub_ln959_fu_1343_p2;
wire   [63:0] zext_ln959_fu_1348_p1;
wire   [31:0] add_ln958_fu_1357_p2;
wire   [63:0] zext_ln958_fu_1362_p1;
wire   [63:0] lshr_ln958_fu_1366_p2;
wire   [63:0] shl_ln959_fu_1352_p2;
wire   [63:0] m_1_fu_1371_p3;
wire   [63:0] zext_ln961_fu_1378_p1;
wire   [63:0] m_2_fu_1381_p2;
wire   [62:0] m_5_fu_1387_p4;
wire   [0:0] p_Result_s_fu_1401_p3;
wire   [7:0] sub_ln964_fu_1417_p2;
wire   [7:0] select_ln943_fu_1409_p3;
wire   [7:0] add_ln964_fu_1422_p2;
wire   [63:0] zext_ln962_fu_1397_p1;
wire   [8:0] tmp_1_fu_1428_p3;
wire   [63:0] p_Result_7_fu_1435_p5;
wire   [31:0] LD_1_fu_1447_p1;
reg    grp_fu_369_ce;
reg   [5:0] ap_NS_fsm;
wire    ap_CS_fsm_state11;
wire    regslice_both_out_V_data_V_U_apdone_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_V_data_V_U_ack_in;
wire    regslice_both_in_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_V_keep_V_U_vld_out;
wire    regslice_both_in_V_keep_V_U_ack_in;
wire    regslice_both_in_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_V_strb_V_U_vld_out;
wire    regslice_both_in_V_strb_V_U_ack_in;
wire    regslice_both_in_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_V_last_V_U_vld_out;
wire    regslice_both_in_V_last_V_U_ack_in;
wire   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_V_data_V_U_vld_out;
wire    regslice_both_out_V_keep_V_U_apdone_blk;
wire    regslice_both_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_V_keep_V_U_vld_out;
wire    regslice_both_out_V_strb_V_U_apdone_blk;
wire    regslice_both_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_V_strb_V_U_vld_out;
wire    regslice_both_out_V_last_V_U_apdone_blk;
wire    regslice_both_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

myproject_axi_myproject out_local_V_0_myproject_fu_345(
    .ap_ready(out_local_V_0_myproject_fu_345_ap_ready),
    .p_read(in_local_V_9_60_reg_298),
    .p_read1(in_local_V_9_57_reg_286),
    .p_read2(in_local_V_9_53_reg_274),
    .p_read3(in_local_V_9_48_reg_262),
    .p_read4(in_local_V_9_42_reg_250),
    .p_read5(in_local_V_9_35_reg_238),
    .p_read6(in_local_V_9_27_reg_226),
    .p_read7(in_local_V_9_18_reg_214),
    .p_read8(in_local_V_8_082_reg_202),
    .p_read9(in_local_V_9_083_reg_190),
    .ap_return(out_local_V_0_myproject_fu_345_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_369_p0),
    .ce(grp_fu_369_ce),
    .dout(grp_fu_369_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_struct_last_V_reg_1619),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state8))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_334 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln32_fu_1184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_1_reg_334 <= add_ln32_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1464 == 1'd0))) begin
        i_reg_310 <= add_ln22_reg_1459;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_310 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1464 == 1'd0))) begin
        is_last_reg_322 <= is_last_1_reg_1478;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        is_last_reg_322 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln22_reg_1459 <= add_ln22_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1464 == 1'd0))) begin
        add_ln581_reg_1502 <= add_ln581_fu_481_p2;
        icmp_ln571_reg_1488 <= icmp_ln571_fu_463_p2;
        icmp_ln581_reg_1495 <= icmp_ln581_fu_475_p2;
        icmp_ln582_reg_1512 <= icmp_ln582_fu_493_p2;
        man_V_2_reg_1483 <= man_V_2_fu_455_p3;
        sub_ln581_reg_1507 <= sub_ln581_fu_487_p2;
        trunc_ln583_reg_1518 <= trunc_ln583_fu_499_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_310_pp0_iter1_reg <= i_reg_310;
        icmp_ln22_reg_1464 <= icmp_ln22_fu_378_p2;
        icmp_ln22_reg_1464_pp0_iter1_reg <= icmp_ln22_reg_1464;
        ref_tmp_data_reg_1468_pp0_iter1_reg <= ref_tmp_data_reg_1468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_310_pp0_iter2_reg <= i_reg_310_pp0_iter1_reg;
        icmp_ln22_reg_1464_pp0_iter2_reg <= icmp_ln22_reg_1464_pp0_iter1_reg;
        icmp_ln571_reg_1488_pp0_iter2_reg <= icmp_ln571_reg_1488;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln32_reg_1615 <= icmp_ln32_fu_1184_p2;
        icmp_ln32_reg_1615_pp1_iter1_reg <= icmp_ln32_reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln935_reg_1592 <= icmp_ln935_fu_1158_p2;
        m_reg_1597 <= m_fu_1168_p3;
        zext_ln957_reg_1604[31 : 0] <= zext_ln957_fu_1174_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln32_fu_1184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln935_reg_1592 == 1'd0))) begin
        icmp_ln958_reg_1630 <= icmp_ln958_fu_1311_p2;
        select_ln958_reg_1635 <= select_ln958_fu_1331_p3;
        sub_ln944_reg_1624 <= sub_ln944_fu_1219_p2;
        trunc_ln943_reg_1640 <= trunc_ln943_fu_1339_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln22_reg_1464_pp0_iter2_reg == 1'd0))) begin
        in_local_V_8_082_reg_202 <= in_local_V_9_19_fu_854_p3;
        in_local_V_9_083_reg_190 <= in_local_V_9_9_fu_782_p3;
        in_local_V_9_18_reg_214 <= in_local_V_9_28_fu_918_p3;
        in_local_V_9_27_reg_226 <= in_local_V_9_36_fu_974_p3;
        in_local_V_9_35_reg_238 <= in_local_V_9_43_fu_1022_p3;
        in_local_V_9_42_reg_250 <= in_local_V_9_49_fu_1062_p3;
        in_local_V_9_48_reg_262 <= in_local_V_9_54_fu_1094_p3;
        in_local_V_9_53_reg_274 <= in_local_V_9_58_fu_1118_p3;
        in_local_V_9_57_reg_286 <= in_local_V_9_61_fu_1134_p3;
        in_local_V_9_60_reg_298 <= in_local_V_9_62_fu_1142_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_378_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        is_last_1_reg_1478 <= is_last_1_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_local_V_0_reg_1579 <= out_local_V_0_myproject_fu_345_ap_return;
        p_Result_4_reg_1586 <= out_local_V_0_myproject_fu_345_ap_return[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln32_fu_1184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_struct_last_V_reg_1619 <= out_struct_last_V_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_378_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ref_tmp_data_reg_1468 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln571_reg_1488 == 1'd0) & (icmp_ln22_reg_1464_pp0_iter1_reg == 1'd0))) begin
        select_ln603_reg_1524 <= select_ln603_fu_650_p3;
    end
end

always @ (*) begin
    if ((icmp_ln22_fu_378_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln32_fu_1184_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1464 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_314_p4 = add_ln22_reg_1459;
    end else begin
        ap_phi_mux_i_phi_fu_314_p4 = i_reg_310;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1464 == 1'd0))) begin
        ap_phi_mux_is_last_phi_fu_326_p4 = is_last_1_reg_1478;
    end else begin
        ap_phi_mux_is_last_phi_fu_326_p4 = is_last_reg_322;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_369_ce = 1'b1;
    end else begin
        grp_fu_369_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_378_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_378_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((icmp_ln32_reg_1615 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln32_reg_1615 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln22_fu_378_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln22_fu_378_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln32_fu_1184_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln32_fu_1184_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (regslice_both_out_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_469_p2 = (12'd1075 - zext_ln455_fu_429_p1);

assign LD_1_fu_1447_p1 = p_Result_7_fu_1435_p5[31:0];

assign add_ln22_fu_372_p2 = (ap_phi_mux_i_phi_fu_314_p4 + 4'd1);

assign add_ln32_fu_1178_p2 = (i_1_reg_334 + 2'd1);

assign add_ln581_fu_481_p2 = ($signed(F2_fu_469_p2) + $signed(12'd4080));

assign add_ln958_fu_1357_p2 = ($signed(sub_ln944_reg_1624) + $signed(32'd4294967271));

assign add_ln964_fu_1422_p2 = (sub_ln964_fu_1417_p2 + select_ln943_fu_1409_p3);

assign and_ln581_fu_594_p2 = (xor_ln582_fu_588_p2 & icmp_ln581_reg_1495);

assign and_ln582_fu_572_p2 = (xor_ln571_fu_567_p2 & icmp_ln582_reg_1512);

assign and_ln585_1_fu_619_p2 = (xor_ln585_fu_613_p2 & and_ln581_fu_594_p2);

assign and_ln585_fu_599_p2 = (icmp_ln585_fu_512_p2 & and_ln581_fu_594_p2);

assign and_ln603_fu_644_p2 = (xor_ln581_fu_638_p2 & icmp_ln603_fu_528_p2);

assign and_ln949_1_fu_1317_p2 = (xor_ln949_fu_1298_p2 & p_Result_6_fu_1304_p3);

assign and_ln949_fu_1279_p2 = (or_ln949_1_fu_1273_p2 & m_reg_1597);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln22_fu_378_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (in_r_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln22_fu_378_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (in_r_TVALID_int_regslice == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)) | ((icmp_ln32_reg_1615 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (out_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (out_r_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln32_reg_1615 == 1'd0) & (out_r_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter2 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (out_r_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln32_reg_1615 == 1'd0) & (out_r_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (out_r_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter2 = ((icmp_ln32_reg_1615_pp1_iter1_reg == 1'd0) & (out_r_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln22_fu_378_p2 == 1'd0) & (in_r_TVALID_int_regslice == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((icmp_ln32_reg_1615 == 1'd0) & (out_r_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1 = ((icmp_ln32_reg_1615 == 1'd0) & (out_r_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_fu_538_p2 = $signed(man_V_2_reg_1483) >>> zext_ln586_fu_534_p1;

assign exp_tmp_fu_419_p4 = {{ireg_fu_403_p1[62:52]}};

assign grp_fu_369_p0 = in_r_TDATA_int_regslice;

assign icmp_ln22_fu_378_p2 = ((ap_phi_mux_i_phi_fu_314_p4 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln26_1_fu_678_p2 = ((i_reg_310_pp0_iter2_reg == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln26_2_fu_692_p2 = ((i_reg_310_pp0_iter2_reg == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln26_3_fu_706_p2 = ((i_reg_310_pp0_iter2_reg == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln26_4_fu_720_p2 = ((i_reg_310_pp0_iter2_reg == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln26_5_fu_734_p2 = ((i_reg_310_pp0_iter2_reg == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln26_6_fu_748_p2 = ((i_reg_310_pp0_iter2_reg == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln26_7_fu_762_p2 = ((i_reg_310_pp0_iter2_reg == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln26_8_fu_776_p2 = ((i_reg_310_pp0_iter2_reg == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_664_p2 = ((i_reg_310_pp0_iter2_reg == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1184_p2 = ((i_1_reg_334 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1190_p2 = ((i_1_reg_334 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_463_p2 = ((trunc_ln555_fu_407_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_475_p2 = (($signed(F2_fu_469_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_493_p2 = ((F2_fu_469_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_512_p2 = ((sh_amt_fu_503_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_528_p2 = ((tmp_3_fu_518_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1158_p2 = ((out_local_V_0_reg_1579 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_1241_p2 = (($signed(tmp_fu_1231_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_1284_p2 = ((and_ln949_fu_1279_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1311_p2 = (($signed(lsb_index_fu_1225_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_local_V_0_fu_658_p3 = ((icmp_ln571_reg_1488_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : select_ln603_reg_1524);

assign in_local_V_9_10_fu_790_p3 = ((icmp_ln26_fu_664_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_8_082_reg_202);

assign in_local_V_9_11_fu_798_p3 = ((icmp_ln26_1_fu_678_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_10_fu_790_p3);

assign in_local_V_9_12_fu_806_p3 = ((icmp_ln26_2_fu_692_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_11_fu_798_p3);

assign in_local_V_9_13_fu_814_p3 = ((icmp_ln26_3_fu_706_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_12_fu_806_p3);

assign in_local_V_9_14_fu_822_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_13_fu_814_p3);

assign in_local_V_9_15_fu_830_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_14_fu_822_p3);

assign in_local_V_9_16_fu_838_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_15_fu_830_p3);

assign in_local_V_9_17_fu_846_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_16_fu_838_p3);

assign in_local_V_9_19_fu_854_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_8_082_reg_202 : in_local_V_9_17_fu_846_p3);

assign in_local_V_9_20_fu_862_p3 = ((icmp_ln26_1_fu_678_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_18_reg_214);

assign in_local_V_9_21_fu_870_p3 = ((icmp_ln26_2_fu_692_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_20_fu_862_p3);

assign in_local_V_9_22_fu_878_p3 = ((icmp_ln26_3_fu_706_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_21_fu_870_p3);

assign in_local_V_9_23_fu_886_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_22_fu_878_p3);

assign in_local_V_9_24_fu_894_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_23_fu_886_p3);

assign in_local_V_9_25_fu_902_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_24_fu_894_p3);

assign in_local_V_9_26_fu_910_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_25_fu_902_p3);

assign in_local_V_9_28_fu_918_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_18_reg_214 : in_local_V_9_26_fu_910_p3);

assign in_local_V_9_29_fu_926_p3 = ((icmp_ln26_2_fu_692_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_27_reg_226);

assign in_local_V_9_2_fu_684_p3 = ((icmp_ln26_1_fu_678_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_fu_670_p3);

assign in_local_V_9_30_fu_934_p3 = ((icmp_ln26_3_fu_706_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_29_fu_926_p3);

assign in_local_V_9_31_fu_942_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_30_fu_934_p3);

assign in_local_V_9_32_fu_950_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_31_fu_942_p3);

assign in_local_V_9_33_fu_958_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_32_fu_950_p3);

assign in_local_V_9_34_fu_966_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_33_fu_958_p3);

assign in_local_V_9_36_fu_974_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_27_reg_226 : in_local_V_9_34_fu_966_p3);

assign in_local_V_9_37_fu_982_p3 = ((icmp_ln26_3_fu_706_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_35_reg_238);

assign in_local_V_9_38_fu_990_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_9_35_reg_238 : in_local_V_9_37_fu_982_p3);

assign in_local_V_9_39_fu_998_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_9_35_reg_238 : in_local_V_9_38_fu_990_p3);

assign in_local_V_9_3_fu_698_p3 = ((icmp_ln26_2_fu_692_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_2_fu_684_p3);

assign in_local_V_9_40_fu_1006_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_35_reg_238 : in_local_V_9_39_fu_998_p3);

assign in_local_V_9_41_fu_1014_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_35_reg_238 : in_local_V_9_40_fu_1006_p3);

assign in_local_V_9_43_fu_1022_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_35_reg_238 : in_local_V_9_41_fu_1014_p3);

assign in_local_V_9_44_fu_1030_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_42_reg_250);

assign in_local_V_9_45_fu_1038_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_9_42_reg_250 : in_local_V_9_44_fu_1030_p3);

assign in_local_V_9_46_fu_1046_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_42_reg_250 : in_local_V_9_45_fu_1038_p3);

assign in_local_V_9_47_fu_1054_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_42_reg_250 : in_local_V_9_46_fu_1046_p3);

assign in_local_V_9_49_fu_1062_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_42_reg_250 : in_local_V_9_47_fu_1054_p3);

assign in_local_V_9_4_fu_712_p3 = ((icmp_ln26_3_fu_706_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_3_fu_698_p3);

assign in_local_V_9_50_fu_1070_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_48_reg_262);

assign in_local_V_9_51_fu_1078_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_48_reg_262 : in_local_V_9_50_fu_1070_p3);

assign in_local_V_9_52_fu_1086_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_48_reg_262 : in_local_V_9_51_fu_1078_p3);

assign in_local_V_9_54_fu_1094_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_48_reg_262 : in_local_V_9_52_fu_1086_p3);

assign in_local_V_9_55_fu_1102_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_53_reg_274);

assign in_local_V_9_56_fu_1110_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_53_reg_274 : in_local_V_9_55_fu_1102_p3);

assign in_local_V_9_58_fu_1118_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_53_reg_274 : in_local_V_9_56_fu_1110_p3);

assign in_local_V_9_59_fu_1126_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_57_reg_286);

assign in_local_V_9_5_fu_726_p3 = ((icmp_ln26_4_fu_720_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_4_fu_712_p3);

assign in_local_V_9_61_fu_1134_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_57_reg_286 : in_local_V_9_59_fu_1126_p3);

assign in_local_V_9_62_fu_1142_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_0_fu_658_p3 : in_local_V_9_60_reg_298);

assign in_local_V_9_6_fu_740_p3 = ((icmp_ln26_5_fu_734_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_5_fu_726_p3);

assign in_local_V_9_7_fu_754_p3 = ((icmp_ln26_6_fu_748_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_6_fu_740_p3);

assign in_local_V_9_8_fu_768_p3 = ((icmp_ln26_7_fu_762_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_7_fu_754_p3);

assign in_local_V_9_9_fu_782_p3 = ((icmp_ln26_8_fu_776_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_9_8_fu_768_p3);

assign in_local_V_9_fu_670_p3 = ((icmp_ln26_fu_664_p2[0:0] == 1'b1) ? in_local_V_9_083_reg_190 : in_local_V_0_fu_658_p3);

assign in_r_TREADY = regslice_both_in_V_data_V_U_ack_in;

assign ireg_fu_403_p1 = grp_fu_369_p1;

assign is_last_1_fu_397_p2 = (in_r_TLAST_int_regslice | ap_phi_mux_is_last_phi_fu_326_p4);


always @ (p_Result_5_fu_1202_p4) begin
    if (p_Result_5_fu_1202_p4[0] == 1'b1) begin
        l_fu_1211_p3 = 32'd0;
    end else if (p_Result_5_fu_1202_p4[1] == 1'b1) begin
        l_fu_1211_p3 = 32'd1;
    end else if (p_Result_5_fu_1202_p4[2] == 1'b1) begin
        l_fu_1211_p3 = 32'd2;
    end else if (p_Result_5_fu_1202_p4[3] == 1'b1) begin
        l_fu_1211_p3 = 32'd3;
    end else if (p_Result_5_fu_1202_p4[4] == 1'b1) begin
        l_fu_1211_p3 = 32'd4;
    end else if (p_Result_5_fu_1202_p4[5] == 1'b1) begin
        l_fu_1211_p3 = 32'd5;
    end else if (p_Result_5_fu_1202_p4[6] == 1'b1) begin
        l_fu_1211_p3 = 32'd6;
    end else if (p_Result_5_fu_1202_p4[7] == 1'b1) begin
        l_fu_1211_p3 = 32'd7;
    end else if (p_Result_5_fu_1202_p4[8] == 1'b1) begin
        l_fu_1211_p3 = 32'd8;
    end else if (p_Result_5_fu_1202_p4[9] == 1'b1) begin
        l_fu_1211_p3 = 32'd9;
    end else if (p_Result_5_fu_1202_p4[10] == 1'b1) begin
        l_fu_1211_p3 = 32'd10;
    end else if (p_Result_5_fu_1202_p4[11] == 1'b1) begin
        l_fu_1211_p3 = 32'd11;
    end else if (p_Result_5_fu_1202_p4[12] == 1'b1) begin
        l_fu_1211_p3 = 32'd12;
    end else if (p_Result_5_fu_1202_p4[13] == 1'b1) begin
        l_fu_1211_p3 = 32'd13;
    end else if (p_Result_5_fu_1202_p4[14] == 1'b1) begin
        l_fu_1211_p3 = 32'd14;
    end else if (p_Result_5_fu_1202_p4[15] == 1'b1) begin
        l_fu_1211_p3 = 32'd15;
    end else if (p_Result_5_fu_1202_p4[16] == 1'b1) begin
        l_fu_1211_p3 = 32'd16;
    end else if (p_Result_5_fu_1202_p4[17] == 1'b1) begin
        l_fu_1211_p3 = 32'd17;
    end else if (p_Result_5_fu_1202_p4[18] == 1'b1) begin
        l_fu_1211_p3 = 32'd18;
    end else if (p_Result_5_fu_1202_p4[19] == 1'b1) begin
        l_fu_1211_p3 = 32'd19;
    end else if (p_Result_5_fu_1202_p4[20] == 1'b1) begin
        l_fu_1211_p3 = 32'd20;
    end else if (p_Result_5_fu_1202_p4[21] == 1'b1) begin
        l_fu_1211_p3 = 32'd21;
    end else if (p_Result_5_fu_1202_p4[22] == 1'b1) begin
        l_fu_1211_p3 = 32'd22;
    end else if (p_Result_5_fu_1202_p4[23] == 1'b1) begin
        l_fu_1211_p3 = 32'd23;
    end else if (p_Result_5_fu_1202_p4[24] == 1'b1) begin
        l_fu_1211_p3 = 32'd24;
    end else if (p_Result_5_fu_1202_p4[25] == 1'b1) begin
        l_fu_1211_p3 = 32'd25;
    end else if (p_Result_5_fu_1202_p4[26] == 1'b1) begin
        l_fu_1211_p3 = 32'd26;
    end else if (p_Result_5_fu_1202_p4[27] == 1'b1) begin
        l_fu_1211_p3 = 32'd27;
    end else if (p_Result_5_fu_1202_p4[28] == 1'b1) begin
        l_fu_1211_p3 = 32'd28;
    end else if (p_Result_5_fu_1202_p4[29] == 1'b1) begin
        l_fu_1211_p3 = 32'd29;
    end else if (p_Result_5_fu_1202_p4[30] == 1'b1) begin
        l_fu_1211_p3 = 32'd30;
    end else if (p_Result_5_fu_1202_p4[31] == 1'b1) begin
        l_fu_1211_p3 = 32'd31;
    end else begin
        l_fu_1211_p3 = 32'd32;
    end
end

assign lsb_index_fu_1225_p2 = ($signed(sub_ln944_fu_1219_p2) + $signed(32'd4294967272));

assign lshr_ln947_fu_1261_p2 = 32'd4294967295 >> zext_ln947_fu_1257_p1;

assign lshr_ln958_fu_1366_p2 = zext_ln957_reg_1604 >> zext_ln958_fu_1362_p1;

assign m_1_fu_1371_p3 = ((icmp_ln958_reg_1630[0:0] == 1'b1) ? lshr_ln958_fu_1366_p2 : shl_ln959_fu_1352_p2);

assign m_2_fu_1381_p2 = (m_1_fu_1371_p3 + zext_ln961_fu_1378_p1);

assign m_5_fu_1387_p4 = {{m_2_fu_1381_p2[63:1]}};

assign m_fu_1168_p3 = ((p_Result_4_reg_1586[0:0] == 1'b1) ? tmp_V_fu_1163_p2 : out_local_V_0_reg_1579);

assign man_V_1_fu_449_p2 = (54'd0 - zext_ln569_fu_445_p1);

assign man_V_2_fu_455_p3 = ((p_Result_2_fu_411_p3[0:0] == 1'b1) ? man_V_1_fu_449_p2 : zext_ln569_fu_445_p1);

assign or_ln581_fu_633_p2 = (or_ln582_fu_584_p2 | icmp_ln581_reg_1495);

assign or_ln582_fu_584_p2 = (icmp_ln582_reg_1512 | icmp_ln571_reg_1488);

assign or_ln949_1_fu_1273_p2 = (shl_ln949_fu_1267_p2 | lshr_ln947_fu_1261_p2);

assign out_r_TDATA_int_regslice = ((icmp_ln935_reg_1592[0:0] == 1'b1) ? 32'd0 : LD_1_fu_1447_p1);

assign out_r_TVALID = regslice_both_out_V_data_V_U_vld_out;

assign out_struct_last_V_fu_1196_p2 = (is_last_reg_322 & icmp_ln34_fu_1190_p2);

assign p_Result_2_fu_411_p3 = ireg_fu_403_p1[32'd63];

assign p_Result_3_fu_437_p3 = {{1'd1}, {trunc_ln565_fu_433_p1}};

integer ap_tvar_int_0;

always @ (m_reg_1597) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_5_fu_1202_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_5_fu_1202_p4[ap_tvar_int_0] = m_reg_1597[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_6_fu_1304_p3 = m_reg_1597[lsb_index_fu_1225_p2];

assign p_Result_7_fu_1435_p5 = {{zext_ln962_fu_1397_p1[63:32]}, {tmp_1_fu_1428_p3}, {zext_ln962_fu_1397_p1[22:0]}};

assign p_Result_s_fu_1401_p3 = m_2_fu_1381_p2[32'd25];

assign select_ln582_fu_577_p3 = ((and_ln582_fu_572_p2[0:0] == 1'b1) ? trunc_ln583_reg_1518 : 32'd0);

assign select_ln585_1_fu_625_p3 = ((and_ln585_1_fu_619_p2[0:0] == 1'b1) ? select_ln588_fu_554_p3 : select_ln585_fu_605_p3);

assign select_ln585_fu_605_p3 = ((and_ln585_fu_599_p2[0:0] == 1'b1) ? trunc_ln586_fu_543_p1 : select_ln582_fu_577_p3);

assign select_ln588_fu_554_p3 = ((tmp_4_fu_547_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_fu_650_p3 = ((and_ln603_fu_644_p2[0:0] == 1'b1) ? shl_ln604_fu_562_p2 : select_ln585_1_fu_625_p3);

assign select_ln943_fu_1409_p3 = ((p_Result_s_fu_1401_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_fu_1323_p3 = ((icmp_ln946_fu_1241_p2[0:0] == 1'b1) ? icmp_ln949_fu_1284_p2 : p_Result_6_fu_1304_p3);

assign select_ln958_fu_1331_p3 = ((icmp_ln958_fu_1311_p2[0:0] == 1'b1) ? select_ln946_fu_1323_p3 : and_ln949_1_fu_1317_p2);

assign sext_ln581_fu_508_p1 = sh_amt_fu_503_p3;

assign sh_amt_fu_503_p3 = ((icmp_ln581_reg_1495[0:0] == 1'b1) ? add_ln581_reg_1502 : sub_ln581_reg_1507);

assign shl_ln604_fu_562_p2 = trunc_ln583_reg_1518 << sext_ln581_fu_508_p1;

assign shl_ln949_fu_1267_p2 = 32'd1 << lsb_index_fu_1225_p2;

assign shl_ln959_fu_1352_p2 = zext_ln957_reg_1604 << zext_ln959_fu_1348_p1;

assign sub_ln581_fu_487_p2 = (12'd16 - F2_fu_469_p2);

assign sub_ln944_fu_1219_p2 = (32'd32 - l_fu_1211_p3);

assign sub_ln947_fu_1251_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_1247_p1));

assign sub_ln959_fu_1343_p2 = (32'd25 - sub_ln944_reg_1624);

assign sub_ln964_fu_1417_p2 = (8'd16 - trunc_ln943_reg_1640);

assign tmp_1_fu_1428_p3 = {{p_Result_4_reg_1586}, {add_ln964_fu_1422_p2}};

assign tmp_3_fu_518_p4 = {{sh_amt_fu_503_p3[11:5]}};

assign tmp_4_fu_547_p3 = ref_tmp_data_reg_1468_pp0_iter1_reg[32'd31];

assign tmp_5_fu_1290_p3 = lsb_index_fu_1225_p2[32'd31];

assign tmp_V_fu_1163_p2 = (32'd0 - out_local_V_0_reg_1579);

assign tmp_fu_1231_p4 = {{lsb_index_fu_1225_p2[31:1]}};

assign trunc_ln555_fu_407_p1 = ireg_fu_403_p1[62:0];

assign trunc_ln565_fu_433_p1 = ireg_fu_403_p1[51:0];

assign trunc_ln583_fu_499_p1 = man_V_2_fu_455_p3[31:0];

assign trunc_ln586_fu_543_p1 = ashr_ln586_fu_538_p2[31:0];

assign trunc_ln943_fu_1339_p1 = l_fu_1211_p3[7:0];

assign trunc_ln947_fu_1247_p1 = sub_ln944_fu_1219_p2[5:0];

assign xor_ln571_fu_567_p2 = (icmp_ln571_reg_1488 ^ 1'd1);

assign xor_ln581_fu_638_p2 = (or_ln581_fu_633_p2 ^ 1'd1);

assign xor_ln582_fu_588_p2 = (or_ln582_fu_584_p2 ^ 1'd1);

assign xor_ln585_fu_613_p2 = (icmp_ln585_fu_512_p2 ^ 1'd1);

assign xor_ln949_fu_1298_p2 = (tmp_5_fu_1290_p3 ^ 1'd1);

assign zext_ln455_fu_429_p1 = exp_tmp_fu_419_p4;

assign zext_ln569_fu_445_p1 = p_Result_3_fu_437_p3;

assign zext_ln586_fu_534_p1 = $unsigned(sext_ln581_fu_508_p1);

assign zext_ln947_fu_1257_p1 = sub_ln947_fu_1251_p2;

assign zext_ln957_fu_1174_p1 = m_fu_1168_p3;

assign zext_ln958_fu_1362_p1 = add_ln958_fu_1357_p2;

assign zext_ln959_fu_1348_p1 = sub_ln959_fu_1343_p2;

assign zext_ln961_fu_1378_p1 = select_ln958_reg_1635;

assign zext_ln962_fu_1397_p1 = m_5_fu_1387_p4;

always @ (posedge ap_clk) begin
    zext_ln957_reg_1604[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //myproject_axi
