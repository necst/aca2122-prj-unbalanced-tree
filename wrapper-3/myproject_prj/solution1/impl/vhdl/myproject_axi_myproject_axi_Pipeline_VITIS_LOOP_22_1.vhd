-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
-- Version: 2020.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_22_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_TVALID : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_r_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_local_V_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_9_out_ap_vld : OUT STD_LOGIC;
    in_local_V_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_8_out_ap_vld : OUT STD_LOGIC;
    in_local_V_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_7_out_ap_vld : OUT STD_LOGIC;
    in_local_V_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_6_out_ap_vld : OUT STD_LOGIC;
    in_local_V_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_5_out_ap_vld : OUT STD_LOGIC;
    in_local_V_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_4_out_ap_vld : OUT STD_LOGIC;
    in_local_V_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_3_out_ap_vld : OUT STD_LOGIC;
    in_local_V_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_2_out_ap_vld : OUT STD_LOGIC;
    in_local_V_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_1_out_ap_vld : OUT STD_LOGIC;
    in_local_V_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_local_V_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_22_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln22_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_reg_1178 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_1178_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_1178_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln22_reg_1191 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_reg_1191_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_reg_1195 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_reg_1195_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1205 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln574_fu_307_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln574_reg_1210 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln580_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_reg_1215 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln580_reg_1215_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln590_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln590_reg_1222 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln590_fu_329_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln590_reg_1228 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_335_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_reg_1233 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln591_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln591_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln590_fu_490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln590_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_114 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_fu_257_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_local_V_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_53_fu_1003_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_1_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_44_fu_931_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_2_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_36_fu_867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_3_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_29_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_4_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_23_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_5_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_18_fu_723_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_6_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_14_fu_691_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_7_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_11_fu_667_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_8_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_9_fu_651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_8_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_293_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln564_fu_281_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_fu_303_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_317_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_1_fu_347_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_354_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_358_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_fu_371_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_364_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln590_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln595_fu_390_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_394_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln597_fu_411_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_427_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln592_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln612_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln613_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln580_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln591_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln612_fu_449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln591_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln591_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln594_fu_419_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln591_fu_467_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln580_fu_528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_1_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_2_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_1_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_3_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_2_fu_565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_4_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_3_fu_578_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_5_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_4_fu_591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_6_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_5_fu_604_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_7_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_6_fu_617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_8_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_7_fu_630_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_10_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_12_fu_675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_13_fu_683_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_15_fu_699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_16_fu_707_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_17_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_19_fu_731_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_20_fu_739_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_21_fu_747_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_22_fu_755_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_24_fu_771_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_25_fu_779_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_26_fu_787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_27_fu_795_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_28_fu_803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_30_fu_819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_31_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_32_fu_835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_33_fu_843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_34_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_35_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_37_fu_875_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_38_fu_883_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_39_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_40_fu_899_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_41_fu_907_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_42_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_43_fu_923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_45_fu_939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_46_fu_947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_47_fu_955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_48_fu_963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_49_fu_971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_50_fu_979_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_51_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_52_fu_995_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_240_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component myproject_axi_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fpext_32ns_64_2_no_dsp_1_U1 : component myproject_axi_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_240_p0,
        ce => grp_fu_240_ce,
        dout => grp_fu_240_p1);

    flow_control_loop_pipe_sequential_init_U : component myproject_axi_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    i_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    i_fu_114 <= add_ln22_fu_257_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_114 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln590_reg_1228 <= add_ln590_fu_329_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_1_reg_1178 <= ap_sig_allocacmp_i_1;
                i_1_reg_1178_pp0_iter1_reg <= i_1_reg_1178;
                icmp_ln22_reg_1191 <= icmp_ln22_fu_251_p2;
                icmp_ln22_reg_1191_pp0_iter1_reg <= icmp_ln22_reg_1191;
                icmp_ln580_reg_1215 <= icmp_ln580_fu_311_p2;
                icmp_ln590_reg_1222 <= icmp_ln590_fu_323_p2;
                icmp_ln591_reg_1238 <= icmp_ln591_fu_341_p2;
                p_0_reg_1195_pp0_iter1_reg <= p_0_reg_1195;
                p_Result_s_reg_1205 <= ireg_fu_277_p1(63 downto 63);
                sub_ln590_reg_1233 <= sub_ln590_fu_335_p2;
                trunc_ln574_reg_1210 <= trunc_ln574_fu_307_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                i_1_reg_1178_pp0_iter2_reg <= i_1_reg_1178_pp0_iter1_reg;
                icmp_ln580_reg_1215_pp0_iter2_reg <= icmp_ln580_reg_1215;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                in_local_V_1_fu_122 <= select_ln26_44_fu_931_p3;
                in_local_V_2_fu_126 <= select_ln26_36_fu_867_p3;
                in_local_V_3_fu_130 <= select_ln26_29_fu_811_p3;
                in_local_V_4_fu_134 <= select_ln26_23_fu_763_p3;
                in_local_V_5_fu_138 <= select_ln26_18_fu_723_p3;
                in_local_V_6_fu_142 <= select_ln26_14_fu_691_p3;
                in_local_V_7_fu_146 <= select_ln26_11_fu_667_p3;
                in_local_V_8_fu_150 <= select_ln26_9_fu_651_p3;
                in_local_V_9_fu_154 <= select_ln26_8_fu_643_p3;
                in_local_V_fu_118 <= select_ln26_53_fu_1003_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_0_reg_1195 <= in_r_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln580_reg_1215 = ap_const_lv1_0))) then
                select_ln590_reg_1244 <= select_ln590_fu_490_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    F2_fu_317_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_303_p1));
    add_ln22_fu_257_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv4_1));
    add_ln590_fu_329_p2 <= std_logic_vector(unsigned(F2_fu_317_p2) + unsigned(ap_const_lv12_FF0));
    and_ln590_fu_485_p2 <= (xor_ln591_fu_479_p2 and icmp_ln590_reg_1222);
    and_ln591_fu_462_p2 <= (xor_ln580_fu_457_p2 and icmp_ln591_reg_1238);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_r_TVALID, icmp_ln22_fu_251_p2, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (in_r_TVALID = ap_const_logic_0) and (ap_start_int = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_r_TVALID, icmp_ln22_fu_251_p2, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (in_r_TVALID = ap_const_logic_0) and (ap_start_int = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_r_TVALID, icmp_ln22_fu_251_p2, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (in_r_TVALID = ap_const_logic_0) and (ap_start_int = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(in_r_TVALID, icmp_ln22_fu_251_p2)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (in_r_TVALID = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln22_fu_251_p2, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln22_fu_251_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_114, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_114;
        end if; 
    end process;

    ashr_ln595_fu_394_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_364_p3),to_integer(unsigned('0' & zext_ln595_fu_390_p1(31-1 downto 0)))));
    exp_tmp_fu_293_p4 <= ireg_fu_277_p1(62 downto 52);

    grp_fu_240_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_240_ce <= ap_const_logic_1;
        else 
            grp_fu_240_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_240_p0 <= in_r_TDATA;
    icmp_ln22_fu_251_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv4_A) else "0";
    icmp_ln26_1_fu_547_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_7) else "0";
    icmp_ln26_2_fu_560_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_6) else "0";
    icmp_ln26_3_fu_573_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_5) else "0";
    icmp_ln26_4_fu_586_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_4) else "0";
    icmp_ln26_5_fu_599_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_3) else "0";
    icmp_ln26_6_fu_612_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_2) else "0";
    icmp_ln26_7_fu_625_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_1) else "0";
    icmp_ln26_8_fu_638_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_0) else "0";
    icmp_ln26_fu_534_p2 <= "1" when (i_1_reg_1178_pp0_iter2_reg = ap_const_lv4_8) else "0";
    icmp_ln580_fu_311_p2 <= "1" when (trunc_ln564_fu_281_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_fu_323_p2 <= "1" when (signed(F2_fu_317_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln591_fu_341_p2 <= "1" when (F2_fu_317_p2 = ap_const_lv12_10) else "0";
    icmp_ln594_fu_384_p2 <= "1" when (unsigned(sh_amt_fu_371_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_fu_437_p2 <= "1" when (tmp_1_fu_427_p4 = ap_const_lv7_0) else "0";
    in_local_V_1_out <= in_local_V_1_fu_122;

    in_local_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_2_out <= in_local_V_2_fu_126;

    in_local_V_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_2_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_3_out <= in_local_V_3_fu_130;

    in_local_V_3_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_3_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_4_out <= in_local_V_4_fu_134;

    in_local_V_4_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_4_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_5_out <= in_local_V_5_fu_138;

    in_local_V_5_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_5_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_6_out <= in_local_V_6_fu_142;

    in_local_V_6_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_6_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_7_out <= in_local_V_7_fu_146;

    in_local_V_7_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_7_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_8_out <= in_local_V_8_fu_150;

    in_local_V_8_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_8_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_9_out <= in_local_V_9_fu_154;

    in_local_V_9_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_9_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    in_local_V_out <= in_local_V_fu_118;

    in_local_V_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln22_reg_1191_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_reg_1191_pp0_iter1_reg = ap_const_lv1_1))) then 
            in_local_V_out_ap_vld <= ap_const_logic_1;
        else 
            in_local_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, in_r_TVALID, icmp_ln22_fu_251_p2, ap_block_pp0_stage0, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TDATA_blk_n <= in_r_TVALID;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln22_fu_251_p2, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln22_fu_251_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    ireg_fu_277_p1 <= grp_fu_240_p1;
    man_V_1_fu_358_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_354_p1));
    man_V_2_fu_364_p3 <= 
        man_V_1_fu_358_p2 when (p_Result_s_reg_1205(0) = '1') else 
        zext_ln578_fu_354_p1;
    or_ln591_fu_475_p2 <= (icmp_ln591_reg_1238 or icmp_ln580_reg_1215);
    p_Result_1_fu_347_p3 <= (ap_const_lv1_1 & trunc_ln574_reg_1210);
    select_ln26_10_fu_659_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        in_local_V_7_fu_146;
    select_ln26_11_fu_667_p3 <= 
        in_local_V_7_fu_146 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_10_fu_659_p3;
    select_ln26_12_fu_675_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        in_local_V_6_fu_142;
    select_ln26_13_fu_683_p3 <= 
        in_local_V_6_fu_142 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_12_fu_675_p3;
    select_ln26_14_fu_691_p3 <= 
        in_local_V_6_fu_142 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_13_fu_683_p3;
    select_ln26_15_fu_699_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        in_local_V_5_fu_138;
    select_ln26_16_fu_707_p3 <= 
        in_local_V_5_fu_138 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_15_fu_699_p3;
    select_ln26_17_fu_715_p3 <= 
        in_local_V_5_fu_138 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_16_fu_707_p3;
    select_ln26_18_fu_723_p3 <= 
        in_local_V_5_fu_138 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_17_fu_715_p3;
    select_ln26_19_fu_731_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        in_local_V_4_fu_134;
    select_ln26_1_fu_552_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_1_fu_547_p2(0) = '1') else 
        select_ln26_fu_539_p3;
    select_ln26_20_fu_739_p3 <= 
        in_local_V_4_fu_134 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_19_fu_731_p3;
    select_ln26_21_fu_747_p3 <= 
        in_local_V_4_fu_134 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_20_fu_739_p3;
    select_ln26_22_fu_755_p3 <= 
        in_local_V_4_fu_134 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_21_fu_747_p3;
    select_ln26_23_fu_763_p3 <= 
        in_local_V_4_fu_134 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_22_fu_755_p3;
    select_ln26_24_fu_771_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_3_fu_573_p2(0) = '1') else 
        in_local_V_3_fu_130;
    select_ln26_25_fu_779_p3 <= 
        in_local_V_3_fu_130 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        select_ln26_24_fu_771_p3;
    select_ln26_26_fu_787_p3 <= 
        in_local_V_3_fu_130 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_25_fu_779_p3;
    select_ln26_27_fu_795_p3 <= 
        in_local_V_3_fu_130 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_26_fu_787_p3;
    select_ln26_28_fu_803_p3 <= 
        in_local_V_3_fu_130 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_27_fu_795_p3;
    select_ln26_29_fu_811_p3 <= 
        in_local_V_3_fu_130 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_28_fu_803_p3;
    select_ln26_2_fu_565_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_2_fu_560_p2(0) = '1') else 
        select_ln26_1_fu_552_p3;
    select_ln26_30_fu_819_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_2_fu_560_p2(0) = '1') else 
        in_local_V_2_fu_126;
    select_ln26_31_fu_827_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_3_fu_573_p2(0) = '1') else 
        select_ln26_30_fu_819_p3;
    select_ln26_32_fu_835_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        select_ln26_31_fu_827_p3;
    select_ln26_33_fu_843_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_32_fu_835_p3;
    select_ln26_34_fu_851_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_33_fu_843_p3;
    select_ln26_35_fu_859_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_34_fu_851_p3;
    select_ln26_36_fu_867_p3 <= 
        in_local_V_2_fu_126 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_35_fu_859_p3;
    select_ln26_37_fu_875_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_1_fu_547_p2(0) = '1') else 
        in_local_V_1_fu_122;
    select_ln26_38_fu_883_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_2_fu_560_p2(0) = '1') else 
        select_ln26_37_fu_875_p3;
    select_ln26_39_fu_891_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_3_fu_573_p2(0) = '1') else 
        select_ln26_38_fu_883_p3;
    select_ln26_3_fu_578_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_3_fu_573_p2(0) = '1') else 
        select_ln26_2_fu_565_p3;
    select_ln26_40_fu_899_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        select_ln26_39_fu_891_p3;
    select_ln26_41_fu_907_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_40_fu_899_p3;
    select_ln26_42_fu_915_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_41_fu_907_p3;
    select_ln26_43_fu_923_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_42_fu_915_p3;
    select_ln26_44_fu_931_p3 <= 
        in_local_V_1_fu_122 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_43_fu_923_p3;
    select_ln26_45_fu_939_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_fu_534_p2(0) = '1') else 
        in_local_V_fu_118;
    select_ln26_46_fu_947_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_1_fu_547_p2(0) = '1') else 
        select_ln26_45_fu_939_p3;
    select_ln26_47_fu_955_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_2_fu_560_p2(0) = '1') else 
        select_ln26_46_fu_947_p3;
    select_ln26_48_fu_963_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_3_fu_573_p2(0) = '1') else 
        select_ln26_47_fu_955_p3;
    select_ln26_49_fu_971_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        select_ln26_48_fu_963_p3;
    select_ln26_4_fu_591_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_4_fu_586_p2(0) = '1') else 
        select_ln26_3_fu_578_p3;
    select_ln26_50_fu_979_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_49_fu_971_p3;
    select_ln26_51_fu_987_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_50_fu_979_p3;
    select_ln26_52_fu_995_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_51_fu_987_p3;
    select_ln26_53_fu_1003_p3 <= 
        in_local_V_fu_118 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_52_fu_995_p3;
    select_ln26_5_fu_604_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_5_fu_599_p2(0) = '1') else 
        select_ln26_4_fu_591_p3;
    select_ln26_6_fu_617_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_6_fu_612_p2(0) = '1') else 
        select_ln26_5_fu_604_p3;
    select_ln26_7_fu_630_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_7_fu_625_p2(0) = '1') else 
        select_ln26_6_fu_617_p3;
    select_ln26_8_fu_643_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        select_ln26_7_fu_630_p3;
    select_ln26_9_fu_651_p3 <= 
        select_ln580_fu_528_p3 when (icmp_ln26_8_fu_638_p2(0) = '1') else 
        in_local_V_8_fu_150;
    select_ln26_fu_539_p3 <= 
        in_local_V_9_fu_154 when (icmp_ln26_fu_534_p2(0) = '1') else 
        select_ln580_fu_528_p3;
    select_ln580_fu_528_p3 <= 
        ap_const_lv32_0 when (icmp_ln580_reg_1215_pp0_iter2_reg(0) = '1') else 
        select_ln590_reg_1244;
    select_ln590_fu_490_p3 <= 
        select_ln594_fu_419_p3 when (and_ln590_fu_485_p2(0) = '1') else 
        select_ln591_fu_467_p3;
    select_ln591_fu_467_p3 <= 
        trunc_ln592_fu_380_p1 when (and_ln591_fu_462_p2(0) = '1') else 
        select_ln612_fu_449_p3;
    select_ln594_fu_419_p3 <= 
        trunc_ln595_fu_400_p1 when (icmp_ln594_fu_384_p2(0) = '1') else 
        select_ln597_fu_411_p3;
    select_ln597_fu_411_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_fu_404_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln612_fu_449_p3 <= 
        shl_ln613_fu_443_p2 when (icmp_ln612_fu_437_p2(0) = '1') else 
        ap_const_lv32_0;
        sext_ln590_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_371_p3),32));

    sh_amt_fu_371_p3 <= 
        add_ln590_reg_1228 when (icmp_ln590_reg_1222(0) = '1') else 
        sub_ln590_reg_1233;
    shl_ln613_fu_443_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln592_fu_380_p1),to_integer(unsigned('0' & sext_ln590_fu_376_p1(31-1 downto 0)))));
    sub_ln590_fu_335_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_317_p2));
    tmp_1_fu_427_p4 <= sh_amt_fu_371_p3(11 downto 5);
    tmp_fu_404_p3 <= p_0_reg_1195_pp0_iter1_reg(31 downto 31);
    trunc_ln564_fu_281_p1 <= ireg_fu_277_p1(63 - 1 downto 0);
    trunc_ln574_fu_307_p1 <= ireg_fu_277_p1(52 - 1 downto 0);
    trunc_ln592_fu_380_p1 <= man_V_2_fu_364_p3(32 - 1 downto 0);
    trunc_ln595_fu_400_p1 <= ashr_ln595_fu_394_p2(32 - 1 downto 0);
    xor_ln580_fu_457_p2 <= (icmp_ln580_reg_1215 xor ap_const_lv1_1);
    xor_ln591_fu_479_p2 <= (or_ln591_fu_475_p2 xor ap_const_lv1_1);
    zext_ln501_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_293_p4),12));
    zext_ln578_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_347_p3),54));
    zext_ln595_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln590_fu_376_p1),54));
end behav;
