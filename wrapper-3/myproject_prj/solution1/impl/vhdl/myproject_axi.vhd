-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
-- Version: 2020.1
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_r_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of myproject_axi is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject_axi_myproject_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.971116,HLS_SYN_LAT=20,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=827,HLS_SYN_LUT=4988,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln22_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln32_reg_1615 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal icmp_ln32_reg_1615_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_083_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_8_082_reg_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_18_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_27_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_35_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_42_reg_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_48_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_53_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_57_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_60_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_310 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_310_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_310_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal is_last_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_334 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln22_fu_372_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln22_reg_1459 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln22_reg_1464 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_reg_1464_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_reg_1464_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ref_tmp_data_reg_1468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_tmp_data_reg_1468_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal is_last_1_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_last_1_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_455_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_1483 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_1488 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_1488_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_1495 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_481_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_reg_1502 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_487_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_reg_1507 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_1518 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_fu_650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_reg_1524 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_9_fu_782_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal in_local_V_9_19_fu_854_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_28_fu_918_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_36_fu_974_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_43_fu_1022_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_49_fu_1062_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_54_fu_1094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_58_fu_1118_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_61_fu_1134_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_62_fu_1142_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_local_V_0_myproject_fu_345_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal out_local_V_0_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Result_4_reg_1586 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_1592 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal m_fu_1168_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_reg_1597 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln957_fu_1174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln957_reg_1604 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln32_fu_1178_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln32_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_struct_last_V_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_struct_last_V_reg_1619 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln944_fu_1219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_1624 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_1630 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_fu_1331_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln958_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_1339_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_1640 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal out_local_V_0_myproject_fu_345_ap_ready : STD_LOGIC;
    signal ap_phi_mux_i_phi_fu_314_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_is_last_phi_fu_326_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal grp_fu_369_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_419_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_433_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_3_fu_437_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_445_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_2_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_449_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln555_fu_407_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_429_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_469_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_503_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_518_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln581_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_534_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_538_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_4_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln582_fu_577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln585_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_1_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_554_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_fu_605_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln581_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_0_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_1_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_fu_670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_2_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_2_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_3_fu_706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_3_fu_698_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_4_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_4_fu_712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_5_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_5_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_6_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_6_fu_740_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_7_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_7_fu_754_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_8_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_local_V_9_8_fu_768_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_10_fu_790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_11_fu_798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_12_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_13_fu_814_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_14_fu_822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_15_fu_830_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_16_fu_838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_17_fu_846_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_20_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_21_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_22_fu_878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_23_fu_886_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_24_fu_894_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_25_fu_902_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_26_fu_910_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_29_fu_926_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_30_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_31_fu_942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_32_fu_950_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_33_fu_958_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_34_fu_966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_37_fu_982_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_38_fu_990_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_39_fu_998_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_40_fu_1006_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_41_fu_1014_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_44_fu_1030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_45_fu_1038_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_46_fu_1046_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_47_fu_1054_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_50_fu_1070_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_51_fu_1078_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_52_fu_1086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_55_fu_1102_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_56_fu_1110_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_local_V_9_59_fu_1126_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_1163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln34_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_1202_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_1211_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1231_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_1247_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_1251_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_1257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_1_fu_1273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_1279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_1304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln946_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_1323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_1_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_fu_1343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_fu_1348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln958_fu_1357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_fu_1362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln958_fu_1366_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_1352_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_1371_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_2_fu_1381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_5_fu_1387_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_1401_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln964_fu_1417_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_1409_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_1422_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_1397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1428_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_7_fu_1435_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_fu_1447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_369_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal regslice_both_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal regslice_both_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_r_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_V_last_V_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal out_r_TVALID_int_regslice : STD_LOGIC;
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_myproject IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component myproject_axi_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component myproject_axi_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    out_local_V_0_myproject_fu_345 : component myproject_axi_myproject
    port map (
        ap_ready => out_local_V_0_myproject_fu_345_ap_ready,
        p_read => in_local_V_9_60_reg_298,
        p_read1 => in_local_V_9_57_reg_286,
        p_read2 => in_local_V_9_53_reg_274,
        p_read3 => in_local_V_9_48_reg_262,
        p_read4 => in_local_V_9_42_reg_250,
        p_read5 => in_local_V_9_35_reg_238,
        p_read6 => in_local_V_9_27_reg_226,
        p_read7 => in_local_V_9_18_reg_214,
        p_read8 => in_local_V_8_082_reg_202,
        p_read9 => in_local_V_9_083_reg_190,
        ap_return => out_local_V_0_myproject_fu_345_ap_return);

    fpext_32ns_64_2_no_dsp_1_U39 : component myproject_axi_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_369_p0,
        ce => grp_fu_369_ce,
        dout => grp_fu_369_p1);

    regslice_both_in_V_data_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_data_V_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_V_data_V_U_apdone_blk);

    regslice_both_in_V_keep_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TKEEP,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_keep_V_U_ack_in,
        data_out => in_r_TKEEP_int_regslice,
        vld_out => regslice_both_in_V_keep_V_U_vld_out,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_V_keep_V_U_apdone_blk);

    regslice_both_in_V_strb_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TSTRB,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_strb_V_U_ack_in,
        data_out => in_r_TSTRB_int_regslice,
        vld_out => regslice_both_in_V_strb_V_U_vld_out,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_V_strb_V_U_apdone_blk);

    regslice_both_in_V_last_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TLAST,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_V_last_V_U_ack_in,
        data_out => in_r_TLAST_int_regslice,
        vld_out => regslice_both_in_V_last_V_U_vld_out,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_V_last_V_U_apdone_blk);

    regslice_both_out_V_data_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_V_data_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_data_V_U_apdone_blk);

    regslice_both_out_V_keep_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_keep_V_U_ack_in_dummy,
        data_out => out_r_TKEEP,
        vld_out => regslice_both_out_V_keep_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_keep_V_U_apdone_blk);

    regslice_both_out_V_strb_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_strb_V_U_ack_in_dummy,
        data_out => out_r_TSTRB,
        vld_out => regslice_both_out_V_strb_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_strb_V_U_apdone_blk);

    regslice_both_out_V_last_V_U : component myproject_axi_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_struct_last_V_reg_1619,
        vld_in => out_r_TVALID_int_regslice,
        ack_in => regslice_both_out_V_last_V_U_ack_in_dummy,
        data_out => out_r_TLAST,
        vld_out => regslice_both_out_V_last_V_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_1_reg_334 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln32_fu_1184_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                i_1_reg_334 <= add_ln32_fu_1178_p2;
            end if; 
        end if;
    end process;

    i_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln22_reg_1464 = ap_const_lv1_0))) then 
                i_reg_310 <= add_ln22_reg_1459;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                i_reg_310 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    is_last_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln22_reg_1464 = ap_const_lv1_0))) then 
                is_last_reg_322 <= is_last_1_reg_1478;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                is_last_reg_322 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln22_reg_1459 <= add_ln22_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln22_reg_1464 = ap_const_lv1_0))) then
                add_ln581_reg_1502 <= add_ln581_fu_481_p2;
                icmp_ln571_reg_1488 <= icmp_ln571_fu_463_p2;
                icmp_ln581_reg_1495 <= icmp_ln581_fu_475_p2;
                icmp_ln582_reg_1512 <= icmp_ln582_fu_493_p2;
                man_V_2_reg_1483 <= man_V_2_fu_455_p3;
                sub_ln581_reg_1507 <= sub_ln581_fu_487_p2;
                trunc_ln583_reg_1518 <= trunc_ln583_fu_499_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_310_pp0_iter1_reg <= i_reg_310;
                icmp_ln22_reg_1464 <= icmp_ln22_fu_378_p2;
                icmp_ln22_reg_1464_pp0_iter1_reg <= icmp_ln22_reg_1464;
                ref_tmp_data_reg_1468_pp0_iter1_reg <= ref_tmp_data_reg_1468;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                i_reg_310_pp0_iter2_reg <= i_reg_310_pp0_iter1_reg;
                icmp_ln22_reg_1464_pp0_iter2_reg <= icmp_ln22_reg_1464_pp0_iter1_reg;
                icmp_ln571_reg_1488_pp0_iter2_reg <= icmp_ln571_reg_1488;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln32_reg_1615 <= icmp_ln32_fu_1184_p2;
                icmp_ln32_reg_1615_pp1_iter1_reg <= icmp_ln32_reg_1615;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln935_reg_1592 <= icmp_ln935_fu_1158_p2;
                m_reg_1597 <= m_fu_1168_p3;
                    zext_ln957_reg_1604(31 downto 0) <= zext_ln957_fu_1174_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln32_fu_1184_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln935_reg_1592 = ap_const_lv1_0))) then
                icmp_ln958_reg_1630 <= icmp_ln958_fu_1311_p2;
                select_ln958_reg_1635 <= select_ln958_fu_1331_p3;
                sub_ln944_reg_1624 <= sub_ln944_fu_1219_p2;
                trunc_ln943_reg_1640 <= trunc_ln943_fu_1339_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln22_reg_1464_pp0_iter2_reg = ap_const_lv1_0))) then
                in_local_V_8_082_reg_202 <= in_local_V_9_19_fu_854_p3;
                in_local_V_9_083_reg_190 <= in_local_V_9_9_fu_782_p3;
                in_local_V_9_18_reg_214 <= in_local_V_9_28_fu_918_p3;
                in_local_V_9_27_reg_226 <= in_local_V_9_36_fu_974_p3;
                in_local_V_9_35_reg_238 <= in_local_V_9_43_fu_1022_p3;
                in_local_V_9_42_reg_250 <= in_local_V_9_49_fu_1062_p3;
                in_local_V_9_48_reg_262 <= in_local_V_9_54_fu_1094_p3;
                in_local_V_9_53_reg_274 <= in_local_V_9_58_fu_1118_p3;
                in_local_V_9_57_reg_286 <= in_local_V_9_61_fu_1134_p3;
                in_local_V_9_60_reg_298 <= in_local_V_9_62_fu_1142_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                is_last_1_reg_1478 <= is_last_1_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                out_local_V_0_reg_1579 <= out_local_V_0_myproject_fu_345_ap_return;
                p_Result_4_reg_1586 <= out_local_V_0_myproject_fu_345_ap_return(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln32_fu_1184_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                out_struct_last_V_reg_1619 <= out_struct_last_V_fu_1196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ref_tmp_data_reg_1468 <= in_r_TDATA_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln571_reg_1488 = ap_const_lv1_0) and (icmp_ln22_reg_1464_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln603_reg_1524 <= select_ln603_fu_650_p3;
            end if;
        end if;
    end process;
    zext_ln957_reg_1604(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter0, icmp_ln22_fu_378_p2, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp1_iter0, icmp_ln32_fu_1184_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_CS_fsm_state11, regslice_both_out_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln22_fu_378_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln22_fu_378_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln32_fu_1184_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln32_fu_1184_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (regslice_both_out_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    F2_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_429_p1));
    LD_1_fu_1447_p1 <= p_Result_7_fu_1435_p5(32 - 1 downto 0);
    add_ln22_fu_372_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_314_p4) + unsigned(ap_const_lv4_1));
    add_ln32_fu_1178_p2 <= std_logic_vector(unsigned(i_1_reg_334) + unsigned(ap_const_lv2_1));
    add_ln581_fu_481_p2 <= std_logic_vector(unsigned(F2_fu_469_p2) + unsigned(ap_const_lv12_FF0));
    add_ln958_fu_1357_p2 <= std_logic_vector(unsigned(sub_ln944_reg_1624) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_fu_1422_p2 <= std_logic_vector(unsigned(sub_ln964_fu_1417_p2) + unsigned(select_ln943_fu_1409_p3));
    and_ln581_fu_594_p2 <= (xor_ln582_fu_588_p2 and icmp_ln581_reg_1495);
    and_ln582_fu_572_p2 <= (xor_ln571_fu_567_p2 and icmp_ln582_reg_1512);
    and_ln585_1_fu_619_p2 <= (xor_ln585_fu_613_p2 and and_ln581_fu_594_p2);
    and_ln585_fu_599_p2 <= (icmp_ln585_fu_512_p2 and and_ln581_fu_594_p2);
    and_ln603_fu_644_p2 <= (xor_ln581_fu_638_p2 and icmp_ln603_fu_528_p2);
    and_ln949_1_fu_1317_p2 <= (xor_ln949_fu_1298_p2 and p_Result_6_fu_1304_p3);
    and_ln949_fu_1279_p2 <= (or_ln949_1_fu_1273_p2 and m_reg_1597);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(5);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln22_fu_378_p2, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln22_fu_378_p2, in_r_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(ap_enable_reg_pp1_iter1, icmp_ln32_reg_1615, ap_enable_reg_pp1_iter2, icmp_ln32_reg_1615_pp1_iter1_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (out_r_TREADY_int_regslice = ap_const_logic_0)) or ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (out_r_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, icmp_ln32_reg_1615, ap_enable_reg_pp1_iter2, icmp_ln32_reg_1615_pp1_iter1_reg, ap_block_state9_io, ap_block_state10_io, out_r_TREADY_int_regslice)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, icmp_ln32_reg_1615, ap_enable_reg_pp1_iter2, icmp_ln32_reg_1615_pp1_iter1_reg, ap_block_state9_io, ap_block_state10_io, out_r_TREADY_int_regslice)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_state10_io_assign_proc : process(icmp_ln32_reg_1615_pp1_iter1_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state10_io <= ((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter2_assign_proc : process(icmp_ln32_reg_1615_pp1_iter1_reg, out_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp1_stage0_iter2 <= ((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(icmp_ln22_fu_378_p2, in_r_TVALID_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (in_r_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(icmp_ln32_reg_1615, out_r_TREADY_int_regslice)
    begin
                ap_block_state9_io <= ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state9_pp1_stage0_iter1_assign_proc : process(icmp_ln32_reg_1615, out_r_TREADY_int_regslice)
    begin
                ap_block_state9_pp1_stage0_iter1 <= ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (out_r_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln22_fu_378_p2)
    begin
        if ((icmp_ln22_fu_378_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln32_fu_1184_p2)
    begin
        if ((icmp_ln32_fu_1184_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_314_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_reg_310, add_ln22_reg_1459, icmp_ln22_reg_1464, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln22_reg_1464 = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_314_p4 <= add_ln22_reg_1459;
        else 
            ap_phi_mux_i_phi_fu_314_p4 <= i_reg_310;
        end if; 
    end process;


    ap_phi_mux_is_last_phi_fu_326_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, is_last_reg_322, icmp_ln22_reg_1464, is_last_1_reg_1478, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln22_reg_1464 = ap_const_lv1_0))) then 
            ap_phi_mux_is_last_phi_fu_326_p4 <= is_last_1_reg_1478;
        else 
            ap_phi_mux_is_last_phi_fu_326_p4 <= is_last_reg_322;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ashr_ln586_fu_538_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_1483),to_integer(unsigned('0' & zext_ln586_fu_534_p1(31-1 downto 0)))));
    exp_tmp_fu_419_p4 <= ireg_fu_403_p1(62 downto 52);

    grp_fu_369_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_369_ce <= ap_const_logic_1;
        else 
            grp_fu_369_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_369_p0 <= in_r_TDATA_int_regslice;
    icmp_ln22_fu_378_p2 <= "1" when (ap_phi_mux_i_phi_fu_314_p4 = ap_const_lv4_A) else "0";
    icmp_ln26_1_fu_678_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_7) else "0";
    icmp_ln26_2_fu_692_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_6) else "0";
    icmp_ln26_3_fu_706_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_5) else "0";
    icmp_ln26_4_fu_720_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_4) else "0";
    icmp_ln26_5_fu_734_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_3) else "0";
    icmp_ln26_6_fu_748_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_2) else "0";
    icmp_ln26_7_fu_762_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_1) else "0";
    icmp_ln26_8_fu_776_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_0) else "0";
    icmp_ln26_fu_664_p2 <= "1" when (i_reg_310_pp0_iter2_reg = ap_const_lv4_8) else "0";
    icmp_ln32_fu_1184_p2 <= "1" when (i_1_reg_334 = ap_const_lv2_2) else "0";
    icmp_ln34_fu_1190_p2 <= "1" when (i_1_reg_334 = ap_const_lv2_1) else "0";
    icmp_ln571_fu_463_p2 <= "1" when (trunc_ln555_fu_407_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_475_p2 <= "1" when (signed(F2_fu_469_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln582_fu_493_p2 <= "1" when (F2_fu_469_p2 = ap_const_lv12_10) else "0";
    icmp_ln585_fu_512_p2 <= "1" when (unsigned(sh_amt_fu_503_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_528_p2 <= "1" when (tmp_3_fu_518_p4 = ap_const_lv7_0) else "0";
    icmp_ln935_fu_1158_p2 <= "1" when (out_local_V_0_reg_1579 = ap_const_lv32_0) else "0";
    icmp_ln946_fu_1241_p2 <= "1" when (signed(tmp_fu_1231_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_fu_1284_p2 <= "0" when (and_ln949_fu_1279_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_fu_1311_p2 <= "1" when (signed(lsb_index_fu_1225_p2) > signed(ap_const_lv32_0)) else "0";
    in_local_V_0_fu_658_p3 <= 
        ap_const_lv32_0 when (icmp_ln571_reg_1488_pp0_iter2_reg(0) = '1') else 
        select_ln603_reg_1524;
    in_local_V_9_10_fu_790_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_fu_664_p2(0) = '1') else 
        in_local_V_8_082_reg_202;
    in_local_V_9_11_fu_798_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_1_fu_678_p2(0) = '1') else 
        in_local_V_9_10_fu_790_p3;
    in_local_V_9_12_fu_806_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_2_fu_692_p2(0) = '1') else 
        in_local_V_9_11_fu_798_p3;
    in_local_V_9_13_fu_814_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_3_fu_706_p2(0) = '1') else 
        in_local_V_9_12_fu_806_p3;
    in_local_V_9_14_fu_822_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_13_fu_814_p3;
    in_local_V_9_15_fu_830_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_14_fu_822_p3;
    in_local_V_9_16_fu_838_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_15_fu_830_p3;
    in_local_V_9_17_fu_846_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_16_fu_838_p3;
    in_local_V_9_19_fu_854_p3 <= 
        in_local_V_8_082_reg_202 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_17_fu_846_p3;
    in_local_V_9_20_fu_862_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_1_fu_678_p2(0) = '1') else 
        in_local_V_9_18_reg_214;
    in_local_V_9_21_fu_870_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_2_fu_692_p2(0) = '1') else 
        in_local_V_9_20_fu_862_p3;
    in_local_V_9_22_fu_878_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_3_fu_706_p2(0) = '1') else 
        in_local_V_9_21_fu_870_p3;
    in_local_V_9_23_fu_886_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_22_fu_878_p3;
    in_local_V_9_24_fu_894_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_23_fu_886_p3;
    in_local_V_9_25_fu_902_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_24_fu_894_p3;
    in_local_V_9_26_fu_910_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_25_fu_902_p3;
    in_local_V_9_28_fu_918_p3 <= 
        in_local_V_9_18_reg_214 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_26_fu_910_p3;
    in_local_V_9_29_fu_926_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_2_fu_692_p2(0) = '1') else 
        in_local_V_9_27_reg_226;
    in_local_V_9_2_fu_684_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_1_fu_678_p2(0) = '1') else 
        in_local_V_9_fu_670_p3;
    in_local_V_9_30_fu_934_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_3_fu_706_p2(0) = '1') else 
        in_local_V_9_29_fu_926_p3;
    in_local_V_9_31_fu_942_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_30_fu_934_p3;
    in_local_V_9_32_fu_950_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_31_fu_942_p3;
    in_local_V_9_33_fu_958_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_32_fu_950_p3;
    in_local_V_9_34_fu_966_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_33_fu_958_p3;
    in_local_V_9_36_fu_974_p3 <= 
        in_local_V_9_27_reg_226 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_34_fu_966_p3;
    in_local_V_9_37_fu_982_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_3_fu_706_p2(0) = '1') else 
        in_local_V_9_35_reg_238;
    in_local_V_9_38_fu_990_p3 <= 
        in_local_V_9_35_reg_238 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_37_fu_982_p3;
    in_local_V_9_39_fu_998_p3 <= 
        in_local_V_9_35_reg_238 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_38_fu_990_p3;
    in_local_V_9_3_fu_698_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_2_fu_692_p2(0) = '1') else 
        in_local_V_9_2_fu_684_p3;
    in_local_V_9_40_fu_1006_p3 <= 
        in_local_V_9_35_reg_238 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_39_fu_998_p3;
    in_local_V_9_41_fu_1014_p3 <= 
        in_local_V_9_35_reg_238 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_40_fu_1006_p3;
    in_local_V_9_43_fu_1022_p3 <= 
        in_local_V_9_35_reg_238 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_41_fu_1014_p3;
    in_local_V_9_44_fu_1030_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_42_reg_250;
    in_local_V_9_45_fu_1038_p3 <= 
        in_local_V_9_42_reg_250 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_44_fu_1030_p3;
    in_local_V_9_46_fu_1046_p3 <= 
        in_local_V_9_42_reg_250 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_45_fu_1038_p3;
    in_local_V_9_47_fu_1054_p3 <= 
        in_local_V_9_42_reg_250 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_46_fu_1046_p3;
    in_local_V_9_49_fu_1062_p3 <= 
        in_local_V_9_42_reg_250 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_47_fu_1054_p3;
    in_local_V_9_4_fu_712_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_3_fu_706_p2(0) = '1') else 
        in_local_V_9_3_fu_698_p3;
    in_local_V_9_50_fu_1070_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_48_reg_262;
    in_local_V_9_51_fu_1078_p3 <= 
        in_local_V_9_48_reg_262 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_50_fu_1070_p3;
    in_local_V_9_52_fu_1086_p3 <= 
        in_local_V_9_48_reg_262 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_51_fu_1078_p3;
    in_local_V_9_54_fu_1094_p3 <= 
        in_local_V_9_48_reg_262 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_52_fu_1086_p3;
    in_local_V_9_55_fu_1102_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_53_reg_274;
    in_local_V_9_56_fu_1110_p3 <= 
        in_local_V_9_53_reg_274 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_55_fu_1102_p3;
    in_local_V_9_58_fu_1118_p3 <= 
        in_local_V_9_53_reg_274 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_56_fu_1110_p3;
    in_local_V_9_59_fu_1126_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_57_reg_286;
    in_local_V_9_5_fu_726_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_4_fu_720_p2(0) = '1') else 
        in_local_V_9_4_fu_712_p3;
    in_local_V_9_61_fu_1134_p3 <= 
        in_local_V_9_57_reg_286 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_59_fu_1126_p3;
    in_local_V_9_62_fu_1142_p3 <= 
        in_local_V_0_fu_658_p3 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_60_reg_298;
    in_local_V_9_6_fu_740_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_5_fu_734_p2(0) = '1') else 
        in_local_V_9_5_fu_726_p3;
    in_local_V_9_7_fu_754_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_6_fu_748_p2(0) = '1') else 
        in_local_V_9_6_fu_740_p3;
    in_local_V_9_8_fu_768_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_7_fu_762_p2(0) = '1') else 
        in_local_V_9_7_fu_754_p3;
    in_local_V_9_9_fu_782_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_8_fu_776_p2(0) = '1') else 
        in_local_V_9_8_fu_768_p3;
    in_local_V_9_fu_670_p3 <= 
        in_local_V_9_083_reg_190 when (icmp_ln26_fu_664_p2(0) = '1') else 
        in_local_V_0_fu_658_p3;

    in_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln22_fu_378_p2, in_r_TVALID_int_regslice)
    begin
        if (((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TDATA_blk_n <= in_r_TVALID_int_regslice;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_V_data_V_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln22_fu_378_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln22_fu_378_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    ireg_fu_403_p1 <= grp_fu_369_p1;
    is_last_1_fu_397_p2 <= (in_r_TLAST_int_regslice or ap_phi_mux_is_last_phi_fu_326_p4);
    
    l_fu_1211_p3_proc : process(p_Result_5_fu_1202_p4)
    begin
        l_fu_1211_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_5_fu_1202_p4(i) = '1' then
                l_fu_1211_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_1225_p2 <= std_logic_vector(unsigned(sub_ln944_fu_1219_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_fu_1261_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_1257_p1(31-1 downto 0)))));
    lshr_ln958_fu_1366_p2 <= std_logic_vector(shift_right(unsigned(zext_ln957_reg_1604),to_integer(unsigned('0' & zext_ln958_fu_1362_p1(31-1 downto 0)))));
    m_1_fu_1371_p3 <= 
        lshr_ln958_fu_1366_p2 when (icmp_ln958_reg_1630(0) = '1') else 
        shl_ln959_fu_1352_p2;
    m_2_fu_1381_p2 <= std_logic_vector(unsigned(m_1_fu_1371_p3) + unsigned(zext_ln961_fu_1378_p1));
    m_5_fu_1387_p4 <= m_2_fu_1381_p2(63 downto 1);
    m_fu_1168_p3 <= 
        tmp_V_fu_1163_p2 when (p_Result_4_reg_1586(0) = '1') else 
        out_local_V_0_reg_1579;
    man_V_1_fu_449_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_445_p1));
    man_V_2_fu_455_p3 <= 
        man_V_1_fu_449_p2 when (p_Result_2_fu_411_p3(0) = '1') else 
        zext_ln569_fu_445_p1;
    or_ln581_fu_633_p2 <= (or_ln582_fu_584_p2 or icmp_ln581_reg_1495);
    or_ln582_fu_584_p2 <= (icmp_ln582_reg_1512 or icmp_ln571_reg_1488);
    or_ln949_1_fu_1273_p2 <= (shl_ln949_fu_1267_p2 or lshr_ln947_fu_1261_p2);

    out_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln32_reg_1615, ap_enable_reg_pp1_iter2, icmp_ln32_reg_1615_pp1_iter1_reg, out_r_TREADY_int_regslice)
    begin
        if ((((icmp_ln32_reg_1615_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)) or ((icmp_ln32_reg_1615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY_int_regslice;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDATA_int_regslice <= 
        ap_const_lv32_0 when (icmp_ln935_reg_1592(0) = '1') else 
        LD_1_fu_1447_p1;
    out_r_TVALID <= regslice_both_out_V_data_V_U_vld_out;

    out_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln32_reg_1615, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln32_reg_1615 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            out_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    out_struct_last_V_fu_1196_p2 <= (is_last_reg_322 and icmp_ln34_fu_1190_p2);
    p_Result_2_fu_411_p3 <= ireg_fu_403_p1(63 downto 63);
    p_Result_3_fu_437_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_433_p1);
    
    p_Result_5_fu_1202_p4_proc : process(m_reg_1597)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_5_fu_1202_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := m_reg_1597;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_5_fu_1202_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_5_fu_1202_p4_i) := m_reg_1597(32-1-p_Result_5_fu_1202_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_5_fu_1202_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_6_fu_1304_p3 <= m_reg_1597(to_integer(unsigned(lsb_index_fu_1225_p2)) downto to_integer(unsigned(lsb_index_fu_1225_p2))) when (to_integer(unsigned(lsb_index_fu_1225_p2))>= 0 and to_integer(unsigned(lsb_index_fu_1225_p2))<=31) else "-";
    p_Result_7_fu_1435_p5 <= (zext_ln962_fu_1397_p1(63 downto 32) & tmp_1_fu_1428_p3 & zext_ln962_fu_1397_p1(22 downto 0));
    p_Result_s_fu_1401_p3 <= m_2_fu_1381_p2(25 downto 25);
    select_ln582_fu_577_p3 <= 
        trunc_ln583_reg_1518 when (and_ln582_fu_572_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_1_fu_625_p3 <= 
        select_ln588_fu_554_p3 when (and_ln585_1_fu_619_p2(0) = '1') else 
        select_ln585_fu_605_p3;
    select_ln585_fu_605_p3 <= 
        trunc_ln586_fu_543_p1 when (and_ln585_fu_599_p2(0) = '1') else 
        select_ln582_fu_577_p3;
    select_ln588_fu_554_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_4_fu_547_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_fu_650_p3 <= 
        shl_ln604_fu_562_p2 when (and_ln603_fu_644_p2(0) = '1') else 
        select_ln585_1_fu_625_p3;
    select_ln943_fu_1409_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_1401_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_fu_1323_p3 <= 
        icmp_ln949_fu_1284_p2 when (icmp_ln946_fu_1241_p2(0) = '1') else 
        p_Result_6_fu_1304_p3;
    select_ln958_fu_1331_p3 <= 
        select_ln946_fu_1323_p3 when (icmp_ln958_fu_1311_p2(0) = '1') else 
        and_ln949_1_fu_1317_p2;
        sext_ln581_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_503_p3),32));

    sh_amt_fu_503_p3 <= 
        add_ln581_reg_1502 when (icmp_ln581_reg_1495(0) = '1') else 
        sub_ln581_reg_1507;
    shl_ln604_fu_562_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_1518),to_integer(unsigned('0' & sext_ln581_fu_508_p1(31-1 downto 0)))));
    shl_ln949_fu_1267_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_1225_p2(31-1 downto 0)))));
    shl_ln959_fu_1352_p2 <= std_logic_vector(shift_left(unsigned(zext_ln957_reg_1604),to_integer(unsigned('0' & zext_ln959_fu_1348_p1(31-1 downto 0)))));
    sub_ln581_fu_487_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_469_p2));
    sub_ln944_fu_1219_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_1211_p3));
    sub_ln947_fu_1251_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_1247_p1));
    sub_ln959_fu_1343_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_1624));
    sub_ln964_fu_1417_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) - unsigned(trunc_ln943_reg_1640));
    tmp_1_fu_1428_p3 <= (p_Result_4_reg_1586 & add_ln964_fu_1422_p2);
    tmp_3_fu_518_p4 <= sh_amt_fu_503_p3(11 downto 5);
    tmp_4_fu_547_p3 <= ref_tmp_data_reg_1468_pp0_iter1_reg(31 downto 31);
    tmp_5_fu_1290_p3 <= lsb_index_fu_1225_p2(31 downto 31);
    tmp_V_fu_1163_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(out_local_V_0_reg_1579));
    tmp_fu_1231_p4 <= lsb_index_fu_1225_p2(31 downto 1);
    trunc_ln555_fu_407_p1 <= ireg_fu_403_p1(63 - 1 downto 0);
    trunc_ln565_fu_433_p1 <= ireg_fu_403_p1(52 - 1 downto 0);
    trunc_ln583_fu_499_p1 <= man_V_2_fu_455_p3(32 - 1 downto 0);
    trunc_ln586_fu_543_p1 <= ashr_ln586_fu_538_p2(32 - 1 downto 0);
    trunc_ln943_fu_1339_p1 <= l_fu_1211_p3(8 - 1 downto 0);
    trunc_ln947_fu_1247_p1 <= sub_ln944_fu_1219_p2(6 - 1 downto 0);
    xor_ln571_fu_567_p2 <= (icmp_ln571_reg_1488 xor ap_const_lv1_1);
    xor_ln581_fu_638_p2 <= (or_ln581_fu_633_p2 xor ap_const_lv1_1);
    xor_ln582_fu_588_p2 <= (or_ln582_fu_584_p2 xor ap_const_lv1_1);
    xor_ln585_fu_613_p2 <= (icmp_ln585_fu_512_p2 xor ap_const_lv1_1);
    xor_ln949_fu_1298_p2 <= (tmp_5_fu_1290_p3 xor ap_const_lv1_1);
    zext_ln455_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_419_p4),12));
    zext_ln569_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_3_fu_437_p3),54));
    zext_ln586_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_508_p1),54));
    zext_ln947_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_1251_p2),32));
    zext_ln957_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_fu_1168_p3),64));
    zext_ln958_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_fu_1357_p2),64));
    zext_ln959_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_fu_1343_p2),64));
    zext_ln961_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_reg_1635),64));
    zext_ln962_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_5_fu_1387_p4),64));
end behav;
