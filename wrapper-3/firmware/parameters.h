#ifndef BDT_PARAMS_H__
#define BDT_PARAMS_H__

#include  "BDT.h"
#include "ap_fixed.h"

static const int n_trees = 20;
static const int max_depth = 3;
static const int n_features = 10;
static const int n_classes = 2;
static const bool unroll = true;
typedef ap_fixed<32,16> input_t;
typedef input_t input_arr_t[n_features];
typedef ap_fixed<32,16> score_t;
typedef score_t score_arr_t[n_classes];
typedef input_t threshold_t;

static const BDT::BDT<n_trees, max_depth, n_classes, input_arr_t, score_t, threshold_t, unroll> bdt = 
{ // The struct
	1, // The normalisation
	{0},
	// The trees
		// trees[0]
			{{ // [0]
				{1,1,-2,-2,5,-2,-2},
				{1.11828613,-1.20591211,0,0,1.24175549,0,0},
				{0,0,0.750877202,0.690909088,0,-0.450476885,0.621621609},
				{1,3,-1,-1,5,-1,-1},
				{2,4,-1,-1,6,-1,-1},
				{-1,0,0,1,1,4,4}
			}
		},
		// trees[1]
			{{ // [0]
				{5,-2,7,2,-2,-2,-2},
				{-1.1149497,0,1.23051214,1.45902276,0,0,0},
				{0,0.824816108,0,0,0.812323809,-0.306123465,0.838298738},
				{1,-1,3,5,-1,-1,-1},
				{2,-1,4,6,-1,-1,-1},
				{-1,0,0,2,2,3,3}
			}
		},
		// trees[2]
			{{ // [0]
				{2,-2,4,-2,4,-2,-2},
				{-0.841515243,0,-1.53745234,0,0.899351478,0,0},
				{0,0.692003489,0,0.803046763,0,-0.377210915,0.438028127},
				{1,-1,3,-1,5,-1,-1},
				{2,-1,4,-1,6,-1,-1},
				{-1,0,0,2,2,4,4}
			}
		},
		// trees[3]
			{{ // [0]
				{7,-2,8,8,-2,-2,-2},
				{-1.36467862,0,1.28139663,-1.46283579,0,0,0},
				{0,0.928207338,0,0,0.748000681,0.721133769,-0.285023063},
				{1,-1,3,5,-1,-1,-1},
				{2,-1,4,6,-1,-1,-1},
				{-1,0,0,2,2,3,3}
			}
		},
		// trees[4]
			{{ // [0]
				{3,-2,3,9,-2,-2,-2},
				{-1.07950473,0,1.32860672,1.17976141,0,0,0},
				{0,0.793523788,0,0,0.798428476,-0.333047152,0.550566852},
				{1,-1,3,5,-1,-1,-1},
				{2,-1,4,6,-1,-1,-1},
				{-1,0,0,2,2,3,3}
			}
		},
		// trees[5]
			{{ // [0]
				{0,-2,0,6,-2,-2,-2},
				{-1.10732329,0,1.49353552,-0.81623745,0,0,0},
				{0,0.7309497,0,0,0.941303968,0.30725655,-0.340315819},
				{1,-1,3,5,-1,-1,-1},
				{2,-1,4,6,-1,-1,-1},
				{-1,0,0,2,2,3,3}
			}
		},
		// trees[6]
			{{ // [0]
				{6,9,-2,-2,5,-2,-2},
				{1.27954078,-1.19954205,0,0,0.932537615,0,0},
				{0,0,0.950245976,0.585346818,0,-0.259507984,0.200942039},
				{1,3,-1,-1,5,-1,-1},
				{2,4,-1,-1,6,-1,-1},
				{-1,0,0,1,1,4,4}
			}
		},
		// trees[7]
			{{ // [0]
				{2,2,-2,-2,4,-2,-2},
				{0.948798835,-1.23135996,0,0,-0.927749991,0,0},
				{0,0,0.550227404,0.410004616,0,0.15438506,-0.254620582},
				{1,3,-1,-1,5,-1,-1},
				{2,4,-1,-1,6,-1,-1},
				{-1,0,0,1,1,4,4}
			}
		},
		// trees[8]
			{{ // [0]
				{-2},
				{0},
				{0.0299327914},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[9]
			{{ // [0]
				{-2},
				{0},
				{6.57354976e-05},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[10]
			{{ // [0]
				{-2},
				{0},
				{1.86473017e-07},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[11]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[12]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[13]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[14]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[15]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[16]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[17]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[18]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		},
		// trees[19]
			{{ // [0]
				{-2},
				{0},
				{-0.0},
				{-1},
				{-1},
				{-1}
			}
		}

};
#endif