// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_22_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TVALID,
        in_r_TDATA,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        in_local_V_9_out,
        in_local_V_9_out_ap_vld,
        in_local_V_8_out,
        in_local_V_8_out_ap_vld,
        in_local_V_7_out,
        in_local_V_7_out_ap_vld,
        in_local_V_6_out,
        in_local_V_6_out_ap_vld,
        in_local_V_5_out,
        in_local_V_5_out_ap_vld,
        in_local_V_4_out,
        in_local_V_4_out_ap_vld,
        in_local_V_3_out,
        in_local_V_3_out_ap_vld,
        in_local_V_2_out,
        in_local_V_2_out_ap_vld,
        in_local_V_1_out,
        in_local_V_1_out_ap_vld,
        in_local_V_out,
        in_local_V_out_ap_vld,
        is_last_1_out,
        is_last_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_r_TVALID;
input  [31:0] in_r_TDATA;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [31:0] in_local_V_9_out;
output   in_local_V_9_out_ap_vld;
output  [31:0] in_local_V_8_out;
output   in_local_V_8_out_ap_vld;
output  [31:0] in_local_V_7_out;
output   in_local_V_7_out_ap_vld;
output  [31:0] in_local_V_6_out;
output   in_local_V_6_out_ap_vld;
output  [31:0] in_local_V_5_out;
output   in_local_V_5_out_ap_vld;
output  [31:0] in_local_V_4_out;
output   in_local_V_4_out_ap_vld;
output  [31:0] in_local_V_3_out;
output   in_local_V_3_out_ap_vld;
output  [31:0] in_local_V_2_out;
output   in_local_V_2_out_ap_vld;
output  [31:0] in_local_V_1_out;
output   in_local_V_1_out_ap_vld;
output  [31:0] in_local_V_out;
output   in_local_V_out_ap_vld;
output  [0:0] is_last_1_out;
output   is_last_1_out_ap_vld;

reg ap_idle;
reg in_r_TREADY;
reg in_local_V_9_out_ap_vld;
reg in_local_V_8_out_ap_vld;
reg in_local_V_7_out_ap_vld;
reg in_local_V_6_out_ap_vld;
reg in_local_V_5_out_ap_vld;
reg in_local_V_4_out_ap_vld;
reg in_local_V_3_out_ap_vld;
reg in_local_V_2_out_ap_vld;
reg in_local_V_1_out_ap_vld;
reg in_local_V_out_ap_vld;
reg is_last_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln22_fu_276_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [0:0] is_last_1_reg_253;
reg   [0:0] is_last_1_reg_253_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_1213;
reg   [3:0] i_1_reg_1213_pp0_iter1_reg;
reg   [3:0] i_1_reg_1213_pp0_iter2_reg;
reg   [0:0] icmp_ln22_reg_1226;
reg   [0:0] icmp_ln22_reg_1226_pp0_iter1_reg;
reg   [0:0] icmp_ln22_reg_1226_pp0_iter2_reg;
reg   [31:0] p_0_reg_1230;
reg   [31:0] p_0_reg_1230_pp0_iter1_reg;
wire   [0:0] is_last_fu_301_p2;
reg   [0:0] is_last_reg_1240;
reg   [0:0] p_Result_s_reg_1245;
wire   [51:0] trunc_ln574_fu_342_p1;
reg   [51:0] trunc_ln574_reg_1250;
wire   [0:0] icmp_ln580_fu_346_p2;
reg   [0:0] icmp_ln580_reg_1255;
reg   [0:0] icmp_ln580_reg_1255_pp0_iter2_reg;
wire   [0:0] icmp_ln590_fu_358_p2;
reg   [0:0] icmp_ln590_reg_1262;
wire   [11:0] add_ln590_fu_364_p2;
reg   [11:0] add_ln590_reg_1268;
wire   [11:0] sub_ln590_fu_370_p2;
reg   [11:0] sub_ln590_reg_1273;
wire   [0:0] icmp_ln591_fu_376_p2;
reg   [0:0] icmp_ln591_reg_1278;
wire   [31:0] select_ln590_fu_525_p3;
reg   [31:0] select_ln590_reg_1284;
reg   [0:0] ap_phi_mux_is_last_1_phi_fu_257_p4;
wire    ap_loop_init;
reg   [3:0] i_fu_120;
wire   [3:0] add_ln22_fu_282_p2;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [31:0] in_local_V_fu_124;
wire   [31:0] select_ln26_53_fu_1038_p3;
reg   [31:0] in_local_V_1_fu_128;
wire   [31:0] select_ln26_44_fu_966_p3;
reg   [31:0] in_local_V_2_fu_132;
wire   [31:0] select_ln26_36_fu_902_p3;
reg   [31:0] in_local_V_3_fu_136;
wire   [31:0] select_ln26_29_fu_846_p3;
reg   [31:0] in_local_V_4_fu_140;
wire   [31:0] select_ln26_23_fu_798_p3;
reg   [31:0] in_local_V_5_fu_144;
wire   [31:0] select_ln26_18_fu_758_p3;
reg   [31:0] in_local_V_6_fu_148;
wire   [31:0] select_ln26_14_fu_726_p3;
reg   [31:0] in_local_V_7_fu_152;
wire   [31:0] select_ln26_11_fu_702_p3;
reg   [31:0] in_local_V_8_fu_156;
wire   [31:0] select_ln26_9_fu_686_p3;
reg   [31:0] in_local_V_9_fu_160;
wire   [31:0] select_ln26_8_fu_678_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_265_p0;
wire   [63:0] grp_fu_265_p1;
wire   [63:0] ireg_fu_312_p1;
wire   [10:0] exp_tmp_fu_328_p4;
wire   [62:0] trunc_ln564_fu_316_p1;
wire   [11:0] zext_ln501_fu_338_p1;
wire   [11:0] F2_fu_352_p2;
wire   [52:0] p_Result_1_fu_382_p3;
wire   [53:0] zext_ln578_fu_389_p1;
wire   [53:0] man_V_1_fu_393_p2;
wire  signed [11:0] sh_amt_fu_406_p3;
wire   [53:0] man_V_2_fu_399_p3;
wire  signed [31:0] sext_ln590_fu_411_p1;
wire   [53:0] zext_ln595_fu_425_p1;
wire   [53:0] ashr_ln595_fu_429_p2;
wire   [0:0] tmp_fu_439_p3;
wire   [0:0] icmp_ln594_fu_419_p2;
wire   [31:0] trunc_ln595_fu_435_p1;
wire   [31:0] select_ln597_fu_446_p3;
wire   [6:0] tmp_1_fu_462_p4;
wire   [31:0] trunc_ln592_fu_415_p1;
wire   [0:0] icmp_ln612_fu_472_p2;
wire   [31:0] shl_ln613_fu_478_p2;
wire   [0:0] xor_ln580_fu_492_p2;
wire   [0:0] and_ln591_fu_497_p2;
wire   [31:0] select_ln612_fu_484_p3;
wire   [0:0] or_ln591_fu_510_p2;
wire   [0:0] xor_ln591_fu_514_p2;
wire   [0:0] and_ln590_fu_520_p2;
wire   [31:0] select_ln594_fu_454_p3;
wire   [31:0] select_ln591_fu_502_p3;
wire   [0:0] icmp_ln26_fu_569_p2;
wire   [31:0] select_ln580_fu_563_p3;
wire   [0:0] icmp_ln26_1_fu_582_p2;
wire   [31:0] select_ln26_fu_574_p3;
wire   [0:0] icmp_ln26_2_fu_595_p2;
wire   [31:0] select_ln26_1_fu_587_p3;
wire   [0:0] icmp_ln26_3_fu_608_p2;
wire   [31:0] select_ln26_2_fu_600_p3;
wire   [0:0] icmp_ln26_4_fu_621_p2;
wire   [31:0] select_ln26_3_fu_613_p3;
wire   [0:0] icmp_ln26_5_fu_634_p2;
wire   [31:0] select_ln26_4_fu_626_p3;
wire   [0:0] icmp_ln26_6_fu_647_p2;
wire   [31:0] select_ln26_5_fu_639_p3;
wire   [0:0] icmp_ln26_7_fu_660_p2;
wire   [31:0] select_ln26_6_fu_652_p3;
wire   [0:0] icmp_ln26_8_fu_673_p2;
wire   [31:0] select_ln26_7_fu_665_p3;
wire   [31:0] select_ln26_10_fu_694_p3;
wire   [31:0] select_ln26_12_fu_710_p3;
wire   [31:0] select_ln26_13_fu_718_p3;
wire   [31:0] select_ln26_15_fu_734_p3;
wire   [31:0] select_ln26_16_fu_742_p3;
wire   [31:0] select_ln26_17_fu_750_p3;
wire   [31:0] select_ln26_19_fu_766_p3;
wire   [31:0] select_ln26_20_fu_774_p3;
wire   [31:0] select_ln26_21_fu_782_p3;
wire   [31:0] select_ln26_22_fu_790_p3;
wire   [31:0] select_ln26_24_fu_806_p3;
wire   [31:0] select_ln26_25_fu_814_p3;
wire   [31:0] select_ln26_26_fu_822_p3;
wire   [31:0] select_ln26_27_fu_830_p3;
wire   [31:0] select_ln26_28_fu_838_p3;
wire   [31:0] select_ln26_30_fu_854_p3;
wire   [31:0] select_ln26_31_fu_862_p3;
wire   [31:0] select_ln26_32_fu_870_p3;
wire   [31:0] select_ln26_33_fu_878_p3;
wire   [31:0] select_ln26_34_fu_886_p3;
wire   [31:0] select_ln26_35_fu_894_p3;
wire   [31:0] select_ln26_37_fu_910_p3;
wire   [31:0] select_ln26_38_fu_918_p3;
wire   [31:0] select_ln26_39_fu_926_p3;
wire   [31:0] select_ln26_40_fu_934_p3;
wire   [31:0] select_ln26_41_fu_942_p3;
wire   [31:0] select_ln26_42_fu_950_p3;
wire   [31:0] select_ln26_43_fu_958_p3;
wire   [31:0] select_ln26_45_fu_974_p3;
wire   [31:0] select_ln26_46_fu_982_p3;
wire   [31:0] select_ln26_47_fu_990_p3;
wire   [31:0] select_ln26_48_fu_998_p3;
wire   [31:0] select_ln26_49_fu_1006_p3;
wire   [31:0] select_ln26_50_fu_1014_p3;
wire   [31:0] select_ln26_51_fu_1022_p3;
wire   [31:0] select_ln26_52_fu_1030_p3;
reg    grp_fu_265_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_823;
reg    ap_condition_828;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_265_p0),
    .ce(grp_fu_265_ce),
    .dout(grp_fu_265_p1)
);

myproject_axi_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln22_fu_276_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_fu_120 <= add_ln22_fu_282_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_120 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            is_last_1_reg_253 <= 1'd0;
        end else if ((1'b1 == ap_condition_828)) begin
            is_last_1_reg_253 <= is_last_reg_1240;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln22_reg_1226 == 1'd0))) begin
        add_ln590_reg_1268 <= add_ln590_fu_364_p2;
        icmp_ln580_reg_1255 <= icmp_ln580_fu_346_p2;
        icmp_ln590_reg_1262 <= icmp_ln590_fu_358_p2;
        icmp_ln591_reg_1278 <= icmp_ln591_fu_376_p2;
        p_Result_s_reg_1245 <= ireg_fu_312_p1[32'd63];
        sub_ln590_reg_1273 <= sub_ln590_fu_370_p2;
        trunc_ln574_reg_1250 <= trunc_ln574_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_1213 <= ap_sig_allocacmp_i_1;
        i_1_reg_1213_pp0_iter1_reg <= i_1_reg_1213;
        icmp_ln22_reg_1226 <= icmp_ln22_fu_276_p2;
        icmp_ln22_reg_1226_pp0_iter1_reg <= icmp_ln22_reg_1226;
        is_last_1_reg_253_pp0_iter1_reg <= is_last_1_reg_253;
        p_0_reg_1230_pp0_iter1_reg <= p_0_reg_1230;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_1_reg_1213_pp0_iter2_reg <= i_1_reg_1213_pp0_iter1_reg;
        icmp_ln22_reg_1226_pp0_iter2_reg <= icmp_ln22_reg_1226_pp0_iter1_reg;
        icmp_ln580_reg_1255_pp0_iter2_reg <= icmp_ln580_reg_1255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln22_reg_1226_pp0_iter2_reg == 1'd0))) begin
        in_local_V_1_fu_128 <= select_ln26_44_fu_966_p3;
        in_local_V_2_fu_132 <= select_ln26_36_fu_902_p3;
        in_local_V_3_fu_136 <= select_ln26_29_fu_846_p3;
        in_local_V_4_fu_140 <= select_ln26_23_fu_798_p3;
        in_local_V_5_fu_144 <= select_ln26_18_fu_758_p3;
        in_local_V_6_fu_148 <= select_ln26_14_fu_726_p3;
        in_local_V_7_fu_152 <= select_ln26_11_fu_702_p3;
        in_local_V_8_fu_156 <= select_ln26_9_fu_686_p3;
        in_local_V_9_fu_160 <= select_ln26_8_fu_678_p3;
        in_local_V_fu_124 <= select_ln26_53_fu_1038_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_276_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        is_last_reg_1240 <= is_last_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_reg_1230 <= in_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln580_reg_1255 == 1'd0) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd0))) begin
        select_ln590_reg_1284 <= select_ln590_fu_525_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln22_fu_276_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_is_last_1_phi_fu_257_p4 = 1'd0;
        end else if ((1'b1 == ap_condition_823)) begin
            ap_phi_mux_is_last_1_phi_fu_257_p4 = is_last_reg_1240;
        end else begin
            ap_phi_mux_is_last_1_phi_fu_257_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_is_last_1_phi_fu_257_p4 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_265_ce = 1'b1;
    end else begin
        grp_fu_265_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_1_out_ap_vld = 1'b1;
    end else begin
        in_local_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_2_out_ap_vld = 1'b1;
    end else begin
        in_local_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_3_out_ap_vld = 1'b1;
    end else begin
        in_local_V_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_4_out_ap_vld = 1'b1;
    end else begin
        in_local_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_5_out_ap_vld = 1'b1;
    end else begin
        in_local_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_6_out_ap_vld = 1'b1;
    end else begin
        in_local_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_7_out_ap_vld = 1'b1;
    end else begin
        in_local_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_8_out_ap_vld = 1'b1;
    end else begin
        in_local_V_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_9_out_ap_vld = 1'b1;
    end else begin
        in_local_V_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        in_local_V_out_ap_vld = 1'b1;
    end else begin
        in_local_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln22_fu_276_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_fu_276_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln22_reg_1226_pp0_iter1_reg == 1'd1))) begin
        is_last_1_out_ap_vld = 1'b1;
    end else begin
        is_last_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_352_p2 = (12'd1075 - zext_ln501_fu_338_p1);

assign add_ln22_fu_282_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln590_fu_364_p2 = ($signed(F2_fu_352_p2) + $signed(12'd4080));

assign and_ln590_fu_520_p2 = (xor_ln591_fu_514_p2 & icmp_ln590_reg_1262);

assign and_ln591_fu_497_p2 = (xor_ln580_fu_492_p2 & icmp_ln591_reg_1278);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln22_fu_276_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln22_fu_276_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln22_fu_276_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((icmp_ln22_fu_276_p2 == 1'd0) & (in_r_TVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_823 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln22_reg_1226 == 1'd0));
end

always @ (*) begin
    ap_condition_828 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln22_reg_1226 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln595_fu_429_p2 = $signed(man_V_2_fu_399_p3) >>> zext_ln595_fu_425_p1;

assign exp_tmp_fu_328_p4 = {{ireg_fu_312_p1[62:52]}};

assign grp_fu_265_p0 = in_r_TDATA;

assign icmp_ln22_fu_276_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln26_1_fu_582_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln26_2_fu_595_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln26_3_fu_608_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln26_4_fu_621_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln26_5_fu_634_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln26_6_fu_647_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln26_7_fu_660_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln26_8_fu_673_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_569_p2 = ((i_1_reg_1213_pp0_iter2_reg == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_346_p2 = ((trunc_ln564_fu_316_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_358_p2 = (($signed(F2_fu_352_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_376_p2 = ((F2_fu_352_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_419_p2 = ((sh_amt_fu_406_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_472_p2 = ((tmp_1_fu_462_p4 == 7'd0) ? 1'b1 : 1'b0);

assign in_local_V_1_out = in_local_V_1_fu_128;

assign in_local_V_2_out = in_local_V_2_fu_132;

assign in_local_V_3_out = in_local_V_3_fu_136;

assign in_local_V_4_out = in_local_V_4_fu_140;

assign in_local_V_5_out = in_local_V_5_fu_144;

assign in_local_V_6_out = in_local_V_6_fu_148;

assign in_local_V_7_out = in_local_V_7_fu_152;

assign in_local_V_8_out = in_local_V_8_fu_156;

assign in_local_V_9_out = in_local_V_9_fu_160;

assign in_local_V_out = in_local_V_fu_124;

assign ireg_fu_312_p1 = grp_fu_265_p1;

assign is_last_1_out = is_last_1_reg_253_pp0_iter1_reg;

assign is_last_fu_301_p2 = (in_r_TLAST | ap_phi_mux_is_last_1_phi_fu_257_p4);

assign man_V_1_fu_393_p2 = (54'd0 - zext_ln578_fu_389_p1);

assign man_V_2_fu_399_p3 = ((p_Result_s_reg_1245[0:0] == 1'b1) ? man_V_1_fu_393_p2 : zext_ln578_fu_389_p1);

assign or_ln591_fu_510_p2 = (icmp_ln591_reg_1278 | icmp_ln580_reg_1255);

assign p_Result_1_fu_382_p3 = {{1'd1}, {trunc_ln574_reg_1250}};

assign select_ln26_10_fu_694_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_7_fu_152);

assign select_ln26_11_fu_702_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_7_fu_152 : select_ln26_10_fu_694_p3);

assign select_ln26_12_fu_710_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_6_fu_148);

assign select_ln26_13_fu_718_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_6_fu_148 : select_ln26_12_fu_710_p3);

assign select_ln26_14_fu_726_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_6_fu_148 : select_ln26_13_fu_718_p3);

assign select_ln26_15_fu_734_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_5_fu_144);

assign select_ln26_16_fu_742_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_5_fu_144 : select_ln26_15_fu_734_p3);

assign select_ln26_17_fu_750_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_5_fu_144 : select_ln26_16_fu_742_p3);

assign select_ln26_18_fu_758_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_5_fu_144 : select_ln26_17_fu_750_p3);

assign select_ln26_19_fu_766_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_4_fu_140);

assign select_ln26_1_fu_587_p3 = ((icmp_ln26_1_fu_582_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_fu_574_p3);

assign select_ln26_20_fu_774_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_4_fu_140 : select_ln26_19_fu_766_p3);

assign select_ln26_21_fu_782_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_4_fu_140 : select_ln26_20_fu_774_p3);

assign select_ln26_22_fu_790_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_4_fu_140 : select_ln26_21_fu_782_p3);

assign select_ln26_23_fu_798_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_4_fu_140 : select_ln26_22_fu_790_p3);

assign select_ln26_24_fu_806_p3 = ((icmp_ln26_3_fu_608_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_3_fu_136);

assign select_ln26_25_fu_814_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? in_local_V_3_fu_136 : select_ln26_24_fu_806_p3);

assign select_ln26_26_fu_822_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_3_fu_136 : select_ln26_25_fu_814_p3);

assign select_ln26_27_fu_830_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_3_fu_136 : select_ln26_26_fu_822_p3);

assign select_ln26_28_fu_838_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_3_fu_136 : select_ln26_27_fu_830_p3);

assign select_ln26_29_fu_846_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_3_fu_136 : select_ln26_28_fu_838_p3);

assign select_ln26_2_fu_600_p3 = ((icmp_ln26_2_fu_595_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_1_fu_587_p3);

assign select_ln26_30_fu_854_p3 = ((icmp_ln26_2_fu_595_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_2_fu_132);

assign select_ln26_31_fu_862_p3 = ((icmp_ln26_3_fu_608_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_30_fu_854_p3);

assign select_ln26_32_fu_870_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_31_fu_862_p3);

assign select_ln26_33_fu_878_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_32_fu_870_p3);

assign select_ln26_34_fu_886_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_33_fu_878_p3);

assign select_ln26_35_fu_894_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_34_fu_886_p3);

assign select_ln26_36_fu_902_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_2_fu_132 : select_ln26_35_fu_894_p3);

assign select_ln26_37_fu_910_p3 = ((icmp_ln26_1_fu_582_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_1_fu_128);

assign select_ln26_38_fu_918_p3 = ((icmp_ln26_2_fu_595_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_37_fu_910_p3);

assign select_ln26_39_fu_926_p3 = ((icmp_ln26_3_fu_608_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_38_fu_918_p3);

assign select_ln26_3_fu_613_p3 = ((icmp_ln26_3_fu_608_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_2_fu_600_p3);

assign select_ln26_40_fu_934_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_39_fu_926_p3);

assign select_ln26_41_fu_942_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_40_fu_934_p3);

assign select_ln26_42_fu_950_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_41_fu_942_p3);

assign select_ln26_43_fu_958_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_42_fu_950_p3);

assign select_ln26_44_fu_966_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_1_fu_128 : select_ln26_43_fu_958_p3);

assign select_ln26_45_fu_974_p3 = ((icmp_ln26_fu_569_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_fu_124);

assign select_ln26_46_fu_982_p3 = ((icmp_ln26_1_fu_582_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_45_fu_974_p3);

assign select_ln26_47_fu_990_p3 = ((icmp_ln26_2_fu_595_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_46_fu_982_p3);

assign select_ln26_48_fu_998_p3 = ((icmp_ln26_3_fu_608_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_47_fu_990_p3);

assign select_ln26_49_fu_1006_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_48_fu_998_p3);

assign select_ln26_4_fu_626_p3 = ((icmp_ln26_4_fu_621_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_3_fu_613_p3);

assign select_ln26_50_fu_1014_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_49_fu_1006_p3);

assign select_ln26_51_fu_1022_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_50_fu_1014_p3);

assign select_ln26_52_fu_1030_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_51_fu_1022_p3);

assign select_ln26_53_fu_1038_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_fu_124 : select_ln26_52_fu_1030_p3);

assign select_ln26_5_fu_639_p3 = ((icmp_ln26_5_fu_634_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_4_fu_626_p3);

assign select_ln26_6_fu_652_p3 = ((icmp_ln26_6_fu_647_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_5_fu_639_p3);

assign select_ln26_7_fu_665_p3 = ((icmp_ln26_7_fu_660_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_6_fu_652_p3);

assign select_ln26_8_fu_678_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln26_7_fu_665_p3);

assign select_ln26_9_fu_686_p3 = ((icmp_ln26_8_fu_673_p2[0:0] == 1'b1) ? select_ln580_fu_563_p3 : in_local_V_8_fu_156);

assign select_ln26_fu_574_p3 = ((icmp_ln26_fu_569_p2[0:0] == 1'b1) ? in_local_V_9_fu_160 : select_ln580_fu_563_p3);

assign select_ln580_fu_563_p3 = ((icmp_ln580_reg_1255_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : select_ln590_reg_1284);

assign select_ln590_fu_525_p3 = ((and_ln590_fu_520_p2[0:0] == 1'b1) ? select_ln594_fu_454_p3 : select_ln591_fu_502_p3);

assign select_ln591_fu_502_p3 = ((and_ln591_fu_497_p2[0:0] == 1'b1) ? trunc_ln592_fu_415_p1 : select_ln612_fu_484_p3);

assign select_ln594_fu_454_p3 = ((icmp_ln594_fu_419_p2[0:0] == 1'b1) ? trunc_ln595_fu_435_p1 : select_ln597_fu_446_p3);

assign select_ln597_fu_446_p3 = ((tmp_fu_439_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_fu_484_p3 = ((icmp_ln612_fu_472_p2[0:0] == 1'b1) ? shl_ln613_fu_478_p2 : 32'd0);

assign sext_ln590_fu_411_p1 = sh_amt_fu_406_p3;

assign sh_amt_fu_406_p3 = ((icmp_ln590_reg_1262[0:0] == 1'b1) ? add_ln590_reg_1268 : sub_ln590_reg_1273);

assign shl_ln613_fu_478_p2 = trunc_ln592_fu_415_p1 << sext_ln590_fu_411_p1;

assign sub_ln590_fu_370_p2 = (12'd16 - F2_fu_352_p2);

assign tmp_1_fu_462_p4 = {{sh_amt_fu_406_p3[11:5]}};

assign tmp_fu_439_p3 = p_0_reg_1230_pp0_iter1_reg[32'd31];

assign trunc_ln564_fu_316_p1 = ireg_fu_312_p1[62:0];

assign trunc_ln574_fu_342_p1 = ireg_fu_312_p1[51:0];

assign trunc_ln592_fu_415_p1 = man_V_2_fu_399_p3[31:0];

assign trunc_ln595_fu_435_p1 = ashr_ln595_fu_429_p2[31:0];

assign xor_ln580_fu_492_p2 = (icmp_ln580_reg_1255 ^ 1'd1);

assign xor_ln591_fu_514_p2 = (or_ln591_fu_510_p2 ^ 1'd1);

assign zext_ln501_fu_338_p1 = exp_tmp_fu_328_p4;

assign zext_ln578_fu_389_p1 = p_Result_1_fu_382_p3;

assign zext_ln595_fu_425_p1 = $unsigned(sext_ln590_fu_411_p1);

endmodule //myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_22_1
