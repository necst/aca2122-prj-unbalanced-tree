// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.973116,HLS_SYN_LAT=25,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1936,HLS_SYN_LUT=9307,HLS_VERSION=2020_1}" *)

module myproject_axi (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TLAST
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TLAST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
reg   [31:0] p_0_reg_2908;
reg   [31:0] p_s_reg_2914;
reg   [31:0] p_1_reg_2920;
reg   [31:0] p_2_reg_2926;
reg   [31:0] p_3_reg_2932;
reg   [31:0] p_4_reg_2938;
reg   [31:0] p_5_reg_2944;
reg   [31:0] p_6_reg_2950;
reg   [31:0] p_7_reg_2956;
reg   [31:0] p_8_reg_3007;
wire   [53:0] man_V_2_fu_292_p3;
reg   [53:0] man_V_2_reg_3017;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln580_fu_300_p2;
reg   [0:0] icmp_ln580_reg_3022;
wire   [0:0] icmp_ln590_fu_312_p2;
reg   [0:0] icmp_ln590_reg_3029;
wire   [11:0] add_ln590_fu_318_p2;
reg   [11:0] add_ln590_reg_3036;
wire   [11:0] sub_ln590_fu_324_p2;
reg   [11:0] sub_ln590_reg_3041;
wire   [0:0] icmp_ln591_fu_330_p2;
reg   [0:0] icmp_ln591_reg_3046;
wire   [31:0] trunc_ln592_fu_336_p1;
reg   [31:0] trunc_ln592_reg_3052;
wire   [53:0] man_V_5_fu_392_p3;
reg   [53:0] man_V_5_reg_3058;
wire   [0:0] icmp_ln580_1_fu_400_p2;
reg   [0:0] icmp_ln580_1_reg_3063;
wire   [0:0] icmp_ln590_1_fu_412_p2;
reg   [0:0] icmp_ln590_1_reg_3070;
wire   [11:0] add_ln590_1_fu_418_p2;
reg   [11:0] add_ln590_1_reg_3077;
wire   [11:0] sub_ln590_1_fu_424_p2;
reg   [11:0] sub_ln590_1_reg_3082;
wire   [0:0] icmp_ln591_1_fu_430_p2;
reg   [0:0] icmp_ln591_1_reg_3087;
wire   [31:0] trunc_ln592_1_fu_436_p1;
reg   [31:0] trunc_ln592_1_reg_3093;
wire   [53:0] man_V_8_fu_492_p3;
reg   [53:0] man_V_8_reg_3099;
wire   [0:0] icmp_ln580_2_fu_500_p2;
reg   [0:0] icmp_ln580_2_reg_3104;
wire   [0:0] icmp_ln590_2_fu_512_p2;
reg   [0:0] icmp_ln590_2_reg_3111;
wire   [11:0] add_ln590_2_fu_518_p2;
reg   [11:0] add_ln590_2_reg_3118;
wire   [11:0] sub_ln590_2_fu_524_p2;
reg   [11:0] sub_ln590_2_reg_3123;
wire   [0:0] icmp_ln591_2_fu_530_p2;
reg   [0:0] icmp_ln591_2_reg_3128;
wire   [31:0] trunc_ln592_2_fu_536_p1;
reg   [31:0] trunc_ln592_2_reg_3134;
wire   [53:0] man_V_11_fu_592_p3;
reg   [53:0] man_V_11_reg_3140;
wire   [0:0] icmp_ln580_3_fu_600_p2;
reg   [0:0] icmp_ln580_3_reg_3145;
wire   [0:0] icmp_ln590_3_fu_612_p2;
reg   [0:0] icmp_ln590_3_reg_3152;
wire   [11:0] add_ln590_3_fu_618_p2;
reg   [11:0] add_ln590_3_reg_3159;
wire   [11:0] sub_ln590_3_fu_624_p2;
reg   [11:0] sub_ln590_3_reg_3164;
wire   [0:0] icmp_ln591_3_fu_630_p2;
reg   [0:0] icmp_ln591_3_reg_3169;
wire   [31:0] trunc_ln592_3_fu_636_p1;
reg   [31:0] trunc_ln592_3_reg_3175;
wire   [53:0] man_V_14_fu_692_p3;
reg   [53:0] man_V_14_reg_3181;
wire   [0:0] icmp_ln580_4_fu_700_p2;
reg   [0:0] icmp_ln580_4_reg_3186;
wire   [0:0] icmp_ln590_4_fu_712_p2;
reg   [0:0] icmp_ln590_4_reg_3193;
wire   [11:0] add_ln590_4_fu_718_p2;
reg   [11:0] add_ln590_4_reg_3200;
wire   [11:0] sub_ln590_4_fu_724_p2;
reg   [11:0] sub_ln590_4_reg_3205;
wire   [0:0] icmp_ln591_4_fu_730_p2;
reg   [0:0] icmp_ln591_4_reg_3210;
wire   [31:0] trunc_ln592_4_fu_736_p1;
reg   [31:0] trunc_ln592_4_reg_3216;
wire   [53:0] man_V_17_fu_792_p3;
reg   [53:0] man_V_17_reg_3222;
wire   [0:0] icmp_ln580_5_fu_800_p2;
reg   [0:0] icmp_ln580_5_reg_3227;
wire   [0:0] icmp_ln590_5_fu_812_p2;
reg   [0:0] icmp_ln590_5_reg_3234;
wire   [11:0] add_ln590_5_fu_818_p2;
reg   [11:0] add_ln590_5_reg_3241;
wire   [11:0] sub_ln590_5_fu_824_p2;
reg   [11:0] sub_ln590_5_reg_3246;
wire   [0:0] icmp_ln591_5_fu_830_p2;
reg   [0:0] icmp_ln591_5_reg_3251;
wire   [31:0] trunc_ln592_5_fu_836_p1;
reg   [31:0] trunc_ln592_5_reg_3257;
wire   [53:0] man_V_20_fu_892_p3;
reg   [53:0] man_V_20_reg_3263;
wire   [0:0] icmp_ln580_6_fu_900_p2;
reg   [0:0] icmp_ln580_6_reg_3268;
wire   [0:0] icmp_ln590_6_fu_912_p2;
reg   [0:0] icmp_ln590_6_reg_3275;
wire   [11:0] add_ln590_6_fu_918_p2;
reg   [11:0] add_ln590_6_reg_3282;
wire   [11:0] sub_ln590_6_fu_924_p2;
reg   [11:0] sub_ln590_6_reg_3287;
wire   [0:0] icmp_ln591_6_fu_930_p2;
reg   [0:0] icmp_ln591_6_reg_3292;
wire   [31:0] trunc_ln592_6_fu_936_p1;
reg   [31:0] trunc_ln592_6_reg_3298;
wire   [53:0] man_V_23_fu_992_p3;
reg   [53:0] man_V_23_reg_3304;
wire   [0:0] icmp_ln580_7_fu_1000_p2;
reg   [0:0] icmp_ln580_7_reg_3309;
wire   [0:0] icmp_ln590_7_fu_1012_p2;
reg   [0:0] icmp_ln590_7_reg_3316;
wire   [11:0] add_ln590_7_fu_1018_p2;
reg   [11:0] add_ln590_7_reg_3323;
wire   [11:0] sub_ln590_7_fu_1024_p2;
reg   [11:0] sub_ln590_7_reg_3328;
wire   [0:0] icmp_ln591_7_fu_1030_p2;
reg   [0:0] icmp_ln591_7_reg_3333;
wire   [31:0] trunc_ln592_7_fu_1036_p1;
reg   [31:0] trunc_ln592_7_reg_3339;
wire   [53:0] man_V_26_fu_1092_p3;
reg   [53:0] man_V_26_reg_3345;
wire   [0:0] icmp_ln580_8_fu_1100_p2;
reg   [0:0] icmp_ln580_8_reg_3350;
wire   [0:0] icmp_ln590_8_fu_1112_p2;
reg   [0:0] icmp_ln590_8_reg_3357;
wire   [11:0] add_ln590_8_fu_1118_p2;
reg   [11:0] add_ln590_8_reg_3364;
wire   [11:0] sub_ln590_8_fu_1124_p2;
reg   [11:0] sub_ln590_8_reg_3369;
wire   [0:0] icmp_ln591_8_fu_1130_p2;
reg   [0:0] icmp_ln591_8_reg_3374;
wire   [31:0] trunc_ln592_8_fu_1136_p1;
reg   [31:0] trunc_ln592_8_reg_3380;
wire   [53:0] man_V_29_fu_1192_p3;
reg   [53:0] man_V_29_reg_3386;
wire   [0:0] icmp_ln580_9_fu_1200_p2;
reg   [0:0] icmp_ln580_9_reg_3391;
wire   [0:0] icmp_ln590_9_fu_1212_p2;
reg   [0:0] icmp_ln590_9_reg_3398;
wire   [11:0] add_ln590_9_fu_1218_p2;
reg   [11:0] add_ln590_9_reg_3405;
wire   [11:0] sub_ln590_9_fu_1224_p2;
reg   [11:0] sub_ln590_9_reg_3410;
wire   [0:0] icmp_ln591_9_fu_1230_p2;
reg   [0:0] icmp_ln591_9_reg_3415;
wire   [31:0] trunc_ln592_9_fu_1236_p1;
reg   [31:0] trunc_ln592_9_reg_3421;
wire   [31:0] in_local_V_fu_1371_p3;
reg   [31:0] in_local_V_reg_3427;
wire    ap_CS_fsm_state12;
wire   [31:0] in_local_V_1_fu_1509_p3;
reg   [31:0] in_local_V_1_reg_3432;
wire   [31:0] in_local_V_2_fu_1647_p3;
reg   [31:0] in_local_V_2_reg_3437;
wire   [31:0] in_local_V_3_fu_1785_p3;
reg   [31:0] in_local_V_3_reg_3442;
wire   [31:0] in_local_V_4_fu_1923_p3;
reg   [31:0] in_local_V_4_reg_3447;
wire   [31:0] in_local_V_5_fu_2061_p3;
reg   [31:0] in_local_V_5_reg_3452;
wire   [31:0] in_local_V_6_fu_2199_p3;
reg   [31:0] in_local_V_6_reg_3457;
wire   [31:0] in_local_V_7_fu_2337_p3;
reg   [31:0] in_local_V_7_reg_3462;
wire   [31:0] in_local_V_8_fu_2475_p3;
reg   [31:0] in_local_V_8_reg_3467;
wire   [31:0] in_local_V_9_fu_2613_p3;
reg   [31:0] in_local_V_9_reg_3472;
wire   [31:0] out_local_V_myproject_fu_151_ap_return;
reg   [31:0] out_local_V_reg_3477;
wire    ap_CS_fsm_state13;
reg   [0:0] p_Result_22_reg_3484;
wire   [31:0] tmp_V_fu_2628_p2;
reg   [31:0] tmp_V_reg_3490;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln988_fu_2633_p2;
reg   [0:0] icmp_ln988_reg_3495;
wire    ap_CS_fsm_state15;
wire   [31:0] tmp_V_3_fu_2638_p3;
reg   [31:0] tmp_V_3_reg_3500;
wire   [31:0] sub_ln997_fu_2661_p2;
reg   [31:0] sub_ln997_reg_3505;
wire   [0:0] icmp_ln1011_fu_2755_p2;
reg   [0:0] icmp_ln1011_reg_3511;
wire   [0:0] select_ln1011_fu_2775_p3;
reg   [0:0] select_ln1011_reg_3516;
wire   [7:0] trunc_ln996_fu_2783_p1;
reg   [7:0] trunc_ln996_reg_3521;
wire   [31:0] select_ln988_fu_2900_p3;
wire    out_local_V_myproject_fu_151_ap_ready;
wire   [31:0] grp_fu_165_p0;
wire   [31:0] grp_fu_168_p0;
wire   [31:0] grp_fu_171_p0;
wire   [31:0] grp_fu_174_p0;
wire   [31:0] grp_fu_177_p0;
wire   [31:0] grp_fu_180_p0;
wire   [31:0] grp_fu_183_p0;
wire   [31:0] grp_fu_186_p0;
wire   [31:0] grp_fu_189_p0;
wire   [31:0] grp_fu_192_p0;
wire   [63:0] grp_fu_165_p1;
wire   [63:0] ireg_fu_240_p1;
wire   [10:0] exp_tmp_fu_256_p4;
wire   [51:0] trunc_ln574_fu_270_p1;
wire   [52:0] p_Result_3_fu_274_p3;
wire   [53:0] zext_ln578_fu_282_p1;
wire   [0:0] p_Result_2_fu_248_p3;
wire   [53:0] man_V_1_fu_286_p2;
wire   [62:0] trunc_ln564_fu_244_p1;
wire   [11:0] zext_ln501_fu_266_p1;
wire   [11:0] F2_fu_306_p2;
wire   [63:0] grp_fu_168_p1;
wire   [63:0] ireg_1_fu_340_p1;
wire   [10:0] exp_tmp_1_fu_356_p4;
wire   [51:0] trunc_ln574_1_fu_370_p1;
wire   [52:0] p_Result_5_fu_374_p3;
wire   [53:0] zext_ln578_1_fu_382_p1;
wire   [0:0] p_Result_4_fu_348_p3;
wire   [53:0] man_V_4_fu_386_p2;
wire   [62:0] trunc_ln564_1_fu_344_p1;
wire   [11:0] zext_ln501_1_fu_366_p1;
wire   [11:0] F2_1_fu_406_p2;
wire   [63:0] grp_fu_171_p1;
wire   [63:0] ireg_2_fu_440_p1;
wire   [10:0] exp_tmp_2_fu_456_p4;
wire   [51:0] trunc_ln574_2_fu_470_p1;
wire   [52:0] p_Result_7_fu_474_p3;
wire   [53:0] zext_ln578_2_fu_482_p1;
wire   [0:0] p_Result_6_fu_448_p3;
wire   [53:0] man_V_7_fu_486_p2;
wire   [62:0] trunc_ln564_2_fu_444_p1;
wire   [11:0] zext_ln501_2_fu_466_p1;
wire   [11:0] F2_2_fu_506_p2;
wire   [63:0] grp_fu_174_p1;
wire   [63:0] ireg_3_fu_540_p1;
wire   [10:0] exp_tmp_3_fu_556_p4;
wire   [51:0] trunc_ln574_3_fu_570_p1;
wire   [52:0] p_Result_9_fu_574_p3;
wire   [53:0] zext_ln578_3_fu_582_p1;
wire   [0:0] p_Result_8_fu_548_p3;
wire   [53:0] man_V_10_fu_586_p2;
wire   [62:0] trunc_ln564_3_fu_544_p1;
wire   [11:0] zext_ln501_3_fu_566_p1;
wire   [11:0] F2_3_fu_606_p2;
wire   [63:0] grp_fu_177_p1;
wire   [63:0] ireg_4_fu_640_p1;
wire   [10:0] exp_tmp_4_fu_656_p4;
wire   [51:0] trunc_ln574_4_fu_670_p1;
wire   [52:0] p_Result_11_fu_674_p3;
wire   [53:0] zext_ln578_4_fu_682_p1;
wire   [0:0] p_Result_10_fu_648_p3;
wire   [53:0] man_V_13_fu_686_p2;
wire   [62:0] trunc_ln564_4_fu_644_p1;
wire   [11:0] zext_ln501_4_fu_666_p1;
wire   [11:0] F2_4_fu_706_p2;
wire   [63:0] grp_fu_180_p1;
wire   [63:0] ireg_5_fu_740_p1;
wire   [10:0] exp_tmp_5_fu_756_p4;
wire   [51:0] trunc_ln574_5_fu_770_p1;
wire   [52:0] p_Result_13_fu_774_p3;
wire   [53:0] zext_ln578_5_fu_782_p1;
wire   [0:0] p_Result_12_fu_748_p3;
wire   [53:0] man_V_16_fu_786_p2;
wire   [62:0] trunc_ln564_5_fu_744_p1;
wire   [11:0] zext_ln501_5_fu_766_p1;
wire   [11:0] F2_5_fu_806_p2;
wire   [63:0] grp_fu_183_p1;
wire   [63:0] ireg_6_fu_840_p1;
wire   [10:0] exp_tmp_6_fu_856_p4;
wire   [51:0] trunc_ln574_6_fu_870_p1;
wire   [52:0] p_Result_15_fu_874_p3;
wire   [53:0] zext_ln578_6_fu_882_p1;
wire   [0:0] p_Result_14_fu_848_p3;
wire   [53:0] man_V_19_fu_886_p2;
wire   [62:0] trunc_ln564_6_fu_844_p1;
wire   [11:0] zext_ln501_6_fu_866_p1;
wire   [11:0] F2_6_fu_906_p2;
wire   [63:0] grp_fu_186_p1;
wire   [63:0] ireg_7_fu_940_p1;
wire   [10:0] exp_tmp_7_fu_956_p4;
wire   [51:0] trunc_ln574_7_fu_970_p1;
wire   [52:0] p_Result_17_fu_974_p3;
wire   [53:0] zext_ln578_7_fu_982_p1;
wire   [0:0] p_Result_16_fu_948_p3;
wire   [53:0] man_V_22_fu_986_p2;
wire   [62:0] trunc_ln564_7_fu_944_p1;
wire   [11:0] zext_ln501_7_fu_966_p1;
wire   [11:0] F2_7_fu_1006_p2;
wire   [63:0] grp_fu_189_p1;
wire   [63:0] ireg_8_fu_1040_p1;
wire   [10:0] exp_tmp_8_fu_1056_p4;
wire   [51:0] trunc_ln574_8_fu_1070_p1;
wire   [52:0] p_Result_19_fu_1074_p3;
wire   [53:0] zext_ln578_8_fu_1082_p1;
wire   [0:0] p_Result_18_fu_1048_p3;
wire   [53:0] man_V_25_fu_1086_p2;
wire   [62:0] trunc_ln564_8_fu_1044_p1;
wire   [11:0] zext_ln501_8_fu_1066_p1;
wire   [11:0] F2_8_fu_1106_p2;
wire   [63:0] grp_fu_192_p1;
wire   [63:0] ireg_9_fu_1140_p1;
wire   [10:0] exp_tmp_9_fu_1156_p4;
wire   [51:0] trunc_ln574_9_fu_1170_p1;
wire   [52:0] p_Result_21_fu_1174_p3;
wire   [53:0] zext_ln578_9_fu_1182_p1;
wire   [0:0] p_Result_20_fu_1148_p3;
wire   [53:0] man_V_28_fu_1186_p2;
wire   [62:0] trunc_ln564_9_fu_1144_p1;
wire   [11:0] zext_ln501_9_fu_1166_p1;
wire   [11:0] F2_9_fu_1206_p2;
wire  signed [11:0] sh_amt_fu_1240_p3;
wire   [6:0] tmp_fu_1255_p4;
wire  signed [31:0] sext_ln590_fu_1245_p1;
wire   [0:0] icmp_ln612_fu_1265_p2;
wire   [31:0] shl_ln613_fu_1271_p2;
wire   [53:0] zext_ln595_fu_1284_p1;
wire   [53:0] ashr_ln595_fu_1288_p2;
wire   [0:0] tmp_11_fu_1297_p3;
wire   [0:0] xor_ln580_fu_1312_p2;
wire   [0:0] and_ln591_fu_1317_p2;
wire   [31:0] select_ln597_fu_1304_p3;
wire   [0:0] or_ln591_fu_1329_p2;
wire   [0:0] or_ln590_fu_1333_p2;
wire   [31:0] select_ln591_fu_1322_p3;
wire   [31:0] select_ln612_fu_1276_p3;
wire   [0:0] icmp_ln594_fu_1249_p2;
wire   [0:0] xor_ln591_fu_1346_p2;
wire   [0:0] and_ln594_fu_1352_p2;
wire   [0:0] and_ln594_1_fu_1358_p2;
wire   [31:0] trunc_ln595_fu_1293_p1;
wire   [31:0] select_ln590_fu_1338_p3;
wire   [31:0] select_ln594_fu_1363_p3;
wire  signed [11:0] sh_amt_1_fu_1378_p3;
wire   [6:0] tmp_14_fu_1393_p4;
wire  signed [31:0] sext_ln590_1_fu_1383_p1;
wire   [0:0] icmp_ln612_1_fu_1403_p2;
wire   [31:0] shl_ln613_1_fu_1409_p2;
wire   [53:0] zext_ln595_1_fu_1422_p1;
wire   [53:0] ashr_ln595_1_fu_1426_p2;
wire   [0:0] tmp_15_fu_1435_p3;
wire   [0:0] xor_ln580_1_fu_1450_p2;
wire   [0:0] and_ln591_1_fu_1455_p2;
wire   [31:0] select_ln597_1_fu_1442_p3;
wire   [0:0] or_ln591_1_fu_1467_p2;
wire   [0:0] or_ln590_1_fu_1471_p2;
wire   [31:0] select_ln591_1_fu_1460_p3;
wire   [31:0] select_ln612_1_fu_1414_p3;
wire   [0:0] icmp_ln594_1_fu_1387_p2;
wire   [0:0] xor_ln591_1_fu_1484_p2;
wire   [0:0] and_ln594_2_fu_1490_p2;
wire   [0:0] and_ln594_3_fu_1496_p2;
wire   [31:0] trunc_ln595_1_fu_1431_p1;
wire   [31:0] select_ln590_2_fu_1476_p3;
wire   [31:0] select_ln594_1_fu_1501_p3;
wire  signed [11:0] sh_amt_2_fu_1516_p3;
wire   [6:0] tmp_18_fu_1531_p4;
wire  signed [31:0] sext_ln590_2_fu_1521_p1;
wire   [0:0] icmp_ln612_2_fu_1541_p2;
wire   [31:0] shl_ln613_2_fu_1547_p2;
wire   [53:0] zext_ln595_2_fu_1560_p1;
wire   [53:0] ashr_ln595_2_fu_1564_p2;
wire   [0:0] tmp_19_fu_1573_p3;
wire   [0:0] xor_ln580_2_fu_1588_p2;
wire   [0:0] and_ln591_2_fu_1593_p2;
wire   [31:0] select_ln597_2_fu_1580_p3;
wire   [0:0] or_ln591_2_fu_1605_p2;
wire   [0:0] or_ln590_2_fu_1609_p2;
wire   [31:0] select_ln591_2_fu_1598_p3;
wire   [31:0] select_ln612_2_fu_1552_p3;
wire   [0:0] icmp_ln594_2_fu_1525_p2;
wire   [0:0] xor_ln591_2_fu_1622_p2;
wire   [0:0] and_ln594_4_fu_1628_p2;
wire   [0:0] and_ln594_5_fu_1634_p2;
wire   [31:0] trunc_ln595_2_fu_1569_p1;
wire   [31:0] select_ln590_4_fu_1614_p3;
wire   [31:0] select_ln594_2_fu_1639_p3;
wire  signed [11:0] sh_amt_3_fu_1654_p3;
wire   [6:0] tmp_22_fu_1669_p4;
wire  signed [31:0] sext_ln590_3_fu_1659_p1;
wire   [0:0] icmp_ln612_3_fu_1679_p2;
wire   [31:0] shl_ln613_3_fu_1685_p2;
wire   [53:0] zext_ln595_3_fu_1698_p1;
wire   [53:0] ashr_ln595_3_fu_1702_p2;
wire   [0:0] tmp_23_fu_1711_p3;
wire   [0:0] xor_ln580_3_fu_1726_p2;
wire   [0:0] and_ln591_3_fu_1731_p2;
wire   [31:0] select_ln597_3_fu_1718_p3;
wire   [0:0] or_ln591_3_fu_1743_p2;
wire   [0:0] or_ln590_3_fu_1747_p2;
wire   [31:0] select_ln591_3_fu_1736_p3;
wire   [31:0] select_ln612_3_fu_1690_p3;
wire   [0:0] icmp_ln594_3_fu_1663_p2;
wire   [0:0] xor_ln591_3_fu_1760_p2;
wire   [0:0] and_ln594_6_fu_1766_p2;
wire   [0:0] and_ln594_7_fu_1772_p2;
wire   [31:0] trunc_ln595_3_fu_1707_p1;
wire   [31:0] select_ln590_6_fu_1752_p3;
wire   [31:0] select_ln594_3_fu_1777_p3;
wire  signed [11:0] sh_amt_4_fu_1792_p3;
wire   [6:0] tmp_26_fu_1807_p4;
wire  signed [31:0] sext_ln590_4_fu_1797_p1;
wire   [0:0] icmp_ln612_4_fu_1817_p2;
wire   [31:0] shl_ln613_4_fu_1823_p2;
wire   [53:0] zext_ln595_4_fu_1836_p1;
wire   [53:0] ashr_ln595_4_fu_1840_p2;
wire   [0:0] tmp_27_fu_1849_p3;
wire   [0:0] xor_ln580_4_fu_1864_p2;
wire   [0:0] and_ln591_4_fu_1869_p2;
wire   [31:0] select_ln597_4_fu_1856_p3;
wire   [0:0] or_ln591_4_fu_1881_p2;
wire   [0:0] or_ln590_4_fu_1885_p2;
wire   [31:0] select_ln591_4_fu_1874_p3;
wire   [31:0] select_ln612_4_fu_1828_p3;
wire   [0:0] icmp_ln594_4_fu_1801_p2;
wire   [0:0] xor_ln591_4_fu_1898_p2;
wire   [0:0] and_ln594_8_fu_1904_p2;
wire   [0:0] and_ln594_9_fu_1910_p2;
wire   [31:0] trunc_ln595_4_fu_1845_p1;
wire   [31:0] select_ln590_8_fu_1890_p3;
wire   [31:0] select_ln594_4_fu_1915_p3;
wire  signed [11:0] sh_amt_5_fu_1930_p3;
wire   [6:0] tmp_30_fu_1945_p4;
wire  signed [31:0] sext_ln590_5_fu_1935_p1;
wire   [0:0] icmp_ln612_5_fu_1955_p2;
wire   [31:0] shl_ln613_5_fu_1961_p2;
wire   [53:0] zext_ln595_5_fu_1974_p1;
wire   [53:0] ashr_ln595_5_fu_1978_p2;
wire   [0:0] tmp_31_fu_1987_p3;
wire   [0:0] xor_ln580_5_fu_2002_p2;
wire   [0:0] and_ln591_5_fu_2007_p2;
wire   [31:0] select_ln597_5_fu_1994_p3;
wire   [0:0] or_ln591_5_fu_2019_p2;
wire   [0:0] or_ln590_5_fu_2023_p2;
wire   [31:0] select_ln591_5_fu_2012_p3;
wire   [31:0] select_ln612_5_fu_1966_p3;
wire   [0:0] icmp_ln594_5_fu_1939_p2;
wire   [0:0] xor_ln591_5_fu_2036_p2;
wire   [0:0] and_ln594_10_fu_2042_p2;
wire   [0:0] and_ln594_11_fu_2048_p2;
wire   [31:0] trunc_ln595_5_fu_1983_p1;
wire   [31:0] select_ln590_10_fu_2028_p3;
wire   [31:0] select_ln594_5_fu_2053_p3;
wire  signed [11:0] sh_amt_6_fu_2068_p3;
wire   [6:0] tmp_34_fu_2083_p4;
wire  signed [31:0] sext_ln590_6_fu_2073_p1;
wire   [0:0] icmp_ln612_6_fu_2093_p2;
wire   [31:0] shl_ln613_6_fu_2099_p2;
wire   [53:0] zext_ln595_6_fu_2112_p1;
wire   [53:0] ashr_ln595_6_fu_2116_p2;
wire   [0:0] tmp_35_fu_2125_p3;
wire   [0:0] xor_ln580_6_fu_2140_p2;
wire   [0:0] and_ln591_6_fu_2145_p2;
wire   [31:0] select_ln597_6_fu_2132_p3;
wire   [0:0] or_ln591_6_fu_2157_p2;
wire   [0:0] or_ln590_6_fu_2161_p2;
wire   [31:0] select_ln591_6_fu_2150_p3;
wire   [31:0] select_ln612_6_fu_2104_p3;
wire   [0:0] icmp_ln594_6_fu_2077_p2;
wire   [0:0] xor_ln591_6_fu_2174_p2;
wire   [0:0] and_ln594_12_fu_2180_p2;
wire   [0:0] and_ln594_13_fu_2186_p2;
wire   [31:0] trunc_ln595_6_fu_2121_p1;
wire   [31:0] select_ln590_12_fu_2166_p3;
wire   [31:0] select_ln594_6_fu_2191_p3;
wire  signed [11:0] sh_amt_7_fu_2206_p3;
wire   [6:0] tmp_38_fu_2221_p4;
wire  signed [31:0] sext_ln590_7_fu_2211_p1;
wire   [0:0] icmp_ln612_7_fu_2231_p2;
wire   [31:0] shl_ln613_7_fu_2237_p2;
wire   [53:0] zext_ln595_7_fu_2250_p1;
wire   [53:0] ashr_ln595_7_fu_2254_p2;
wire   [0:0] tmp_39_fu_2263_p3;
wire   [0:0] xor_ln580_7_fu_2278_p2;
wire   [0:0] and_ln591_7_fu_2283_p2;
wire   [31:0] select_ln597_7_fu_2270_p3;
wire   [0:0] or_ln591_7_fu_2295_p2;
wire   [0:0] or_ln590_7_fu_2299_p2;
wire   [31:0] select_ln591_7_fu_2288_p3;
wire   [31:0] select_ln612_7_fu_2242_p3;
wire   [0:0] icmp_ln594_7_fu_2215_p2;
wire   [0:0] xor_ln591_7_fu_2312_p2;
wire   [0:0] and_ln594_14_fu_2318_p2;
wire   [0:0] and_ln594_15_fu_2324_p2;
wire   [31:0] trunc_ln595_7_fu_2259_p1;
wire   [31:0] select_ln590_14_fu_2304_p3;
wire   [31:0] select_ln594_7_fu_2329_p3;
wire  signed [11:0] sh_amt_8_fu_2344_p3;
wire   [6:0] tmp_42_fu_2359_p4;
wire  signed [31:0] sext_ln590_8_fu_2349_p1;
wire   [0:0] icmp_ln612_8_fu_2369_p2;
wire   [31:0] shl_ln613_8_fu_2375_p2;
wire   [53:0] zext_ln595_8_fu_2388_p1;
wire   [53:0] ashr_ln595_8_fu_2392_p2;
wire   [0:0] tmp_43_fu_2401_p3;
wire   [0:0] xor_ln580_8_fu_2416_p2;
wire   [0:0] and_ln591_8_fu_2421_p2;
wire   [31:0] select_ln597_8_fu_2408_p3;
wire   [0:0] or_ln591_8_fu_2433_p2;
wire   [0:0] or_ln590_8_fu_2437_p2;
wire   [31:0] select_ln591_8_fu_2426_p3;
wire   [31:0] select_ln612_8_fu_2380_p3;
wire   [0:0] icmp_ln594_8_fu_2353_p2;
wire   [0:0] xor_ln591_8_fu_2450_p2;
wire   [0:0] and_ln594_16_fu_2456_p2;
wire   [0:0] and_ln594_17_fu_2462_p2;
wire   [31:0] trunc_ln595_8_fu_2397_p1;
wire   [31:0] select_ln590_16_fu_2442_p3;
wire   [31:0] select_ln594_8_fu_2467_p3;
wire  signed [11:0] sh_amt_9_fu_2482_p3;
wire   [6:0] tmp_46_fu_2497_p4;
wire  signed [31:0] sext_ln590_9_fu_2487_p1;
wire   [0:0] icmp_ln612_9_fu_2507_p2;
wire   [31:0] shl_ln613_9_fu_2513_p2;
wire   [53:0] zext_ln595_9_fu_2526_p1;
wire   [53:0] ashr_ln595_9_fu_2530_p2;
wire   [0:0] tmp_47_fu_2539_p3;
wire   [0:0] xor_ln580_9_fu_2554_p2;
wire   [0:0] and_ln591_9_fu_2559_p2;
wire   [31:0] select_ln597_9_fu_2546_p3;
wire   [0:0] or_ln591_9_fu_2571_p2;
wire   [0:0] or_ln590_9_fu_2575_p2;
wire   [31:0] select_ln591_9_fu_2564_p3;
wire   [31:0] select_ln612_9_fu_2518_p3;
wire   [0:0] icmp_ln594_9_fu_2491_p2;
wire   [0:0] xor_ln591_9_fu_2588_p2;
wire   [0:0] and_ln594_18_fu_2594_p2;
wire   [0:0] and_ln594_19_fu_2600_p2;
wire   [31:0] trunc_ln595_9_fu_2535_p1;
wire   [31:0] select_ln590_18_fu_2580_p3;
wire   [31:0] select_ln594_9_fu_2605_p3;
reg   [31:0] p_Result_23_fu_2643_p4;
reg   [31:0] l_fu_2653_p3;
wire   [31:0] lsb_index_fu_2667_p2;
wire   [30:0] tmp_49_fu_2673_p4;
wire   [5:0] trunc_ln1000_fu_2689_p1;
wire   [5:0] sub_ln1000_fu_2693_p2;
wire   [31:0] zext_ln1000_fu_2699_p1;
wire   [31:0] lshr_ln1000_fu_2703_p2;
wire   [31:0] shl_ln1002_fu_2709_p2;
wire   [31:0] or_ln1002_1_fu_2715_p2;
wire   [31:0] and_ln1002_fu_2721_p2;
wire   [0:0] tmp_50_fu_2733_p3;
wire   [0:0] p_Result_24_fu_2747_p3;
wire   [0:0] xor_ln1002_fu_2741_p2;
wire   [0:0] icmp_ln999_fu_2683_p2;
wire   [0:0] icmp_ln1002_fu_2727_p2;
wire   [0:0] select_ln999_fu_2767_p3;
wire   [0:0] and_ln1002_1_fu_2761_p2;
wire   [31:0] sub_ln1012_fu_2790_p2;
wire   [63:0] zext_ln1010_fu_2787_p1;
wire   [63:0] zext_ln1012_fu_2795_p1;
wire   [31:0] add_ln1011_fu_2805_p2;
wire   [63:0] zext_ln1011_fu_2810_p1;
wire   [63:0] lshr_ln1011_fu_2814_p2;
wire   [63:0] shl_ln1012_fu_2799_p2;
wire   [63:0] m_fu_2820_p3;
wire   [63:0] zext_ln1014_fu_2827_p1;
wire   [63:0] m_2_fu_2830_p2;
wire   [62:0] m_5_fu_2836_p4;
wire   [0:0] p_Result_s_fu_2850_p3;
wire   [7:0] sub_ln1017_fu_2866_p2;
wire   [7:0] select_ln996_fu_2858_p3;
wire   [7:0] add_ln1017_fu_2871_p2;
wire   [63:0] zext_ln1015_fu_2846_p1;
wire   [8:0] tmp_9_fu_2877_p3;
wire   [63:0] p_Result_25_fu_2884_p5;
wire   [31:0] LD_10_fu_2896_p1;
reg    grp_fu_165_ce;
reg    grp_fu_168_ce;
reg    grp_fu_171_ce;
reg    grp_fu_174_ce;
reg    grp_fu_177_ce;
reg    grp_fu_180_ce;
reg    grp_fu_183_ce;
reg    grp_fu_186_ce;
reg    grp_fu_189_ce;
reg    grp_fu_192_ce;
reg   [25:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    regslice_both_out_r_V_data_V_U_apdone_blk;
reg    ap_block_state26;
wire    regslice_both_in_r_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_V_data_V_U_ack_in;
wire    regslice_both_in_r_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_r_V_keep_V_U_vld_out;
wire    regslice_both_in_r_V_keep_V_U_ack_in;
wire    regslice_both_in_r_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_r_V_strb_V_U_vld_out;
wire    regslice_both_in_r_V_strb_V_U_ack_in;
wire    regslice_both_in_r_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_r_V_last_V_U_vld_out;
wire    regslice_both_in_r_V_last_V_U_ack_in;
reg   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_V_data_V_U_vld_out;
wire    regslice_both_out_r_V_keep_V_U_apdone_blk;
wire    regslice_both_out_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_keep_V_U_vld_out;
wire    regslice_both_out_r_V_strb_V_U_apdone_blk;
wire    regslice_both_out_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_strb_V_U_vld_out;
wire    regslice_both_out_r_V_last_V_U_apdone_blk;
reg   [0:0] out_r_TLAST_int_regslice;
wire    regslice_both_out_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
end

myproject_axi_myproject out_local_V_myproject_fu_151(
    .ap_ready(out_local_V_myproject_fu_151_ap_ready),
    .p_read(in_local_V_reg_3427),
    .p_read1(in_local_V_1_reg_3432),
    .p_read2(in_local_V_2_reg_3437),
    .p_read3(in_local_V_3_reg_3442),
    .p_read4(in_local_V_4_reg_3447),
    .p_read5(in_local_V_5_reg_3452),
    .p_read6(in_local_V_6_reg_3457),
    .p_read7(in_local_V_7_reg_3462),
    .p_read8(in_local_V_8_reg_3467),
    .p_read9(in_local_V_9_reg_3472),
    .ap_return(out_local_V_myproject_fu_151_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_165_p0),
    .ce(grp_fu_165_ce),
    .dout(grp_fu_165_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_168_p0),
    .ce(grp_fu_168_ce),
    .dout(grp_fu_168_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_171_p0),
    .ce(grp_fu_171_ce),
    .dout(grp_fu_171_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_174_p0),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_177_p0),
    .ce(grp_fu_177_ce),
    .dout(grp_fu_177_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_180_p0),
    .ce(grp_fu_180_ce),
    .dout(grp_fu_180_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_183_p0),
    .ce(grp_fu_183_ce),
    .dout(grp_fu_183_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_186_p0),
    .ce(grp_fu_186_ce),
    .dout(grp_fu_186_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_189_p0),
    .ce(grp_fu_189_ce),
    .dout(grp_fu_189_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_192_p0),
    .ce(grp_fu_192_ce),
    .dout(grp_fu_192_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_r_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_r_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_r_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_r_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_r_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TLAST_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_r_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln590_1_reg_3077 <= add_ln590_1_fu_418_p2;
        add_ln590_2_reg_3118 <= add_ln590_2_fu_518_p2;
        add_ln590_3_reg_3159 <= add_ln590_3_fu_618_p2;
        add_ln590_4_reg_3200 <= add_ln590_4_fu_718_p2;
        add_ln590_5_reg_3241 <= add_ln590_5_fu_818_p2;
        add_ln590_6_reg_3282 <= add_ln590_6_fu_918_p2;
        add_ln590_7_reg_3323 <= add_ln590_7_fu_1018_p2;
        add_ln590_8_reg_3364 <= add_ln590_8_fu_1118_p2;
        add_ln590_9_reg_3405 <= add_ln590_9_fu_1218_p2;
        add_ln590_reg_3036 <= add_ln590_fu_318_p2;
        icmp_ln580_1_reg_3063 <= icmp_ln580_1_fu_400_p2;
        icmp_ln580_2_reg_3104 <= icmp_ln580_2_fu_500_p2;
        icmp_ln580_3_reg_3145 <= icmp_ln580_3_fu_600_p2;
        icmp_ln580_4_reg_3186 <= icmp_ln580_4_fu_700_p2;
        icmp_ln580_5_reg_3227 <= icmp_ln580_5_fu_800_p2;
        icmp_ln580_6_reg_3268 <= icmp_ln580_6_fu_900_p2;
        icmp_ln580_7_reg_3309 <= icmp_ln580_7_fu_1000_p2;
        icmp_ln580_8_reg_3350 <= icmp_ln580_8_fu_1100_p2;
        icmp_ln580_9_reg_3391 <= icmp_ln580_9_fu_1200_p2;
        icmp_ln580_reg_3022 <= icmp_ln580_fu_300_p2;
        icmp_ln590_1_reg_3070 <= icmp_ln590_1_fu_412_p2;
        icmp_ln590_2_reg_3111 <= icmp_ln590_2_fu_512_p2;
        icmp_ln590_3_reg_3152 <= icmp_ln590_3_fu_612_p2;
        icmp_ln590_4_reg_3193 <= icmp_ln590_4_fu_712_p2;
        icmp_ln590_5_reg_3234 <= icmp_ln590_5_fu_812_p2;
        icmp_ln590_6_reg_3275 <= icmp_ln590_6_fu_912_p2;
        icmp_ln590_7_reg_3316 <= icmp_ln590_7_fu_1012_p2;
        icmp_ln590_8_reg_3357 <= icmp_ln590_8_fu_1112_p2;
        icmp_ln590_9_reg_3398 <= icmp_ln590_9_fu_1212_p2;
        icmp_ln590_reg_3029 <= icmp_ln590_fu_312_p2;
        icmp_ln591_1_reg_3087 <= icmp_ln591_1_fu_430_p2;
        icmp_ln591_2_reg_3128 <= icmp_ln591_2_fu_530_p2;
        icmp_ln591_3_reg_3169 <= icmp_ln591_3_fu_630_p2;
        icmp_ln591_4_reg_3210 <= icmp_ln591_4_fu_730_p2;
        icmp_ln591_5_reg_3251 <= icmp_ln591_5_fu_830_p2;
        icmp_ln591_6_reg_3292 <= icmp_ln591_6_fu_930_p2;
        icmp_ln591_7_reg_3333 <= icmp_ln591_7_fu_1030_p2;
        icmp_ln591_8_reg_3374 <= icmp_ln591_8_fu_1130_p2;
        icmp_ln591_9_reg_3415 <= icmp_ln591_9_fu_1230_p2;
        icmp_ln591_reg_3046 <= icmp_ln591_fu_330_p2;
        man_V_11_reg_3140 <= man_V_11_fu_592_p3;
        man_V_14_reg_3181 <= man_V_14_fu_692_p3;
        man_V_17_reg_3222 <= man_V_17_fu_792_p3;
        man_V_20_reg_3263 <= man_V_20_fu_892_p3;
        man_V_23_reg_3304 <= man_V_23_fu_992_p3;
        man_V_26_reg_3345 <= man_V_26_fu_1092_p3;
        man_V_29_reg_3386 <= man_V_29_fu_1192_p3;
        man_V_2_reg_3017 <= man_V_2_fu_292_p3;
        man_V_5_reg_3058 <= man_V_5_fu_392_p3;
        man_V_8_reg_3099 <= man_V_8_fu_492_p3;
        sub_ln590_1_reg_3082 <= sub_ln590_1_fu_424_p2;
        sub_ln590_2_reg_3123 <= sub_ln590_2_fu_524_p2;
        sub_ln590_3_reg_3164 <= sub_ln590_3_fu_624_p2;
        sub_ln590_4_reg_3205 <= sub_ln590_4_fu_724_p2;
        sub_ln590_5_reg_3246 <= sub_ln590_5_fu_824_p2;
        sub_ln590_6_reg_3287 <= sub_ln590_6_fu_924_p2;
        sub_ln590_7_reg_3328 <= sub_ln590_7_fu_1024_p2;
        sub_ln590_8_reg_3369 <= sub_ln590_8_fu_1124_p2;
        sub_ln590_9_reg_3410 <= sub_ln590_9_fu_1224_p2;
        sub_ln590_reg_3041 <= sub_ln590_fu_324_p2;
        trunc_ln592_1_reg_3093 <= trunc_ln592_1_fu_436_p1;
        trunc_ln592_2_reg_3134 <= trunc_ln592_2_fu_536_p1;
        trunc_ln592_3_reg_3175 <= trunc_ln592_3_fu_636_p1;
        trunc_ln592_4_reg_3216 <= trunc_ln592_4_fu_736_p1;
        trunc_ln592_5_reg_3257 <= trunc_ln592_5_fu_836_p1;
        trunc_ln592_6_reg_3298 <= trunc_ln592_6_fu_936_p1;
        trunc_ln592_7_reg_3339 <= trunc_ln592_7_fu_1036_p1;
        trunc_ln592_8_reg_3380 <= trunc_ln592_8_fu_1136_p1;
        trunc_ln592_9_reg_3421 <= trunc_ln592_9_fu_1236_p1;
        trunc_ln592_reg_3052 <= trunc_ln592_fu_336_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln1011_reg_3511 <= icmp_ln1011_fu_2755_p2;
        icmp_ln988_reg_3495 <= icmp_ln988_fu_2633_p2;
        select_ln1011_reg_3516 <= select_ln1011_fu_2775_p3;
        sub_ln997_reg_3505 <= sub_ln997_fu_2661_p2;
        tmp_V_3_reg_3500 <= tmp_V_3_fu_2638_p3;
        trunc_ln996_reg_3521 <= trunc_ln996_fu_2783_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        in_local_V_1_reg_3432 <= in_local_V_1_fu_1509_p3;
        in_local_V_2_reg_3437 <= in_local_V_2_fu_1647_p3;
        in_local_V_3_reg_3442 <= in_local_V_3_fu_1785_p3;
        in_local_V_4_reg_3447 <= in_local_V_4_fu_1923_p3;
        in_local_V_5_reg_3452 <= in_local_V_5_fu_2061_p3;
        in_local_V_6_reg_3457 <= in_local_V_6_fu_2199_p3;
        in_local_V_7_reg_3462 <= in_local_V_7_fu_2337_p3;
        in_local_V_8_reg_3467 <= in_local_V_8_fu_2475_p3;
        in_local_V_9_reg_3472 <= in_local_V_9_fu_2613_p3;
        in_local_V_reg_3427 <= in_local_V_fu_1371_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_local_V_reg_3477 <= out_local_V_myproject_fu_151_ap_return;
        p_Result_22_reg_3484 <= out_local_V_myproject_fu_151_ap_return[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_0_reg_2908 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_1_reg_2920 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_2_reg_2926 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_3_reg_2932 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_4_reg_2938 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_5_reg_2944 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_6_reg_2950 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_7_reg_2956 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_8_reg_3007 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_s_reg_2914 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (p_Result_22_reg_3484 == 1'd1))) begin
        tmp_V_reg_3490 <= tmp_V_fu_2628_p2;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_168_ce = 1'b1;
    end else begin
        grp_fu_168_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_171_ce = 1'b1;
    end else begin
        grp_fu_171_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_177_ce = 1'b1;
    end else begin
        grp_fu_177_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_180_ce = 1'b1;
    end else begin
        grp_fu_180_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_183_ce = 1'b1;
    end else begin
        grp_fu_183_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_186_ce = 1'b1;
    end else begin
        grp_fu_186_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_189_ce = 1'b1;
    end else begin
        grp_fu_189_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_192_ce = 1'b1;
    end else begin
        grp_fu_192_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (out_r_TREADY_int_regslice == 1'b1)))) begin
        out_r_TDATA_int_regslice = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1))) begin
        out_r_TDATA_int_regslice = select_ln988_fu_2900_p3;
    end else begin
        out_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (out_r_TREADY_int_regslice == 1'b1))) begin
        out_r_TLAST_int_regslice = 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state24) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1)))) begin
        out_r_TLAST_int_regslice = 1'd0;
    end else begin
        out_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state22) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state21) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state20) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state17) & (out_r_TREADY_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1)))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_406_p2 = (12'd1075 - zext_ln501_1_fu_366_p1);

assign F2_2_fu_506_p2 = (12'd1075 - zext_ln501_2_fu_466_p1);

assign F2_3_fu_606_p2 = (12'd1075 - zext_ln501_3_fu_566_p1);

assign F2_4_fu_706_p2 = (12'd1075 - zext_ln501_4_fu_666_p1);

assign F2_5_fu_806_p2 = (12'd1075 - zext_ln501_5_fu_766_p1);

assign F2_6_fu_906_p2 = (12'd1075 - zext_ln501_6_fu_866_p1);

assign F2_7_fu_1006_p2 = (12'd1075 - zext_ln501_7_fu_966_p1);

assign F2_8_fu_1106_p2 = (12'd1075 - zext_ln501_8_fu_1066_p1);

assign F2_9_fu_1206_p2 = (12'd1075 - zext_ln501_9_fu_1166_p1);

assign F2_fu_306_p2 = (12'd1075 - zext_ln501_fu_266_p1);

assign LD_10_fu_2896_p1 = p_Result_25_fu_2884_p5[31:0];

assign add_ln1011_fu_2805_p2 = ($signed(sub_ln997_reg_3505) + $signed(32'd4294967271));

assign add_ln1017_fu_2871_p2 = (sub_ln1017_fu_2866_p2 + select_ln996_fu_2858_p3);

assign add_ln590_1_fu_418_p2 = ($signed(F2_1_fu_406_p2) + $signed(12'd4080));

assign add_ln590_2_fu_518_p2 = ($signed(F2_2_fu_506_p2) + $signed(12'd4080));

assign add_ln590_3_fu_618_p2 = ($signed(F2_3_fu_606_p2) + $signed(12'd4080));

assign add_ln590_4_fu_718_p2 = ($signed(F2_4_fu_706_p2) + $signed(12'd4080));

assign add_ln590_5_fu_818_p2 = ($signed(F2_5_fu_806_p2) + $signed(12'd4080));

assign add_ln590_6_fu_918_p2 = ($signed(F2_6_fu_906_p2) + $signed(12'd4080));

assign add_ln590_7_fu_1018_p2 = ($signed(F2_7_fu_1006_p2) + $signed(12'd4080));

assign add_ln590_8_fu_1118_p2 = ($signed(F2_8_fu_1106_p2) + $signed(12'd4080));

assign add_ln590_9_fu_1218_p2 = ($signed(F2_9_fu_1206_p2) + $signed(12'd4080));

assign add_ln590_fu_318_p2 = ($signed(F2_fu_306_p2) + $signed(12'd4080));

assign and_ln1002_1_fu_2761_p2 = (xor_ln1002_fu_2741_p2 & p_Result_24_fu_2747_p3);

assign and_ln1002_fu_2721_p2 = (tmp_V_3_fu_2638_p3 & or_ln1002_1_fu_2715_p2);

assign and_ln591_1_fu_1455_p2 = (xor_ln580_1_fu_1450_p2 & icmp_ln591_1_reg_3087);

assign and_ln591_2_fu_1593_p2 = (xor_ln580_2_fu_1588_p2 & icmp_ln591_2_reg_3128);

assign and_ln591_3_fu_1731_p2 = (xor_ln580_3_fu_1726_p2 & icmp_ln591_3_reg_3169);

assign and_ln591_4_fu_1869_p2 = (xor_ln580_4_fu_1864_p2 & icmp_ln591_4_reg_3210);

assign and_ln591_5_fu_2007_p2 = (xor_ln580_5_fu_2002_p2 & icmp_ln591_5_reg_3251);

assign and_ln591_6_fu_2145_p2 = (xor_ln580_6_fu_2140_p2 & icmp_ln591_6_reg_3292);

assign and_ln591_7_fu_2283_p2 = (xor_ln580_7_fu_2278_p2 & icmp_ln591_7_reg_3333);

assign and_ln591_8_fu_2421_p2 = (xor_ln580_8_fu_2416_p2 & icmp_ln591_8_reg_3374);

assign and_ln591_9_fu_2559_p2 = (xor_ln580_9_fu_2554_p2 & icmp_ln591_9_reg_3415);

assign and_ln591_fu_1317_p2 = (xor_ln580_fu_1312_p2 & icmp_ln591_reg_3046);

assign and_ln594_10_fu_2042_p2 = (xor_ln591_5_fu_2036_p2 & icmp_ln594_5_fu_1939_p2);

assign and_ln594_11_fu_2048_p2 = (icmp_ln590_5_reg_3234 & and_ln594_10_fu_2042_p2);

assign and_ln594_12_fu_2180_p2 = (xor_ln591_6_fu_2174_p2 & icmp_ln594_6_fu_2077_p2);

assign and_ln594_13_fu_2186_p2 = (icmp_ln590_6_reg_3275 & and_ln594_12_fu_2180_p2);

assign and_ln594_14_fu_2318_p2 = (xor_ln591_7_fu_2312_p2 & icmp_ln594_7_fu_2215_p2);

assign and_ln594_15_fu_2324_p2 = (icmp_ln590_7_reg_3316 & and_ln594_14_fu_2318_p2);

assign and_ln594_16_fu_2456_p2 = (xor_ln591_8_fu_2450_p2 & icmp_ln594_8_fu_2353_p2);

assign and_ln594_17_fu_2462_p2 = (icmp_ln590_8_reg_3357 & and_ln594_16_fu_2456_p2);

assign and_ln594_18_fu_2594_p2 = (xor_ln591_9_fu_2588_p2 & icmp_ln594_9_fu_2491_p2);

assign and_ln594_19_fu_2600_p2 = (icmp_ln590_9_reg_3398 & and_ln594_18_fu_2594_p2);

assign and_ln594_1_fu_1358_p2 = (icmp_ln590_reg_3029 & and_ln594_fu_1352_p2);

assign and_ln594_2_fu_1490_p2 = (xor_ln591_1_fu_1484_p2 & icmp_ln594_1_fu_1387_p2);

assign and_ln594_3_fu_1496_p2 = (icmp_ln590_1_reg_3070 & and_ln594_2_fu_1490_p2);

assign and_ln594_4_fu_1628_p2 = (xor_ln591_2_fu_1622_p2 & icmp_ln594_2_fu_1525_p2);

assign and_ln594_5_fu_1634_p2 = (icmp_ln590_2_reg_3111 & and_ln594_4_fu_1628_p2);

assign and_ln594_6_fu_1766_p2 = (xor_ln591_3_fu_1760_p2 & icmp_ln594_3_fu_1663_p2);

assign and_ln594_7_fu_1772_p2 = (icmp_ln590_3_reg_3152 & and_ln594_6_fu_1766_p2);

assign and_ln594_8_fu_1904_p2 = (xor_ln591_4_fu_1898_p2 & icmp_ln594_4_fu_1801_p2);

assign and_ln594_9_fu_1910_p2 = (icmp_ln590_4_reg_3193 & and_ln594_8_fu_1904_p2);

assign and_ln594_fu_1352_p2 = (xor_ln591_fu_1346_p2 & icmp_ln594_fu_1249_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state26 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1));
end


assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln595_1_fu_1426_p2 = $signed(man_V_5_reg_3058) >>> zext_ln595_1_fu_1422_p1;

assign ashr_ln595_2_fu_1564_p2 = $signed(man_V_8_reg_3099) >>> zext_ln595_2_fu_1560_p1;

assign ashr_ln595_3_fu_1702_p2 = $signed(man_V_11_reg_3140) >>> zext_ln595_3_fu_1698_p1;

assign ashr_ln595_4_fu_1840_p2 = $signed(man_V_14_reg_3181) >>> zext_ln595_4_fu_1836_p1;

assign ashr_ln595_5_fu_1978_p2 = $signed(man_V_17_reg_3222) >>> zext_ln595_5_fu_1974_p1;

assign ashr_ln595_6_fu_2116_p2 = $signed(man_V_20_reg_3263) >>> zext_ln595_6_fu_2112_p1;

assign ashr_ln595_7_fu_2254_p2 = $signed(man_V_23_reg_3304) >>> zext_ln595_7_fu_2250_p1;

assign ashr_ln595_8_fu_2392_p2 = $signed(man_V_26_reg_3345) >>> zext_ln595_8_fu_2388_p1;

assign ashr_ln595_9_fu_2530_p2 = $signed(man_V_29_reg_3386) >>> zext_ln595_9_fu_2526_p1;

assign ashr_ln595_fu_1288_p2 = $signed(man_V_2_reg_3017) >>> zext_ln595_fu_1284_p1;

assign exp_tmp_1_fu_356_p4 = {{ireg_1_fu_340_p1[62:52]}};

assign exp_tmp_2_fu_456_p4 = {{ireg_2_fu_440_p1[62:52]}};

assign exp_tmp_3_fu_556_p4 = {{ireg_3_fu_540_p1[62:52]}};

assign exp_tmp_4_fu_656_p4 = {{ireg_4_fu_640_p1[62:52]}};

assign exp_tmp_5_fu_756_p4 = {{ireg_5_fu_740_p1[62:52]}};

assign exp_tmp_6_fu_856_p4 = {{ireg_6_fu_840_p1[62:52]}};

assign exp_tmp_7_fu_956_p4 = {{ireg_7_fu_940_p1[62:52]}};

assign exp_tmp_8_fu_1056_p4 = {{ireg_8_fu_1040_p1[62:52]}};

assign exp_tmp_9_fu_1156_p4 = {{ireg_9_fu_1140_p1[62:52]}};

assign exp_tmp_fu_256_p4 = {{ireg_fu_240_p1[62:52]}};

assign grp_fu_165_p0 = p_0_reg_2908;

assign grp_fu_168_p0 = p_s_reg_2914;

assign grp_fu_171_p0 = p_1_reg_2920;

assign grp_fu_174_p0 = p_2_reg_2926;

assign grp_fu_177_p0 = p_3_reg_2932;

assign grp_fu_180_p0 = p_4_reg_2938;

assign grp_fu_183_p0 = p_5_reg_2944;

assign grp_fu_186_p0 = p_6_reg_2950;

assign grp_fu_189_p0 = p_7_reg_2956;

assign grp_fu_192_p0 = in_r_TDATA_int_regslice;

assign icmp_ln1002_fu_2727_p2 = ((and_ln1002_fu_2721_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1011_fu_2755_p2 = (($signed(lsb_index_fu_2667_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_400_p2 = ((trunc_ln564_1_fu_344_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_500_p2 = ((trunc_ln564_2_fu_444_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_3_fu_600_p2 = ((trunc_ln564_3_fu_544_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_4_fu_700_p2 = ((trunc_ln564_4_fu_644_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_5_fu_800_p2 = ((trunc_ln564_5_fu_744_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_6_fu_900_p2 = ((trunc_ln564_6_fu_844_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_7_fu_1000_p2 = ((trunc_ln564_7_fu_944_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_8_fu_1100_p2 = ((trunc_ln564_8_fu_1044_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_9_fu_1200_p2 = ((trunc_ln564_9_fu_1144_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_300_p2 = ((trunc_ln564_fu_244_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_412_p2 = (($signed(F2_1_fu_406_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_2_fu_512_p2 = (($signed(F2_2_fu_506_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_3_fu_612_p2 = (($signed(F2_3_fu_606_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_4_fu_712_p2 = (($signed(F2_4_fu_706_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_5_fu_812_p2 = (($signed(F2_5_fu_806_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_6_fu_912_p2 = (($signed(F2_6_fu_906_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_7_fu_1012_p2 = (($signed(F2_7_fu_1006_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_8_fu_1112_p2 = (($signed(F2_8_fu_1106_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_9_fu_1212_p2 = (($signed(F2_9_fu_1206_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_312_p2 = (($signed(F2_fu_306_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_430_p2 = ((F2_1_fu_406_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_530_p2 = ((F2_2_fu_506_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_3_fu_630_p2 = ((F2_3_fu_606_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_4_fu_730_p2 = ((F2_4_fu_706_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_5_fu_830_p2 = ((F2_5_fu_806_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_6_fu_930_p2 = ((F2_6_fu_906_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_7_fu_1030_p2 = ((F2_7_fu_1006_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_8_fu_1130_p2 = ((F2_8_fu_1106_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_9_fu_1230_p2 = ((F2_9_fu_1206_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_330_p2 = ((F2_fu_306_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_1387_p2 = ((sh_amt_1_fu_1378_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_2_fu_1525_p2 = ((sh_amt_2_fu_1516_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_3_fu_1663_p2 = ((sh_amt_3_fu_1654_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_4_fu_1801_p2 = ((sh_amt_4_fu_1792_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_5_fu_1939_p2 = ((sh_amt_5_fu_1930_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_6_fu_2077_p2 = ((sh_amt_6_fu_2068_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_7_fu_2215_p2 = ((sh_amt_7_fu_2206_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_8_fu_2353_p2 = ((sh_amt_8_fu_2344_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_9_fu_2491_p2 = ((sh_amt_9_fu_2482_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_1249_p2 = ((sh_amt_fu_1240_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_1403_p2 = ((tmp_14_fu_1393_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_2_fu_1541_p2 = ((tmp_18_fu_1531_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_3_fu_1679_p2 = ((tmp_22_fu_1669_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_4_fu_1817_p2 = ((tmp_26_fu_1807_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_5_fu_1955_p2 = ((tmp_30_fu_1945_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_6_fu_2093_p2 = ((tmp_34_fu_2083_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_7_fu_2231_p2 = ((tmp_38_fu_2221_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_8_fu_2369_p2 = ((tmp_42_fu_2359_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_9_fu_2507_p2 = ((tmp_46_fu_2497_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_1265_p2 = ((tmp_fu_1255_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln988_fu_2633_p2 = ((out_local_V_reg_3477 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln999_fu_2683_p2 = (($signed(tmp_49_fu_2673_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_1509_p3 = ((icmp_ln580_1_reg_3063[0:0] == 1'b1) ? 32'd0 : select_ln594_1_fu_1501_p3);

assign in_local_V_2_fu_1647_p3 = ((icmp_ln580_2_reg_3104[0:0] == 1'b1) ? 32'd0 : select_ln594_2_fu_1639_p3);

assign in_local_V_3_fu_1785_p3 = ((icmp_ln580_3_reg_3145[0:0] == 1'b1) ? 32'd0 : select_ln594_3_fu_1777_p3);

assign in_local_V_4_fu_1923_p3 = ((icmp_ln580_4_reg_3186[0:0] == 1'b1) ? 32'd0 : select_ln594_4_fu_1915_p3);

assign in_local_V_5_fu_2061_p3 = ((icmp_ln580_5_reg_3227[0:0] == 1'b1) ? 32'd0 : select_ln594_5_fu_2053_p3);

assign in_local_V_6_fu_2199_p3 = ((icmp_ln580_6_reg_3268[0:0] == 1'b1) ? 32'd0 : select_ln594_6_fu_2191_p3);

assign in_local_V_7_fu_2337_p3 = ((icmp_ln580_7_reg_3309[0:0] == 1'b1) ? 32'd0 : select_ln594_7_fu_2329_p3);

assign in_local_V_8_fu_2475_p3 = ((icmp_ln580_8_reg_3350[0:0] == 1'b1) ? 32'd0 : select_ln594_8_fu_2467_p3);

assign in_local_V_9_fu_2613_p3 = ((icmp_ln580_9_reg_3391[0:0] == 1'b1) ? 32'd0 : select_ln594_9_fu_2605_p3);

assign in_local_V_fu_1371_p3 = ((icmp_ln580_reg_3022[0:0] == 1'b1) ? 32'd0 : select_ln594_fu_1363_p3);

assign in_r_TREADY = regslice_both_in_r_V_data_V_U_ack_in;

assign ireg_1_fu_340_p1 = grp_fu_168_p1;

assign ireg_2_fu_440_p1 = grp_fu_171_p1;

assign ireg_3_fu_540_p1 = grp_fu_174_p1;

assign ireg_4_fu_640_p1 = grp_fu_177_p1;

assign ireg_5_fu_740_p1 = grp_fu_180_p1;

assign ireg_6_fu_840_p1 = grp_fu_183_p1;

assign ireg_7_fu_940_p1 = grp_fu_186_p1;

assign ireg_8_fu_1040_p1 = grp_fu_189_p1;

assign ireg_9_fu_1140_p1 = grp_fu_192_p1;

assign ireg_fu_240_p1 = grp_fu_165_p1;


always @ (p_Result_23_fu_2643_p4) begin
    if (p_Result_23_fu_2643_p4[0] == 1'b1) begin
        l_fu_2653_p3 = 32'd0;
    end else if (p_Result_23_fu_2643_p4[1] == 1'b1) begin
        l_fu_2653_p3 = 32'd1;
    end else if (p_Result_23_fu_2643_p4[2] == 1'b1) begin
        l_fu_2653_p3 = 32'd2;
    end else if (p_Result_23_fu_2643_p4[3] == 1'b1) begin
        l_fu_2653_p3 = 32'd3;
    end else if (p_Result_23_fu_2643_p4[4] == 1'b1) begin
        l_fu_2653_p3 = 32'd4;
    end else if (p_Result_23_fu_2643_p4[5] == 1'b1) begin
        l_fu_2653_p3 = 32'd5;
    end else if (p_Result_23_fu_2643_p4[6] == 1'b1) begin
        l_fu_2653_p3 = 32'd6;
    end else if (p_Result_23_fu_2643_p4[7] == 1'b1) begin
        l_fu_2653_p3 = 32'd7;
    end else if (p_Result_23_fu_2643_p4[8] == 1'b1) begin
        l_fu_2653_p3 = 32'd8;
    end else if (p_Result_23_fu_2643_p4[9] == 1'b1) begin
        l_fu_2653_p3 = 32'd9;
    end else if (p_Result_23_fu_2643_p4[10] == 1'b1) begin
        l_fu_2653_p3 = 32'd10;
    end else if (p_Result_23_fu_2643_p4[11] == 1'b1) begin
        l_fu_2653_p3 = 32'd11;
    end else if (p_Result_23_fu_2643_p4[12] == 1'b1) begin
        l_fu_2653_p3 = 32'd12;
    end else if (p_Result_23_fu_2643_p4[13] == 1'b1) begin
        l_fu_2653_p3 = 32'd13;
    end else if (p_Result_23_fu_2643_p4[14] == 1'b1) begin
        l_fu_2653_p3 = 32'd14;
    end else if (p_Result_23_fu_2643_p4[15] == 1'b1) begin
        l_fu_2653_p3 = 32'd15;
    end else if (p_Result_23_fu_2643_p4[16] == 1'b1) begin
        l_fu_2653_p3 = 32'd16;
    end else if (p_Result_23_fu_2643_p4[17] == 1'b1) begin
        l_fu_2653_p3 = 32'd17;
    end else if (p_Result_23_fu_2643_p4[18] == 1'b1) begin
        l_fu_2653_p3 = 32'd18;
    end else if (p_Result_23_fu_2643_p4[19] == 1'b1) begin
        l_fu_2653_p3 = 32'd19;
    end else if (p_Result_23_fu_2643_p4[20] == 1'b1) begin
        l_fu_2653_p3 = 32'd20;
    end else if (p_Result_23_fu_2643_p4[21] == 1'b1) begin
        l_fu_2653_p3 = 32'd21;
    end else if (p_Result_23_fu_2643_p4[22] == 1'b1) begin
        l_fu_2653_p3 = 32'd22;
    end else if (p_Result_23_fu_2643_p4[23] == 1'b1) begin
        l_fu_2653_p3 = 32'd23;
    end else if (p_Result_23_fu_2643_p4[24] == 1'b1) begin
        l_fu_2653_p3 = 32'd24;
    end else if (p_Result_23_fu_2643_p4[25] == 1'b1) begin
        l_fu_2653_p3 = 32'd25;
    end else if (p_Result_23_fu_2643_p4[26] == 1'b1) begin
        l_fu_2653_p3 = 32'd26;
    end else if (p_Result_23_fu_2643_p4[27] == 1'b1) begin
        l_fu_2653_p3 = 32'd27;
    end else if (p_Result_23_fu_2643_p4[28] == 1'b1) begin
        l_fu_2653_p3 = 32'd28;
    end else if (p_Result_23_fu_2643_p4[29] == 1'b1) begin
        l_fu_2653_p3 = 32'd29;
    end else if (p_Result_23_fu_2643_p4[30] == 1'b1) begin
        l_fu_2653_p3 = 32'd30;
    end else if (p_Result_23_fu_2643_p4[31] == 1'b1) begin
        l_fu_2653_p3 = 32'd31;
    end else begin
        l_fu_2653_p3 = 32'd32;
    end
end

assign lsb_index_fu_2667_p2 = ($signed(sub_ln997_fu_2661_p2) + $signed(32'd4294967272));

assign lshr_ln1000_fu_2703_p2 = 32'd4294967295 >> zext_ln1000_fu_2699_p1;

assign lshr_ln1011_fu_2814_p2 = zext_ln1010_fu_2787_p1 >> zext_ln1011_fu_2810_p1;

assign m_2_fu_2830_p2 = (m_fu_2820_p3 + zext_ln1014_fu_2827_p1);

assign m_5_fu_2836_p4 = {{m_2_fu_2830_p2[63:1]}};

assign m_fu_2820_p3 = ((icmp_ln1011_reg_3511[0:0] == 1'b1) ? lshr_ln1011_fu_2814_p2 : shl_ln1012_fu_2799_p2);

assign man_V_10_fu_586_p2 = (54'd0 - zext_ln578_3_fu_582_p1);

assign man_V_11_fu_592_p3 = ((p_Result_8_fu_548_p3[0:0] == 1'b1) ? man_V_10_fu_586_p2 : zext_ln578_3_fu_582_p1);

assign man_V_13_fu_686_p2 = (54'd0 - zext_ln578_4_fu_682_p1);

assign man_V_14_fu_692_p3 = ((p_Result_10_fu_648_p3[0:0] == 1'b1) ? man_V_13_fu_686_p2 : zext_ln578_4_fu_682_p1);

assign man_V_16_fu_786_p2 = (54'd0 - zext_ln578_5_fu_782_p1);

assign man_V_17_fu_792_p3 = ((p_Result_12_fu_748_p3[0:0] == 1'b1) ? man_V_16_fu_786_p2 : zext_ln578_5_fu_782_p1);

assign man_V_19_fu_886_p2 = (54'd0 - zext_ln578_6_fu_882_p1);

assign man_V_1_fu_286_p2 = (54'd0 - zext_ln578_fu_282_p1);

assign man_V_20_fu_892_p3 = ((p_Result_14_fu_848_p3[0:0] == 1'b1) ? man_V_19_fu_886_p2 : zext_ln578_6_fu_882_p1);

assign man_V_22_fu_986_p2 = (54'd0 - zext_ln578_7_fu_982_p1);

assign man_V_23_fu_992_p3 = ((p_Result_16_fu_948_p3[0:0] == 1'b1) ? man_V_22_fu_986_p2 : zext_ln578_7_fu_982_p1);

assign man_V_25_fu_1086_p2 = (54'd0 - zext_ln578_8_fu_1082_p1);

assign man_V_26_fu_1092_p3 = ((p_Result_18_fu_1048_p3[0:0] == 1'b1) ? man_V_25_fu_1086_p2 : zext_ln578_8_fu_1082_p1);

assign man_V_28_fu_1186_p2 = (54'd0 - zext_ln578_9_fu_1182_p1);

assign man_V_29_fu_1192_p3 = ((p_Result_20_fu_1148_p3[0:0] == 1'b1) ? man_V_28_fu_1186_p2 : zext_ln578_9_fu_1182_p1);

assign man_V_2_fu_292_p3 = ((p_Result_2_fu_248_p3[0:0] == 1'b1) ? man_V_1_fu_286_p2 : zext_ln578_fu_282_p1);

assign man_V_4_fu_386_p2 = (54'd0 - zext_ln578_1_fu_382_p1);

assign man_V_5_fu_392_p3 = ((p_Result_4_fu_348_p3[0:0] == 1'b1) ? man_V_4_fu_386_p2 : zext_ln578_1_fu_382_p1);

assign man_V_7_fu_486_p2 = (54'd0 - zext_ln578_2_fu_482_p1);

assign man_V_8_fu_492_p3 = ((p_Result_6_fu_448_p3[0:0] == 1'b1) ? man_V_7_fu_486_p2 : zext_ln578_2_fu_482_p1);

assign or_ln1002_1_fu_2715_p2 = (shl_ln1002_fu_2709_p2 | lshr_ln1000_fu_2703_p2);

assign or_ln590_1_fu_1471_p2 = (or_ln591_1_fu_1467_p2 | icmp_ln590_1_reg_3070);

assign or_ln590_2_fu_1609_p2 = (or_ln591_2_fu_1605_p2 | icmp_ln590_2_reg_3111);

assign or_ln590_3_fu_1747_p2 = (or_ln591_3_fu_1743_p2 | icmp_ln590_3_reg_3152);

assign or_ln590_4_fu_1885_p2 = (or_ln591_4_fu_1881_p2 | icmp_ln590_4_reg_3193);

assign or_ln590_5_fu_2023_p2 = (or_ln591_5_fu_2019_p2 | icmp_ln590_5_reg_3234);

assign or_ln590_6_fu_2161_p2 = (or_ln591_6_fu_2157_p2 | icmp_ln590_6_reg_3275);

assign or_ln590_7_fu_2299_p2 = (or_ln591_7_fu_2295_p2 | icmp_ln590_7_reg_3316);

assign or_ln590_8_fu_2437_p2 = (or_ln591_8_fu_2433_p2 | icmp_ln590_8_reg_3357);

assign or_ln590_9_fu_2575_p2 = (or_ln591_9_fu_2571_p2 | icmp_ln590_9_reg_3398);

assign or_ln590_fu_1333_p2 = (or_ln591_fu_1329_p2 | icmp_ln590_reg_3029);

assign or_ln591_1_fu_1467_p2 = (icmp_ln591_1_reg_3087 | icmp_ln580_1_reg_3063);

assign or_ln591_2_fu_1605_p2 = (icmp_ln591_2_reg_3128 | icmp_ln580_2_reg_3104);

assign or_ln591_3_fu_1743_p2 = (icmp_ln591_3_reg_3169 | icmp_ln580_3_reg_3145);

assign or_ln591_4_fu_1881_p2 = (icmp_ln591_4_reg_3210 | icmp_ln580_4_reg_3186);

assign or_ln591_5_fu_2019_p2 = (icmp_ln591_5_reg_3251 | icmp_ln580_5_reg_3227);

assign or_ln591_6_fu_2157_p2 = (icmp_ln591_6_reg_3292 | icmp_ln580_6_reg_3268);

assign or_ln591_7_fu_2295_p2 = (icmp_ln591_7_reg_3333 | icmp_ln580_7_reg_3309);

assign or_ln591_8_fu_2433_p2 = (icmp_ln591_8_reg_3374 | icmp_ln580_8_reg_3350);

assign or_ln591_9_fu_2571_p2 = (icmp_ln591_9_reg_3415 | icmp_ln580_9_reg_3391);

assign or_ln591_fu_1329_p2 = (icmp_ln591_reg_3046 | icmp_ln580_reg_3022);

assign out_r_TVALID = regslice_both_out_r_V_data_V_U_vld_out;

assign p_Result_10_fu_648_p3 = ireg_4_fu_640_p1[32'd63];

assign p_Result_11_fu_674_p3 = {{1'd1}, {trunc_ln574_4_fu_670_p1}};

assign p_Result_12_fu_748_p3 = ireg_5_fu_740_p1[32'd63];

assign p_Result_13_fu_774_p3 = {{1'd1}, {trunc_ln574_5_fu_770_p1}};

assign p_Result_14_fu_848_p3 = ireg_6_fu_840_p1[32'd63];

assign p_Result_15_fu_874_p3 = {{1'd1}, {trunc_ln574_6_fu_870_p1}};

assign p_Result_16_fu_948_p3 = ireg_7_fu_940_p1[32'd63];

assign p_Result_17_fu_974_p3 = {{1'd1}, {trunc_ln574_7_fu_970_p1}};

assign p_Result_18_fu_1048_p3 = ireg_8_fu_1040_p1[32'd63];

assign p_Result_19_fu_1074_p3 = {{1'd1}, {trunc_ln574_8_fu_1070_p1}};

assign p_Result_20_fu_1148_p3 = ireg_9_fu_1140_p1[32'd63];

assign p_Result_21_fu_1174_p3 = {{1'd1}, {trunc_ln574_9_fu_1170_p1}};

integer ap_tvar_int_0;

always @ (tmp_V_3_fu_2638_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_23_fu_2643_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_2643_p4[ap_tvar_int_0] = tmp_V_3_fu_2638_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_24_fu_2747_p3 = tmp_V_3_fu_2638_p3[lsb_index_fu_2667_p2];

assign p_Result_25_fu_2884_p5 = {{zext_ln1015_fu_2846_p1[63:32]}, {tmp_9_fu_2877_p3}, {zext_ln1015_fu_2846_p1[22:0]}};

assign p_Result_2_fu_248_p3 = ireg_fu_240_p1[32'd63];

assign p_Result_3_fu_274_p3 = {{1'd1}, {trunc_ln574_fu_270_p1}};

assign p_Result_4_fu_348_p3 = ireg_1_fu_340_p1[32'd63];

assign p_Result_5_fu_374_p3 = {{1'd1}, {trunc_ln574_1_fu_370_p1}};

assign p_Result_6_fu_448_p3 = ireg_2_fu_440_p1[32'd63];

assign p_Result_7_fu_474_p3 = {{1'd1}, {trunc_ln574_2_fu_470_p1}};

assign p_Result_8_fu_548_p3 = ireg_3_fu_540_p1[32'd63];

assign p_Result_9_fu_574_p3 = {{1'd1}, {trunc_ln574_3_fu_570_p1}};

assign p_Result_s_fu_2850_p3 = m_2_fu_2830_p2[32'd25];

assign select_ln1011_fu_2775_p3 = ((icmp_ln1011_fu_2755_p2[0:0] == 1'b1) ? select_ln999_fu_2767_p3 : and_ln1002_1_fu_2761_p2);

assign select_ln590_10_fu_2028_p3 = ((or_ln590_5_fu_2023_p2[0:0] == 1'b1) ? select_ln591_5_fu_2012_p3 : select_ln612_5_fu_1966_p3);

assign select_ln590_12_fu_2166_p3 = ((or_ln590_6_fu_2161_p2[0:0] == 1'b1) ? select_ln591_6_fu_2150_p3 : select_ln612_6_fu_2104_p3);

assign select_ln590_14_fu_2304_p3 = ((or_ln590_7_fu_2299_p2[0:0] == 1'b1) ? select_ln591_7_fu_2288_p3 : select_ln612_7_fu_2242_p3);

assign select_ln590_16_fu_2442_p3 = ((or_ln590_8_fu_2437_p2[0:0] == 1'b1) ? select_ln591_8_fu_2426_p3 : select_ln612_8_fu_2380_p3);

assign select_ln590_18_fu_2580_p3 = ((or_ln590_9_fu_2575_p2[0:0] == 1'b1) ? select_ln591_9_fu_2564_p3 : select_ln612_9_fu_2518_p3);

assign select_ln590_2_fu_1476_p3 = ((or_ln590_1_fu_1471_p2[0:0] == 1'b1) ? select_ln591_1_fu_1460_p3 : select_ln612_1_fu_1414_p3);

assign select_ln590_4_fu_1614_p3 = ((or_ln590_2_fu_1609_p2[0:0] == 1'b1) ? select_ln591_2_fu_1598_p3 : select_ln612_2_fu_1552_p3);

assign select_ln590_6_fu_1752_p3 = ((or_ln590_3_fu_1747_p2[0:0] == 1'b1) ? select_ln591_3_fu_1736_p3 : select_ln612_3_fu_1690_p3);

assign select_ln590_8_fu_1890_p3 = ((or_ln590_4_fu_1885_p2[0:0] == 1'b1) ? select_ln591_4_fu_1874_p3 : select_ln612_4_fu_1828_p3);

assign select_ln590_fu_1338_p3 = ((or_ln590_fu_1333_p2[0:0] == 1'b1) ? select_ln591_fu_1322_p3 : select_ln612_fu_1276_p3);

assign select_ln591_1_fu_1460_p3 = ((and_ln591_1_fu_1455_p2[0:0] == 1'b1) ? trunc_ln592_1_reg_3093 : select_ln597_1_fu_1442_p3);

assign select_ln591_2_fu_1598_p3 = ((and_ln591_2_fu_1593_p2[0:0] == 1'b1) ? trunc_ln592_2_reg_3134 : select_ln597_2_fu_1580_p3);

assign select_ln591_3_fu_1736_p3 = ((and_ln591_3_fu_1731_p2[0:0] == 1'b1) ? trunc_ln592_3_reg_3175 : select_ln597_3_fu_1718_p3);

assign select_ln591_4_fu_1874_p3 = ((and_ln591_4_fu_1869_p2[0:0] == 1'b1) ? trunc_ln592_4_reg_3216 : select_ln597_4_fu_1856_p3);

assign select_ln591_5_fu_2012_p3 = ((and_ln591_5_fu_2007_p2[0:0] == 1'b1) ? trunc_ln592_5_reg_3257 : select_ln597_5_fu_1994_p3);

assign select_ln591_6_fu_2150_p3 = ((and_ln591_6_fu_2145_p2[0:0] == 1'b1) ? trunc_ln592_6_reg_3298 : select_ln597_6_fu_2132_p3);

assign select_ln591_7_fu_2288_p3 = ((and_ln591_7_fu_2283_p2[0:0] == 1'b1) ? trunc_ln592_7_reg_3339 : select_ln597_7_fu_2270_p3);

assign select_ln591_8_fu_2426_p3 = ((and_ln591_8_fu_2421_p2[0:0] == 1'b1) ? trunc_ln592_8_reg_3380 : select_ln597_8_fu_2408_p3);

assign select_ln591_9_fu_2564_p3 = ((and_ln591_9_fu_2559_p2[0:0] == 1'b1) ? trunc_ln592_9_reg_3421 : select_ln597_9_fu_2546_p3);

assign select_ln591_fu_1322_p3 = ((and_ln591_fu_1317_p2[0:0] == 1'b1) ? trunc_ln592_reg_3052 : select_ln597_fu_1304_p3);

assign select_ln594_1_fu_1501_p3 = ((and_ln594_3_fu_1496_p2[0:0] == 1'b1) ? trunc_ln595_1_fu_1431_p1 : select_ln590_2_fu_1476_p3);

assign select_ln594_2_fu_1639_p3 = ((and_ln594_5_fu_1634_p2[0:0] == 1'b1) ? trunc_ln595_2_fu_1569_p1 : select_ln590_4_fu_1614_p3);

assign select_ln594_3_fu_1777_p3 = ((and_ln594_7_fu_1772_p2[0:0] == 1'b1) ? trunc_ln595_3_fu_1707_p1 : select_ln590_6_fu_1752_p3);

assign select_ln594_4_fu_1915_p3 = ((and_ln594_9_fu_1910_p2[0:0] == 1'b1) ? trunc_ln595_4_fu_1845_p1 : select_ln590_8_fu_1890_p3);

assign select_ln594_5_fu_2053_p3 = ((and_ln594_11_fu_2048_p2[0:0] == 1'b1) ? trunc_ln595_5_fu_1983_p1 : select_ln590_10_fu_2028_p3);

assign select_ln594_6_fu_2191_p3 = ((and_ln594_13_fu_2186_p2[0:0] == 1'b1) ? trunc_ln595_6_fu_2121_p1 : select_ln590_12_fu_2166_p3);

assign select_ln594_7_fu_2329_p3 = ((and_ln594_15_fu_2324_p2[0:0] == 1'b1) ? trunc_ln595_7_fu_2259_p1 : select_ln590_14_fu_2304_p3);

assign select_ln594_8_fu_2467_p3 = ((and_ln594_17_fu_2462_p2[0:0] == 1'b1) ? trunc_ln595_8_fu_2397_p1 : select_ln590_16_fu_2442_p3);

assign select_ln594_9_fu_2605_p3 = ((and_ln594_19_fu_2600_p2[0:0] == 1'b1) ? trunc_ln595_9_fu_2535_p1 : select_ln590_18_fu_2580_p3);

assign select_ln594_fu_1363_p3 = ((and_ln594_1_fu_1358_p2[0:0] == 1'b1) ? trunc_ln595_fu_1293_p1 : select_ln590_fu_1338_p3);

assign select_ln597_1_fu_1442_p3 = ((tmp_15_fu_1435_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_2_fu_1580_p3 = ((tmp_19_fu_1573_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_3_fu_1718_p3 = ((tmp_23_fu_1711_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_4_fu_1856_p3 = ((tmp_27_fu_1849_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_5_fu_1994_p3 = ((tmp_31_fu_1987_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_6_fu_2132_p3 = ((tmp_35_fu_2125_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_7_fu_2270_p3 = ((tmp_39_fu_2263_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_8_fu_2408_p3 = ((tmp_43_fu_2401_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_9_fu_2546_p3 = ((tmp_47_fu_2539_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_fu_1304_p3 = ((tmp_11_fu_1297_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_1_fu_1414_p3 = ((icmp_ln612_1_fu_1403_p2[0:0] == 1'b1) ? shl_ln613_1_fu_1409_p2 : 32'd0);

assign select_ln612_2_fu_1552_p3 = ((icmp_ln612_2_fu_1541_p2[0:0] == 1'b1) ? shl_ln613_2_fu_1547_p2 : 32'd0);

assign select_ln612_3_fu_1690_p3 = ((icmp_ln612_3_fu_1679_p2[0:0] == 1'b1) ? shl_ln613_3_fu_1685_p2 : 32'd0);

assign select_ln612_4_fu_1828_p3 = ((icmp_ln612_4_fu_1817_p2[0:0] == 1'b1) ? shl_ln613_4_fu_1823_p2 : 32'd0);

assign select_ln612_5_fu_1966_p3 = ((icmp_ln612_5_fu_1955_p2[0:0] == 1'b1) ? shl_ln613_5_fu_1961_p2 : 32'd0);

assign select_ln612_6_fu_2104_p3 = ((icmp_ln612_6_fu_2093_p2[0:0] == 1'b1) ? shl_ln613_6_fu_2099_p2 : 32'd0);

assign select_ln612_7_fu_2242_p3 = ((icmp_ln612_7_fu_2231_p2[0:0] == 1'b1) ? shl_ln613_7_fu_2237_p2 : 32'd0);

assign select_ln612_8_fu_2380_p3 = ((icmp_ln612_8_fu_2369_p2[0:0] == 1'b1) ? shl_ln613_8_fu_2375_p2 : 32'd0);

assign select_ln612_9_fu_2518_p3 = ((icmp_ln612_9_fu_2507_p2[0:0] == 1'b1) ? shl_ln613_9_fu_2513_p2 : 32'd0);

assign select_ln612_fu_1276_p3 = ((icmp_ln612_fu_1265_p2[0:0] == 1'b1) ? shl_ln613_fu_1271_p2 : 32'd0);

assign select_ln988_fu_2900_p3 = ((icmp_ln988_reg_3495[0:0] == 1'b1) ? 32'd0 : LD_10_fu_2896_p1);

assign select_ln996_fu_2858_p3 = ((p_Result_s_fu_2850_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln999_fu_2767_p3 = ((icmp_ln999_fu_2683_p2[0:0] == 1'b1) ? icmp_ln1002_fu_2727_p2 : p_Result_24_fu_2747_p3);

assign sext_ln590_1_fu_1383_p1 = sh_amt_1_fu_1378_p3;

assign sext_ln590_2_fu_1521_p1 = sh_amt_2_fu_1516_p3;

assign sext_ln590_3_fu_1659_p1 = sh_amt_3_fu_1654_p3;

assign sext_ln590_4_fu_1797_p1 = sh_amt_4_fu_1792_p3;

assign sext_ln590_5_fu_1935_p1 = sh_amt_5_fu_1930_p3;

assign sext_ln590_6_fu_2073_p1 = sh_amt_6_fu_2068_p3;

assign sext_ln590_7_fu_2211_p1 = sh_amt_7_fu_2206_p3;

assign sext_ln590_8_fu_2349_p1 = sh_amt_8_fu_2344_p3;

assign sext_ln590_9_fu_2487_p1 = sh_amt_9_fu_2482_p3;

assign sext_ln590_fu_1245_p1 = sh_amt_fu_1240_p3;

assign sh_amt_1_fu_1378_p3 = ((icmp_ln590_1_reg_3070[0:0] == 1'b1) ? add_ln590_1_reg_3077 : sub_ln590_1_reg_3082);

assign sh_amt_2_fu_1516_p3 = ((icmp_ln590_2_reg_3111[0:0] == 1'b1) ? add_ln590_2_reg_3118 : sub_ln590_2_reg_3123);

assign sh_amt_3_fu_1654_p3 = ((icmp_ln590_3_reg_3152[0:0] == 1'b1) ? add_ln590_3_reg_3159 : sub_ln590_3_reg_3164);

assign sh_amt_4_fu_1792_p3 = ((icmp_ln590_4_reg_3193[0:0] == 1'b1) ? add_ln590_4_reg_3200 : sub_ln590_4_reg_3205);

assign sh_amt_5_fu_1930_p3 = ((icmp_ln590_5_reg_3234[0:0] == 1'b1) ? add_ln590_5_reg_3241 : sub_ln590_5_reg_3246);

assign sh_amt_6_fu_2068_p3 = ((icmp_ln590_6_reg_3275[0:0] == 1'b1) ? add_ln590_6_reg_3282 : sub_ln590_6_reg_3287);

assign sh_amt_7_fu_2206_p3 = ((icmp_ln590_7_reg_3316[0:0] == 1'b1) ? add_ln590_7_reg_3323 : sub_ln590_7_reg_3328);

assign sh_amt_8_fu_2344_p3 = ((icmp_ln590_8_reg_3357[0:0] == 1'b1) ? add_ln590_8_reg_3364 : sub_ln590_8_reg_3369);

assign sh_amt_9_fu_2482_p3 = ((icmp_ln590_9_reg_3398[0:0] == 1'b1) ? add_ln590_9_reg_3405 : sub_ln590_9_reg_3410);

assign sh_amt_fu_1240_p3 = ((icmp_ln590_reg_3029[0:0] == 1'b1) ? add_ln590_reg_3036 : sub_ln590_reg_3041);

assign shl_ln1002_fu_2709_p2 = 32'd1 << lsb_index_fu_2667_p2;

assign shl_ln1012_fu_2799_p2 = zext_ln1010_fu_2787_p1 << zext_ln1012_fu_2795_p1;

assign shl_ln613_1_fu_1409_p2 = trunc_ln592_1_reg_3093 << sext_ln590_1_fu_1383_p1;

assign shl_ln613_2_fu_1547_p2 = trunc_ln592_2_reg_3134 << sext_ln590_2_fu_1521_p1;

assign shl_ln613_3_fu_1685_p2 = trunc_ln592_3_reg_3175 << sext_ln590_3_fu_1659_p1;

assign shl_ln613_4_fu_1823_p2 = trunc_ln592_4_reg_3216 << sext_ln590_4_fu_1797_p1;

assign shl_ln613_5_fu_1961_p2 = trunc_ln592_5_reg_3257 << sext_ln590_5_fu_1935_p1;

assign shl_ln613_6_fu_2099_p2 = trunc_ln592_6_reg_3298 << sext_ln590_6_fu_2073_p1;

assign shl_ln613_7_fu_2237_p2 = trunc_ln592_7_reg_3339 << sext_ln590_7_fu_2211_p1;

assign shl_ln613_8_fu_2375_p2 = trunc_ln592_8_reg_3380 << sext_ln590_8_fu_2349_p1;

assign shl_ln613_9_fu_2513_p2 = trunc_ln592_9_reg_3421 << sext_ln590_9_fu_2487_p1;

assign shl_ln613_fu_1271_p2 = trunc_ln592_reg_3052 << sext_ln590_fu_1245_p1;

assign sub_ln1000_fu_2693_p2 = ($signed(6'd57) - $signed(trunc_ln1000_fu_2689_p1));

assign sub_ln1012_fu_2790_p2 = (32'd25 - sub_ln997_reg_3505);

assign sub_ln1017_fu_2866_p2 = (8'd16 - trunc_ln996_reg_3521);

assign sub_ln590_1_fu_424_p2 = (12'd16 - F2_1_fu_406_p2);

assign sub_ln590_2_fu_524_p2 = (12'd16 - F2_2_fu_506_p2);

assign sub_ln590_3_fu_624_p2 = (12'd16 - F2_3_fu_606_p2);

assign sub_ln590_4_fu_724_p2 = (12'd16 - F2_4_fu_706_p2);

assign sub_ln590_5_fu_824_p2 = (12'd16 - F2_5_fu_806_p2);

assign sub_ln590_6_fu_924_p2 = (12'd16 - F2_6_fu_906_p2);

assign sub_ln590_7_fu_1024_p2 = (12'd16 - F2_7_fu_1006_p2);

assign sub_ln590_8_fu_1124_p2 = (12'd16 - F2_8_fu_1106_p2);

assign sub_ln590_9_fu_1224_p2 = (12'd16 - F2_9_fu_1206_p2);

assign sub_ln590_fu_324_p2 = (12'd16 - F2_fu_306_p2);

assign sub_ln997_fu_2661_p2 = (32'd32 - l_fu_2653_p3);

assign tmp_11_fu_1297_p3 = p_0_reg_2908[32'd31];

assign tmp_14_fu_1393_p4 = {{sh_amt_1_fu_1378_p3[11:5]}};

assign tmp_15_fu_1435_p3 = p_s_reg_2914[32'd31];

assign tmp_18_fu_1531_p4 = {{sh_amt_2_fu_1516_p3[11:5]}};

assign tmp_19_fu_1573_p3 = p_1_reg_2920[32'd31];

assign tmp_22_fu_1669_p4 = {{sh_amt_3_fu_1654_p3[11:5]}};

assign tmp_23_fu_1711_p3 = p_2_reg_2926[32'd31];

assign tmp_26_fu_1807_p4 = {{sh_amt_4_fu_1792_p3[11:5]}};

assign tmp_27_fu_1849_p3 = p_3_reg_2932[32'd31];

assign tmp_30_fu_1945_p4 = {{sh_amt_5_fu_1930_p3[11:5]}};

assign tmp_31_fu_1987_p3 = p_4_reg_2938[32'd31];

assign tmp_34_fu_2083_p4 = {{sh_amt_6_fu_2068_p3[11:5]}};

assign tmp_35_fu_2125_p3 = p_5_reg_2944[32'd31];

assign tmp_38_fu_2221_p4 = {{sh_amt_7_fu_2206_p3[11:5]}};

assign tmp_39_fu_2263_p3 = p_6_reg_2950[32'd31];

assign tmp_42_fu_2359_p4 = {{sh_amt_8_fu_2344_p3[11:5]}};

assign tmp_43_fu_2401_p3 = p_7_reg_2956[32'd31];

assign tmp_46_fu_2497_p4 = {{sh_amt_9_fu_2482_p3[11:5]}};

assign tmp_47_fu_2539_p3 = p_8_reg_3007[32'd31];

assign tmp_49_fu_2673_p4 = {{lsb_index_fu_2667_p2[31:1]}};

assign tmp_50_fu_2733_p3 = lsb_index_fu_2667_p2[32'd31];

assign tmp_9_fu_2877_p3 = {{p_Result_22_reg_3484}, {add_ln1017_fu_2871_p2}};

assign tmp_V_3_fu_2638_p3 = ((p_Result_22_reg_3484[0:0] == 1'b1) ? tmp_V_reg_3490 : out_local_V_reg_3477);

assign tmp_V_fu_2628_p2 = (32'd0 - out_local_V_reg_3477);

assign tmp_fu_1255_p4 = {{sh_amt_fu_1240_p3[11:5]}};

assign trunc_ln1000_fu_2689_p1 = sub_ln997_fu_2661_p2[5:0];

assign trunc_ln564_1_fu_344_p1 = ireg_1_fu_340_p1[62:0];

assign trunc_ln564_2_fu_444_p1 = ireg_2_fu_440_p1[62:0];

assign trunc_ln564_3_fu_544_p1 = ireg_3_fu_540_p1[62:0];

assign trunc_ln564_4_fu_644_p1 = ireg_4_fu_640_p1[62:0];

assign trunc_ln564_5_fu_744_p1 = ireg_5_fu_740_p1[62:0];

assign trunc_ln564_6_fu_844_p1 = ireg_6_fu_840_p1[62:0];

assign trunc_ln564_7_fu_944_p1 = ireg_7_fu_940_p1[62:0];

assign trunc_ln564_8_fu_1044_p1 = ireg_8_fu_1040_p1[62:0];

assign trunc_ln564_9_fu_1144_p1 = ireg_9_fu_1140_p1[62:0];

assign trunc_ln564_fu_244_p1 = ireg_fu_240_p1[62:0];

assign trunc_ln574_1_fu_370_p1 = ireg_1_fu_340_p1[51:0];

assign trunc_ln574_2_fu_470_p1 = ireg_2_fu_440_p1[51:0];

assign trunc_ln574_3_fu_570_p1 = ireg_3_fu_540_p1[51:0];

assign trunc_ln574_4_fu_670_p1 = ireg_4_fu_640_p1[51:0];

assign trunc_ln574_5_fu_770_p1 = ireg_5_fu_740_p1[51:0];

assign trunc_ln574_6_fu_870_p1 = ireg_6_fu_840_p1[51:0];

assign trunc_ln574_7_fu_970_p1 = ireg_7_fu_940_p1[51:0];

assign trunc_ln574_8_fu_1070_p1 = ireg_8_fu_1040_p1[51:0];

assign trunc_ln574_9_fu_1170_p1 = ireg_9_fu_1140_p1[51:0];

assign trunc_ln574_fu_270_p1 = ireg_fu_240_p1[51:0];

assign trunc_ln592_1_fu_436_p1 = man_V_5_fu_392_p3[31:0];

assign trunc_ln592_2_fu_536_p1 = man_V_8_fu_492_p3[31:0];

assign trunc_ln592_3_fu_636_p1 = man_V_11_fu_592_p3[31:0];

assign trunc_ln592_4_fu_736_p1 = man_V_14_fu_692_p3[31:0];

assign trunc_ln592_5_fu_836_p1 = man_V_17_fu_792_p3[31:0];

assign trunc_ln592_6_fu_936_p1 = man_V_20_fu_892_p3[31:0];

assign trunc_ln592_7_fu_1036_p1 = man_V_23_fu_992_p3[31:0];

assign trunc_ln592_8_fu_1136_p1 = man_V_26_fu_1092_p3[31:0];

assign trunc_ln592_9_fu_1236_p1 = man_V_29_fu_1192_p3[31:0];

assign trunc_ln592_fu_336_p1 = man_V_2_fu_292_p3[31:0];

assign trunc_ln595_1_fu_1431_p1 = ashr_ln595_1_fu_1426_p2[31:0];

assign trunc_ln595_2_fu_1569_p1 = ashr_ln595_2_fu_1564_p2[31:0];

assign trunc_ln595_3_fu_1707_p1 = ashr_ln595_3_fu_1702_p2[31:0];

assign trunc_ln595_4_fu_1845_p1 = ashr_ln595_4_fu_1840_p2[31:0];

assign trunc_ln595_5_fu_1983_p1 = ashr_ln595_5_fu_1978_p2[31:0];

assign trunc_ln595_6_fu_2121_p1 = ashr_ln595_6_fu_2116_p2[31:0];

assign trunc_ln595_7_fu_2259_p1 = ashr_ln595_7_fu_2254_p2[31:0];

assign trunc_ln595_8_fu_2397_p1 = ashr_ln595_8_fu_2392_p2[31:0];

assign trunc_ln595_9_fu_2535_p1 = ashr_ln595_9_fu_2530_p2[31:0];

assign trunc_ln595_fu_1293_p1 = ashr_ln595_fu_1288_p2[31:0];

assign trunc_ln996_fu_2783_p1 = l_fu_2653_p3[7:0];

assign xor_ln1002_fu_2741_p2 = (tmp_50_fu_2733_p3 ^ 1'd1);

assign xor_ln580_1_fu_1450_p2 = (icmp_ln580_1_reg_3063 ^ 1'd1);

assign xor_ln580_2_fu_1588_p2 = (icmp_ln580_2_reg_3104 ^ 1'd1);

assign xor_ln580_3_fu_1726_p2 = (icmp_ln580_3_reg_3145 ^ 1'd1);

assign xor_ln580_4_fu_1864_p2 = (icmp_ln580_4_reg_3186 ^ 1'd1);

assign xor_ln580_5_fu_2002_p2 = (icmp_ln580_5_reg_3227 ^ 1'd1);

assign xor_ln580_6_fu_2140_p2 = (icmp_ln580_6_reg_3268 ^ 1'd1);

assign xor_ln580_7_fu_2278_p2 = (icmp_ln580_7_reg_3309 ^ 1'd1);

assign xor_ln580_8_fu_2416_p2 = (icmp_ln580_8_reg_3350 ^ 1'd1);

assign xor_ln580_9_fu_2554_p2 = (icmp_ln580_9_reg_3391 ^ 1'd1);

assign xor_ln580_fu_1312_p2 = (icmp_ln580_reg_3022 ^ 1'd1);

assign xor_ln591_1_fu_1484_p2 = (or_ln591_1_fu_1467_p2 ^ 1'd1);

assign xor_ln591_2_fu_1622_p2 = (or_ln591_2_fu_1605_p2 ^ 1'd1);

assign xor_ln591_3_fu_1760_p2 = (or_ln591_3_fu_1743_p2 ^ 1'd1);

assign xor_ln591_4_fu_1898_p2 = (or_ln591_4_fu_1881_p2 ^ 1'd1);

assign xor_ln591_5_fu_2036_p2 = (or_ln591_5_fu_2019_p2 ^ 1'd1);

assign xor_ln591_6_fu_2174_p2 = (or_ln591_6_fu_2157_p2 ^ 1'd1);

assign xor_ln591_7_fu_2312_p2 = (or_ln591_7_fu_2295_p2 ^ 1'd1);

assign xor_ln591_8_fu_2450_p2 = (or_ln591_8_fu_2433_p2 ^ 1'd1);

assign xor_ln591_9_fu_2588_p2 = (or_ln591_9_fu_2571_p2 ^ 1'd1);

assign xor_ln591_fu_1346_p2 = (or_ln591_fu_1329_p2 ^ 1'd1);

assign zext_ln1000_fu_2699_p1 = sub_ln1000_fu_2693_p2;

assign zext_ln1010_fu_2787_p1 = tmp_V_3_reg_3500;

assign zext_ln1011_fu_2810_p1 = add_ln1011_fu_2805_p2;

assign zext_ln1012_fu_2795_p1 = sub_ln1012_fu_2790_p2;

assign zext_ln1014_fu_2827_p1 = select_ln1011_reg_3516;

assign zext_ln1015_fu_2846_p1 = m_5_fu_2836_p4;

assign zext_ln501_1_fu_366_p1 = exp_tmp_1_fu_356_p4;

assign zext_ln501_2_fu_466_p1 = exp_tmp_2_fu_456_p4;

assign zext_ln501_3_fu_566_p1 = exp_tmp_3_fu_556_p4;

assign zext_ln501_4_fu_666_p1 = exp_tmp_4_fu_656_p4;

assign zext_ln501_5_fu_766_p1 = exp_tmp_5_fu_756_p4;

assign zext_ln501_6_fu_866_p1 = exp_tmp_6_fu_856_p4;

assign zext_ln501_7_fu_966_p1 = exp_tmp_7_fu_956_p4;

assign zext_ln501_8_fu_1066_p1 = exp_tmp_8_fu_1056_p4;

assign zext_ln501_9_fu_1166_p1 = exp_tmp_9_fu_1156_p4;

assign zext_ln501_fu_266_p1 = exp_tmp_fu_256_p4;

assign zext_ln578_1_fu_382_p1 = p_Result_5_fu_374_p3;

assign zext_ln578_2_fu_482_p1 = p_Result_7_fu_474_p3;

assign zext_ln578_3_fu_582_p1 = p_Result_9_fu_574_p3;

assign zext_ln578_4_fu_682_p1 = p_Result_11_fu_674_p3;

assign zext_ln578_5_fu_782_p1 = p_Result_13_fu_774_p3;

assign zext_ln578_6_fu_882_p1 = p_Result_15_fu_874_p3;

assign zext_ln578_7_fu_982_p1 = p_Result_17_fu_974_p3;

assign zext_ln578_8_fu_1082_p1 = p_Result_19_fu_1074_p3;

assign zext_ln578_9_fu_1182_p1 = p_Result_21_fu_1174_p3;

assign zext_ln578_fu_282_p1 = p_Result_3_fu_274_p3;

assign zext_ln595_1_fu_1422_p1 = $unsigned(sext_ln590_1_fu_1383_p1);

assign zext_ln595_2_fu_1560_p1 = $unsigned(sext_ln590_2_fu_1521_p1);

assign zext_ln595_3_fu_1698_p1 = $unsigned(sext_ln590_3_fu_1659_p1);

assign zext_ln595_4_fu_1836_p1 = $unsigned(sext_ln590_4_fu_1797_p1);

assign zext_ln595_5_fu_1974_p1 = $unsigned(sext_ln590_5_fu_1935_p1);

assign zext_ln595_6_fu_2112_p1 = $unsigned(sext_ln590_6_fu_2073_p1);

assign zext_ln595_7_fu_2250_p1 = $unsigned(sext_ln590_7_fu_2211_p1);

assign zext_ln595_8_fu_2388_p1 = $unsigned(sext_ln590_8_fu_2349_p1);

assign zext_ln595_9_fu_2526_p1 = $unsigned(sext_ln590_9_fu_2487_p1);

assign zext_ln595_fu_1284_p1 = $unsigned(sext_ln590_fu_1245_p1);


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "myproject_axi_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //myproject_axi

