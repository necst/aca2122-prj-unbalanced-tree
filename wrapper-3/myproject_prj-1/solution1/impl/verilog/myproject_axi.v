// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.971116,HLS_SYN_LAT=25,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1947,HLS_SYN_LUT=9672,HLS_VERSION=2020_2}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TLAST
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TLAST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
reg   [31:0] reg_263;
reg   [31:0] in_V_data_V_val_reg_3379;
reg   [0:0] in_struct_last_V_9_reg_3385;
reg   [31:0] in_V_data_V_val2_reg_3390;
reg   [0:0] in_struct_last_V_reg_3396;
reg   [31:0] in_V_data_V_val6_reg_3401;
reg   [0:0] in_struct_last_V_1_reg_3407;
reg   [31:0] in_V_data_V_val1_reg_3412;
reg   [0:0] in_struct_last_V_2_reg_3418;
reg   [31:0] in_V_data_V_val3_reg_3423;
reg   [0:0] in_struct_last_V_3_reg_3429;
reg   [31:0] in_V_data_V_val4_reg_3434;
reg   [0:0] in_struct_last_V_4_reg_3440;
reg   [31:0] in_V_data_V_val5_reg_3445;
reg   [0:0] in_struct_last_V_5_reg_3451;
reg   [0:0] in_struct_last_V_6_reg_3456;
wire   [31:0] in_struct_data_7_fu_267_p1;
wire   [53:0] man_V_23_fu_324_p3;
reg   [53:0] man_V_23_reg_3466;
wire   [0:0] icmp_ln571_7_fu_332_p2;
reg   [0:0] icmp_ln571_7_reg_3471;
wire   [0:0] icmp_ln581_7_fu_344_p2;
reg   [0:0] icmp_ln581_7_reg_3479;
wire   [11:0] add_ln581_7_fu_350_p2;
reg   [11:0] add_ln581_7_reg_3486;
wire   [11:0] sub_ln581_7_fu_356_p2;
reg   [11:0] sub_ln581_7_reg_3491;
wire   [0:0] icmp_ln582_7_fu_362_p2;
reg   [0:0] icmp_ln582_7_reg_3496;
wire   [31:0] trunc_ln583_7_fu_368_p1;
reg   [31:0] trunc_ln583_7_reg_3502;
reg   [31:0] in_V_data_V_val8_reg_3508;
reg   [0:0] in_struct_last_V_7_reg_3514;
wire   [31:0] in_struct_data_fu_372_p1;
wire   [31:0] in_local_V_7_fu_554_p3;
reg   [31:0] in_local_V_7_reg_3554;
reg   [0:0] in_struct_last_V_8_reg_3564;
wire   [53:0] man_V_2_fu_623_p3;
reg   [53:0] man_V_2_reg_3574;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln571_fu_631_p2;
reg   [0:0] icmp_ln571_reg_3579;
wire   [0:0] icmp_ln581_fu_643_p2;
reg   [0:0] icmp_ln581_reg_3587;
wire   [11:0] add_ln581_fu_649_p2;
reg   [11:0] add_ln581_reg_3594;
wire   [11:0] sub_ln581_fu_655_p2;
reg   [11:0] sub_ln581_reg_3599;
wire   [0:0] icmp_ln582_fu_661_p2;
reg   [0:0] icmp_ln582_reg_3604;
wire   [31:0] trunc_ln583_fu_667_p1;
reg   [31:0] trunc_ln583_reg_3610;
wire   [53:0] man_V_5_fu_723_p3;
reg   [53:0] man_V_5_reg_3616;
wire   [0:0] icmp_ln571_1_fu_731_p2;
reg   [0:0] icmp_ln571_1_reg_3621;
wire   [0:0] icmp_ln581_1_fu_743_p2;
reg   [0:0] icmp_ln581_1_reg_3629;
wire   [11:0] add_ln581_1_fu_749_p2;
reg   [11:0] add_ln581_1_reg_3636;
wire   [11:0] sub_ln581_1_fu_755_p2;
reg   [11:0] sub_ln581_1_reg_3641;
wire   [0:0] icmp_ln582_1_fu_761_p2;
reg   [0:0] icmp_ln582_1_reg_3646;
wire   [31:0] trunc_ln583_1_fu_767_p1;
reg   [31:0] trunc_ln583_1_reg_3652;
wire   [53:0] man_V_8_fu_823_p3;
reg   [53:0] man_V_8_reg_3658;
wire   [0:0] icmp_ln571_2_fu_831_p2;
reg   [0:0] icmp_ln571_2_reg_3663;
wire   [0:0] icmp_ln581_2_fu_843_p2;
reg   [0:0] icmp_ln581_2_reg_3671;
wire   [11:0] add_ln581_2_fu_849_p2;
reg   [11:0] add_ln581_2_reg_3678;
wire   [11:0] sub_ln581_2_fu_855_p2;
reg   [11:0] sub_ln581_2_reg_3683;
wire   [0:0] icmp_ln582_2_fu_861_p2;
reg   [0:0] icmp_ln582_2_reg_3688;
wire   [31:0] trunc_ln583_2_fu_867_p1;
reg   [31:0] trunc_ln583_2_reg_3694;
wire   [53:0] man_V_11_fu_923_p3;
reg   [53:0] man_V_11_reg_3700;
wire   [0:0] icmp_ln571_3_fu_931_p2;
reg   [0:0] icmp_ln571_3_reg_3705;
wire   [0:0] icmp_ln581_3_fu_943_p2;
reg   [0:0] icmp_ln581_3_reg_3713;
wire   [11:0] add_ln581_3_fu_949_p2;
reg   [11:0] add_ln581_3_reg_3720;
wire   [11:0] sub_ln581_3_fu_955_p2;
reg   [11:0] sub_ln581_3_reg_3725;
wire   [0:0] icmp_ln582_3_fu_961_p2;
reg   [0:0] icmp_ln582_3_reg_3730;
wire   [31:0] trunc_ln583_3_fu_967_p1;
reg   [31:0] trunc_ln583_3_reg_3736;
wire   [53:0] man_V_14_fu_1023_p3;
reg   [53:0] man_V_14_reg_3742;
wire   [0:0] icmp_ln571_4_fu_1031_p2;
reg   [0:0] icmp_ln571_4_reg_3747;
wire   [0:0] icmp_ln581_4_fu_1043_p2;
reg   [0:0] icmp_ln581_4_reg_3755;
wire   [11:0] add_ln581_4_fu_1049_p2;
reg   [11:0] add_ln581_4_reg_3762;
wire   [11:0] sub_ln581_4_fu_1055_p2;
reg   [11:0] sub_ln581_4_reg_3767;
wire   [0:0] icmp_ln582_4_fu_1061_p2;
reg   [0:0] icmp_ln582_4_reg_3772;
wire   [31:0] trunc_ln583_4_fu_1067_p1;
reg   [31:0] trunc_ln583_4_reg_3778;
wire   [53:0] man_V_17_fu_1123_p3;
reg   [53:0] man_V_17_reg_3784;
wire   [0:0] icmp_ln571_5_fu_1131_p2;
reg   [0:0] icmp_ln571_5_reg_3789;
wire   [0:0] icmp_ln581_5_fu_1143_p2;
reg   [0:0] icmp_ln581_5_reg_3797;
wire   [11:0] add_ln581_5_fu_1149_p2;
reg   [11:0] add_ln581_5_reg_3804;
wire   [11:0] sub_ln581_5_fu_1155_p2;
reg   [11:0] sub_ln581_5_reg_3809;
wire   [0:0] icmp_ln582_5_fu_1161_p2;
reg   [0:0] icmp_ln582_5_reg_3814;
wire   [31:0] trunc_ln583_5_fu_1167_p1;
reg   [31:0] trunc_ln583_5_reg_3820;
wire   [53:0] man_V_20_fu_1223_p3;
reg   [53:0] man_V_20_reg_3826;
wire   [0:0] icmp_ln571_6_fu_1231_p2;
reg   [0:0] icmp_ln571_6_reg_3831;
wire   [0:0] icmp_ln581_6_fu_1243_p2;
reg   [0:0] icmp_ln581_6_reg_3839;
wire   [11:0] add_ln581_6_fu_1249_p2;
reg   [11:0] add_ln581_6_reg_3846;
wire   [11:0] sub_ln581_6_fu_1255_p2;
reg   [11:0] sub_ln581_6_reg_3851;
wire   [0:0] icmp_ln582_6_fu_1261_p2;
reg   [0:0] icmp_ln582_6_reg_3856;
wire   [31:0] trunc_ln583_6_fu_1267_p1;
reg   [31:0] trunc_ln583_6_reg_3862;
wire   [53:0] man_V_26_fu_1323_p3;
reg   [53:0] man_V_26_reg_3868;
wire   [0:0] icmp_ln571_8_fu_1331_p2;
reg   [0:0] icmp_ln571_8_reg_3873;
wire   [0:0] icmp_ln581_8_fu_1343_p2;
reg   [0:0] icmp_ln581_8_reg_3881;
wire   [11:0] add_ln581_8_fu_1349_p2;
reg   [11:0] add_ln581_8_reg_3888;
wire   [11:0] sub_ln581_8_fu_1355_p2;
reg   [11:0] sub_ln581_8_reg_3893;
wire   [0:0] icmp_ln582_8_fu_1361_p2;
reg   [0:0] icmp_ln582_8_reg_3898;
wire   [31:0] trunc_ln583_8_fu_1367_p1;
reg   [31:0] trunc_ln583_8_reg_3904;
wire   [53:0] man_V_29_fu_1423_p3;
reg   [53:0] man_V_29_reg_3910;
wire   [0:0] icmp_ln571_9_fu_1431_p2;
reg   [0:0] icmp_ln571_9_reg_3915;
wire   [0:0] icmp_ln581_9_fu_1443_p2;
reg   [0:0] icmp_ln581_9_reg_3923;
wire   [11:0] add_ln581_9_fu_1449_p2;
reg   [11:0] add_ln581_9_reg_3930;
wire   [11:0] sub_ln581_9_fu_1455_p2;
reg   [11:0] sub_ln581_9_reg_3935;
wire   [0:0] icmp_ln582_9_fu_1461_p2;
reg   [0:0] icmp_ln582_9_reg_3940;
wire   [31:0] trunc_ln583_9_fu_1467_p1;
reg   [31:0] trunc_ln583_9_reg_3946;
wire   [31:0] in_local_V_0_fu_1624_p3;
reg   [31:0] in_local_V_0_reg_3952;
wire    ap_CS_fsm_state12;
wire   [31:0] in_local_V_1_fu_1785_p3;
reg   [31:0] in_local_V_1_reg_3957;
wire   [31:0] in_local_V_2_fu_1946_p3;
reg   [31:0] in_local_V_2_reg_3962;
wire   [31:0] in_local_V_3_fu_2107_p3;
reg   [31:0] in_local_V_3_reg_3967;
wire   [31:0] in_local_V_4_fu_2268_p3;
reg   [31:0] in_local_V_4_reg_3972;
wire   [31:0] in_local_V_5_fu_2429_p3;
reg   [31:0] in_local_V_5_reg_3977;
wire   [31:0] in_local_V_6_fu_2590_p3;
reg   [31:0] in_local_V_6_reg_3982;
wire   [31:0] in_local_V_8_fu_2751_p3;
reg   [31:0] in_local_V_8_reg_3987;
wire   [31:0] in_local_V_9_fu_2913_p3;
reg   [31:0] in_local_V_9_reg_3992;
wire   [31:0] p_Val2_10_myproject_fu_206_ap_return;
reg   [31:0] p_Val2_10_reg_3997;
wire    ap_CS_fsm_state13;
reg   [0:0] p_Result_22_reg_4004;
wire   [31:0] tmp_V_fu_2929_p2;
reg   [31:0] tmp_V_reg_4010;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln935_fu_2934_p2;
reg   [0:0] icmp_ln935_reg_4015;
wire    ap_CS_fsm_state15;
wire   [31:0] tmp_V_2_fu_2939_p3;
reg   [31:0] tmp_V_2_reg_4020;
wire   [31:0] sub_ln944_fu_2962_p2;
reg   [31:0] sub_ln944_reg_4025;
wire   [0:0] icmp_ln958_fu_3056_p2;
reg   [0:0] icmp_ln958_reg_4031;
wire   [0:0] select_ln958_fu_3076_p3;
reg   [0:0] select_ln958_reg_4036;
wire   [7:0] trunc_ln943_fu_3084_p1;
reg   [7:0] trunc_ln943_reg_4041;
wire   [31:0] select_ln303_fu_3201_p3;
wire   [31:0] LD_11_fu_3225_p4;
reg   [31:0] LD_11_reg_4051;
wire   [31:0] bitcast_ln303_fu_3240_p1;
wire   [31:0] LD_12_fu_3261_p4;
reg   [31:0] LD_12_reg_4062;
wire   [31:0] bitcast_ln303_1_fu_3276_p1;
wire   [31:0] LD_13_fu_3297_p4;
reg   [31:0] LD_13_reg_4073;
wire   [31:0] LD_14_fu_3324_p4;
reg   [31:0] LD_14_reg_4079;
wire   [0:0] out_struct_last_V_fu_3373_p2;
reg   [0:0] out_struct_last_V_reg_4085;
wire    p_Val2_10_myproject_fu_206_ap_ready;
wire   [31:0] bitcast_ln744_fu_3236_p1;
reg   [31:0] ap_phi_mux_out_struct_data_phi_fu_163_p4;
wire   [31:0] out_struct_data_2_fu_3272_p1;
reg   [31:0] ap_phi_mux_out_struct_data_3_phi_fu_173_p4;
reg   [31:0] ap_phi_mux_retval_0_i_i_6_phi_fu_184_p4;
reg   [31:0] ap_phi_mux_retval_0_i_i_8_phi_fu_197_p4;
reg   [31:0] grp_fu_220_p0;
wire   [31:0] grp_fu_223_p0;
wire   [31:0] grp_fu_226_p0;
wire   [31:0] grp_fu_229_p0;
wire   [31:0] grp_fu_232_p0;
wire   [31:0] grp_fu_235_p0;
wire   [31:0] grp_fu_238_p0;
wire   [31:0] grp_fu_241_p0;
wire   [31:0] grp_fu_244_p0;
wire   [63:0] grp_fu_220_p1;
wire   [63:0] ireg_7_fu_272_p1;
wire   [10:0] exp_tmp_7_fu_288_p4;
wire   [51:0] trunc_ln565_7_fu_302_p1;
wire   [52:0] p_Result_17_fu_306_p3;
wire   [53:0] zext_ln569_7_fu_314_p1;
wire   [0:0] p_Result_16_fu_280_p3;
wire   [53:0] man_V_22_fu_318_p2;
wire   [62:0] trunc_ln555_7_fu_276_p1;
wire   [11:0] zext_ln455_7_fu_298_p1;
wire   [11:0] F2_7_fu_338_p2;
wire  signed [11:0] sh_amt_7_fu_400_p3;
wire   [6:0] tmp_21_fu_409_p4;
wire  signed [31:0] sext_ln581_7_fu_405_p1;
wire   [53:0] zext_ln586_7_fu_425_p1;
wire   [53:0] ashr_ln586_7_fu_429_p2;
wire   [0:0] tmp_22_fu_438_p3;
wire   [0:0] xor_ln571_7_fu_459_p2;
wire   [0:0] or_ln582_7_fu_469_p2;
wire   [0:0] xor_ln582_7_fu_473_p2;
wire   [0:0] and_ln581_7_fu_479_p2;
wire   [0:0] icmp_ln585_7_fu_484_p2;
wire   [0:0] or_ln581_7_fu_496_p2;
wire   [0:0] icmp_ln603_7_fu_419_p2;
wire   [0:0] xor_ln581_7_fu_501_p2;
wire   [31:0] shl_ln604_7_fu_454_p2;
wire   [0:0] and_ln603_7_fu_507_p2;
wire   [0:0] and_ln585_7_fu_490_p2;
wire   [31:0] select_ln588_7_fu_446_p3;
wire   [31:0] trunc_ln586_7_fu_434_p1;
wire   [0:0] and_ln582_7_fu_464_p2;
wire   [0:0] or_ln571_14_fu_520_p2;
wire   [31:0] select_ln571_35_fu_513_p3;
wire   [31:0] select_ln571_36_fu_525_p3;
wire   [0:0] or_ln571_15_fu_548_p2;
wire   [31:0] select_ln571_38_fu_540_p3;
wire   [31:0] select_ln571_37_fu_533_p3;
wire   [63:0] ireg_fu_571_p1;
wire   [10:0] exp_tmp_fu_587_p4;
wire   [51:0] trunc_ln565_fu_601_p1;
wire   [52:0] p_Result_3_fu_605_p3;
wire   [53:0] zext_ln569_fu_613_p1;
wire   [0:0] p_Result_2_fu_579_p3;
wire   [53:0] man_V_1_fu_617_p2;
wire   [62:0] trunc_ln555_fu_575_p1;
wire   [11:0] zext_ln455_fu_597_p1;
wire   [11:0] F2_fu_637_p2;
wire   [63:0] grp_fu_223_p1;
wire   [63:0] ireg_1_fu_671_p1;
wire   [10:0] exp_tmp_1_fu_687_p4;
wire   [51:0] trunc_ln565_1_fu_701_p1;
wire   [52:0] p_Result_5_fu_705_p3;
wire   [53:0] zext_ln569_1_fu_713_p1;
wire   [0:0] p_Result_4_fu_679_p3;
wire   [53:0] man_V_4_fu_717_p2;
wire   [62:0] trunc_ln555_1_fu_675_p1;
wire   [11:0] zext_ln455_1_fu_697_p1;
wire   [11:0] F2_1_fu_737_p2;
wire   [63:0] grp_fu_226_p1;
wire   [63:0] ireg_2_fu_771_p1;
wire   [10:0] exp_tmp_2_fu_787_p4;
wire   [51:0] trunc_ln565_2_fu_801_p1;
wire   [52:0] p_Result_7_fu_805_p3;
wire   [53:0] zext_ln569_2_fu_813_p1;
wire   [0:0] p_Result_6_fu_779_p3;
wire   [53:0] man_V_7_fu_817_p2;
wire   [62:0] trunc_ln555_2_fu_775_p1;
wire   [11:0] zext_ln455_2_fu_797_p1;
wire   [11:0] F2_2_fu_837_p2;
wire   [63:0] grp_fu_229_p1;
wire   [63:0] ireg_3_fu_871_p1;
wire   [10:0] exp_tmp_3_fu_887_p4;
wire   [51:0] trunc_ln565_3_fu_901_p1;
wire   [52:0] p_Result_9_fu_905_p3;
wire   [53:0] zext_ln569_3_fu_913_p1;
wire   [0:0] p_Result_8_fu_879_p3;
wire   [53:0] man_V_10_fu_917_p2;
wire   [62:0] trunc_ln555_3_fu_875_p1;
wire   [11:0] zext_ln455_3_fu_897_p1;
wire   [11:0] F2_3_fu_937_p2;
wire   [63:0] grp_fu_232_p1;
wire   [63:0] ireg_4_fu_971_p1;
wire   [10:0] exp_tmp_4_fu_987_p4;
wire   [51:0] trunc_ln565_4_fu_1001_p1;
wire   [52:0] p_Result_11_fu_1005_p3;
wire   [53:0] zext_ln569_4_fu_1013_p1;
wire   [0:0] p_Result_10_fu_979_p3;
wire   [53:0] man_V_13_fu_1017_p2;
wire   [62:0] trunc_ln555_4_fu_975_p1;
wire   [11:0] zext_ln455_4_fu_997_p1;
wire   [11:0] F2_4_fu_1037_p2;
wire   [63:0] grp_fu_235_p1;
wire   [63:0] ireg_5_fu_1071_p1;
wire   [10:0] exp_tmp_5_fu_1087_p4;
wire   [51:0] trunc_ln565_5_fu_1101_p1;
wire   [52:0] p_Result_13_fu_1105_p3;
wire   [53:0] zext_ln569_5_fu_1113_p1;
wire   [0:0] p_Result_12_fu_1079_p3;
wire   [53:0] man_V_16_fu_1117_p2;
wire   [62:0] trunc_ln555_5_fu_1075_p1;
wire   [11:0] zext_ln455_5_fu_1097_p1;
wire   [11:0] F2_5_fu_1137_p2;
wire   [63:0] grp_fu_238_p1;
wire   [63:0] ireg_6_fu_1171_p1;
wire   [10:0] exp_tmp_6_fu_1187_p4;
wire   [51:0] trunc_ln565_6_fu_1201_p1;
wire   [52:0] p_Result_15_fu_1205_p3;
wire   [53:0] zext_ln569_6_fu_1213_p1;
wire   [0:0] p_Result_14_fu_1179_p3;
wire   [53:0] man_V_19_fu_1217_p2;
wire   [62:0] trunc_ln555_6_fu_1175_p1;
wire   [11:0] zext_ln455_6_fu_1197_p1;
wire   [11:0] F2_6_fu_1237_p2;
wire   [63:0] grp_fu_241_p1;
wire   [63:0] ireg_8_fu_1271_p1;
wire   [10:0] exp_tmp_8_fu_1287_p4;
wire   [51:0] trunc_ln565_8_fu_1301_p1;
wire   [52:0] p_Result_19_fu_1305_p3;
wire   [53:0] zext_ln569_8_fu_1313_p1;
wire   [0:0] p_Result_18_fu_1279_p3;
wire   [53:0] man_V_25_fu_1317_p2;
wire   [62:0] trunc_ln555_8_fu_1275_p1;
wire   [11:0] zext_ln455_8_fu_1297_p1;
wire   [11:0] F2_8_fu_1337_p2;
wire   [63:0] grp_fu_244_p1;
wire   [63:0] ireg_9_fu_1371_p1;
wire   [10:0] exp_tmp_9_fu_1387_p4;
wire   [51:0] trunc_ln565_9_fu_1401_p1;
wire   [52:0] p_Result_21_fu_1405_p3;
wire   [53:0] zext_ln569_9_fu_1413_p1;
wire   [0:0] p_Result_20_fu_1379_p3;
wire   [53:0] man_V_28_fu_1417_p2;
wire   [62:0] trunc_ln555_9_fu_1375_p1;
wire   [11:0] zext_ln455_9_fu_1397_p1;
wire   [11:0] F2_9_fu_1437_p2;
wire  signed [11:0] sh_amt_fu_1471_p3;
wire   [6:0] tmp_fu_1480_p4;
wire  signed [31:0] sext_ln581_fu_1476_p1;
wire   [53:0] zext_ln586_fu_1496_p1;
wire   [53:0] ashr_ln586_fu_1500_p2;
wire   [0:0] tmp_1_fu_1509_p3;
wire   [0:0] xor_ln571_fu_1529_p2;
wire   [0:0] or_ln582_fu_1539_p2;
wire   [0:0] xor_ln582_fu_1543_p2;
wire   [0:0] and_ln581_fu_1549_p2;
wire   [0:0] icmp_ln585_fu_1554_p2;
wire   [0:0] or_ln581_fu_1566_p2;
wire   [0:0] icmp_ln603_fu_1490_p2;
wire   [0:0] xor_ln581_fu_1571_p2;
wire   [31:0] shl_ln604_fu_1524_p2;
wire   [0:0] and_ln603_fu_1577_p2;
wire   [0:0] and_ln585_fu_1560_p2;
wire   [31:0] select_ln588_fu_1516_p3;
wire   [31:0] trunc_ln586_fu_1505_p1;
wire   [0:0] and_ln582_fu_1534_p2;
wire   [0:0] or_ln571_fu_1590_p2;
wire   [31:0] select_ln571_fu_1583_p3;
wire   [31:0] select_ln571_1_fu_1595_p3;
wire   [0:0] or_ln571_1_fu_1618_p2;
wire   [31:0] select_ln571_3_fu_1610_p3;
wire   [31:0] select_ln571_2_fu_1603_p3;
wire  signed [11:0] sh_amt_1_fu_1632_p3;
wire   [6:0] tmp_3_fu_1641_p4;
wire  signed [31:0] sext_ln581_1_fu_1637_p1;
wire   [53:0] zext_ln586_1_fu_1657_p1;
wire   [53:0] ashr_ln586_1_fu_1661_p2;
wire   [0:0] tmp_4_fu_1670_p3;
wire   [0:0] xor_ln571_1_fu_1690_p2;
wire   [0:0] or_ln582_1_fu_1700_p2;
wire   [0:0] xor_ln582_1_fu_1704_p2;
wire   [0:0] and_ln581_1_fu_1710_p2;
wire   [0:0] icmp_ln585_1_fu_1715_p2;
wire   [0:0] or_ln581_1_fu_1727_p2;
wire   [0:0] icmp_ln603_1_fu_1651_p2;
wire   [0:0] xor_ln581_1_fu_1732_p2;
wire   [31:0] shl_ln604_1_fu_1685_p2;
wire   [0:0] and_ln603_1_fu_1738_p2;
wire   [0:0] and_ln585_1_fu_1721_p2;
wire   [31:0] select_ln588_1_fu_1677_p3;
wire   [31:0] trunc_ln586_1_fu_1666_p1;
wire   [0:0] and_ln582_1_fu_1695_p2;
wire   [0:0] or_ln571_2_fu_1751_p2;
wire   [31:0] select_ln571_5_fu_1744_p3;
wire   [31:0] select_ln571_6_fu_1756_p3;
wire   [0:0] or_ln571_3_fu_1779_p2;
wire   [31:0] select_ln571_8_fu_1771_p3;
wire   [31:0] select_ln571_7_fu_1764_p3;
wire  signed [11:0] sh_amt_2_fu_1793_p3;
wire   [6:0] tmp_6_fu_1802_p4;
wire  signed [31:0] sext_ln581_2_fu_1798_p1;
wire   [53:0] zext_ln586_2_fu_1818_p1;
wire   [53:0] ashr_ln586_2_fu_1822_p2;
wire   [0:0] tmp_7_fu_1831_p3;
wire   [0:0] xor_ln571_2_fu_1851_p2;
wire   [0:0] or_ln582_2_fu_1861_p2;
wire   [0:0] xor_ln582_2_fu_1865_p2;
wire   [0:0] and_ln581_2_fu_1871_p2;
wire   [0:0] icmp_ln585_2_fu_1876_p2;
wire   [0:0] or_ln581_2_fu_1888_p2;
wire   [0:0] icmp_ln603_2_fu_1812_p2;
wire   [0:0] xor_ln581_2_fu_1893_p2;
wire   [31:0] shl_ln604_2_fu_1846_p2;
wire   [0:0] and_ln603_2_fu_1899_p2;
wire   [0:0] and_ln585_2_fu_1882_p2;
wire   [31:0] select_ln588_2_fu_1838_p3;
wire   [31:0] trunc_ln586_2_fu_1827_p1;
wire   [0:0] and_ln582_2_fu_1856_p2;
wire   [0:0] or_ln571_4_fu_1912_p2;
wire   [31:0] select_ln571_10_fu_1905_p3;
wire   [31:0] select_ln571_11_fu_1917_p3;
wire   [0:0] or_ln571_5_fu_1940_p2;
wire   [31:0] select_ln571_13_fu_1932_p3;
wire   [31:0] select_ln571_12_fu_1925_p3;
wire  signed [11:0] sh_amt_3_fu_1954_p3;
wire   [6:0] tmp_9_fu_1963_p4;
wire  signed [31:0] sext_ln581_3_fu_1959_p1;
wire   [53:0] zext_ln586_3_fu_1979_p1;
wire   [53:0] ashr_ln586_3_fu_1983_p2;
wire   [0:0] tmp_10_fu_1992_p3;
wire   [0:0] xor_ln571_3_fu_2012_p2;
wire   [0:0] or_ln582_3_fu_2022_p2;
wire   [0:0] xor_ln582_3_fu_2026_p2;
wire   [0:0] and_ln581_3_fu_2032_p2;
wire   [0:0] icmp_ln585_3_fu_2037_p2;
wire   [0:0] or_ln581_3_fu_2049_p2;
wire   [0:0] icmp_ln603_3_fu_1973_p2;
wire   [0:0] xor_ln581_3_fu_2054_p2;
wire   [31:0] shl_ln604_3_fu_2007_p2;
wire   [0:0] and_ln603_3_fu_2060_p2;
wire   [0:0] and_ln585_3_fu_2043_p2;
wire   [31:0] select_ln588_3_fu_1999_p3;
wire   [31:0] trunc_ln586_3_fu_1988_p1;
wire   [0:0] and_ln582_3_fu_2017_p2;
wire   [0:0] or_ln571_6_fu_2073_p2;
wire   [31:0] select_ln571_15_fu_2066_p3;
wire   [31:0] select_ln571_16_fu_2078_p3;
wire   [0:0] or_ln571_7_fu_2101_p2;
wire   [31:0] select_ln571_18_fu_2093_p3;
wire   [31:0] select_ln571_17_fu_2086_p3;
wire  signed [11:0] sh_amt_4_fu_2115_p3;
wire   [6:0] tmp_12_fu_2124_p4;
wire  signed [31:0] sext_ln581_4_fu_2120_p1;
wire   [53:0] zext_ln586_4_fu_2140_p1;
wire   [53:0] ashr_ln586_4_fu_2144_p2;
wire   [0:0] tmp_13_fu_2153_p3;
wire   [0:0] xor_ln571_4_fu_2173_p2;
wire   [0:0] or_ln582_4_fu_2183_p2;
wire   [0:0] xor_ln582_4_fu_2187_p2;
wire   [0:0] and_ln581_4_fu_2193_p2;
wire   [0:0] icmp_ln585_4_fu_2198_p2;
wire   [0:0] or_ln581_4_fu_2210_p2;
wire   [0:0] icmp_ln603_4_fu_2134_p2;
wire   [0:0] xor_ln581_4_fu_2215_p2;
wire   [31:0] shl_ln604_4_fu_2168_p2;
wire   [0:0] and_ln603_4_fu_2221_p2;
wire   [0:0] and_ln585_4_fu_2204_p2;
wire   [31:0] select_ln588_4_fu_2160_p3;
wire   [31:0] trunc_ln586_4_fu_2149_p1;
wire   [0:0] and_ln582_4_fu_2178_p2;
wire   [0:0] or_ln571_8_fu_2234_p2;
wire   [31:0] select_ln571_20_fu_2227_p3;
wire   [31:0] select_ln571_21_fu_2239_p3;
wire   [0:0] or_ln571_9_fu_2262_p2;
wire   [31:0] select_ln571_23_fu_2254_p3;
wire   [31:0] select_ln571_22_fu_2247_p3;
wire  signed [11:0] sh_amt_5_fu_2276_p3;
wire   [6:0] tmp_15_fu_2285_p4;
wire  signed [31:0] sext_ln581_5_fu_2281_p1;
wire   [53:0] zext_ln586_5_fu_2301_p1;
wire   [53:0] ashr_ln586_5_fu_2305_p2;
wire   [0:0] tmp_16_fu_2314_p3;
wire   [0:0] xor_ln571_5_fu_2334_p2;
wire   [0:0] or_ln582_5_fu_2344_p2;
wire   [0:0] xor_ln582_5_fu_2348_p2;
wire   [0:0] and_ln581_5_fu_2354_p2;
wire   [0:0] icmp_ln585_5_fu_2359_p2;
wire   [0:0] or_ln581_5_fu_2371_p2;
wire   [0:0] icmp_ln603_5_fu_2295_p2;
wire   [0:0] xor_ln581_5_fu_2376_p2;
wire   [31:0] shl_ln604_5_fu_2329_p2;
wire   [0:0] and_ln603_5_fu_2382_p2;
wire   [0:0] and_ln585_5_fu_2365_p2;
wire   [31:0] select_ln588_5_fu_2321_p3;
wire   [31:0] trunc_ln586_5_fu_2310_p1;
wire   [0:0] and_ln582_5_fu_2339_p2;
wire   [0:0] or_ln571_10_fu_2395_p2;
wire   [31:0] select_ln571_25_fu_2388_p3;
wire   [31:0] select_ln571_26_fu_2400_p3;
wire   [0:0] or_ln571_11_fu_2423_p2;
wire   [31:0] select_ln571_28_fu_2415_p3;
wire   [31:0] select_ln571_27_fu_2408_p3;
wire  signed [11:0] sh_amt_6_fu_2437_p3;
wire   [6:0] tmp_18_fu_2446_p4;
wire  signed [31:0] sext_ln581_6_fu_2442_p1;
wire   [53:0] zext_ln586_6_fu_2462_p1;
wire   [53:0] ashr_ln586_6_fu_2466_p2;
wire   [0:0] tmp_19_fu_2475_p3;
wire   [0:0] xor_ln571_6_fu_2495_p2;
wire   [0:0] or_ln582_6_fu_2505_p2;
wire   [0:0] xor_ln582_6_fu_2509_p2;
wire   [0:0] and_ln581_6_fu_2515_p2;
wire   [0:0] icmp_ln585_6_fu_2520_p2;
wire   [0:0] or_ln581_6_fu_2532_p2;
wire   [0:0] icmp_ln603_6_fu_2456_p2;
wire   [0:0] xor_ln581_6_fu_2537_p2;
wire   [31:0] shl_ln604_6_fu_2490_p2;
wire   [0:0] and_ln603_6_fu_2543_p2;
wire   [0:0] and_ln585_6_fu_2526_p2;
wire   [31:0] select_ln588_6_fu_2482_p3;
wire   [31:0] trunc_ln586_6_fu_2471_p1;
wire   [0:0] and_ln582_6_fu_2500_p2;
wire   [0:0] or_ln571_12_fu_2556_p2;
wire   [31:0] select_ln571_30_fu_2549_p3;
wire   [31:0] select_ln571_31_fu_2561_p3;
wire   [0:0] or_ln571_13_fu_2584_p2;
wire   [31:0] select_ln571_33_fu_2576_p3;
wire   [31:0] select_ln571_32_fu_2569_p3;
wire  signed [11:0] sh_amt_8_fu_2598_p3;
wire   [6:0] tmp_24_fu_2607_p4;
wire  signed [31:0] sext_ln581_8_fu_2603_p1;
wire   [53:0] zext_ln586_8_fu_2623_p1;
wire   [53:0] ashr_ln586_8_fu_2627_p2;
wire   [0:0] tmp_25_fu_2636_p3;
wire   [0:0] xor_ln571_8_fu_2656_p2;
wire   [0:0] or_ln582_8_fu_2666_p2;
wire   [0:0] xor_ln582_8_fu_2670_p2;
wire   [0:0] and_ln581_8_fu_2676_p2;
wire   [0:0] icmp_ln585_8_fu_2681_p2;
wire   [0:0] or_ln581_8_fu_2693_p2;
wire   [0:0] icmp_ln603_8_fu_2617_p2;
wire   [0:0] xor_ln581_8_fu_2698_p2;
wire   [31:0] shl_ln604_8_fu_2651_p2;
wire   [0:0] and_ln603_8_fu_2704_p2;
wire   [0:0] and_ln585_8_fu_2687_p2;
wire   [31:0] select_ln588_8_fu_2643_p3;
wire   [31:0] trunc_ln586_8_fu_2632_p1;
wire   [0:0] and_ln582_8_fu_2661_p2;
wire   [0:0] or_ln571_16_fu_2717_p2;
wire   [31:0] select_ln571_40_fu_2710_p3;
wire   [31:0] select_ln571_41_fu_2722_p3;
wire   [0:0] or_ln571_17_fu_2745_p2;
wire   [31:0] select_ln571_43_fu_2737_p3;
wire   [31:0] select_ln571_42_fu_2730_p3;
wire  signed [11:0] sh_amt_9_fu_2759_p3;
wire   [6:0] tmp_27_fu_2768_p4;
wire  signed [31:0] sext_ln581_9_fu_2764_p1;
wire   [53:0] zext_ln586_9_fu_2784_p1;
wire   [53:0] ashr_ln586_9_fu_2788_p2;
wire   [0:0] tmp_28_fu_2797_p3;
wire   [0:0] xor_ln571_9_fu_2818_p2;
wire   [0:0] or_ln582_9_fu_2828_p2;
wire   [0:0] xor_ln582_9_fu_2832_p2;
wire   [0:0] and_ln581_9_fu_2838_p2;
wire   [0:0] icmp_ln585_9_fu_2843_p2;
wire   [0:0] or_ln581_9_fu_2855_p2;
wire   [0:0] icmp_ln603_9_fu_2778_p2;
wire   [0:0] xor_ln581_9_fu_2860_p2;
wire   [31:0] shl_ln604_9_fu_2813_p2;
wire   [0:0] and_ln603_9_fu_2866_p2;
wire   [0:0] and_ln585_9_fu_2849_p2;
wire   [31:0] select_ln588_9_fu_2805_p3;
wire   [31:0] trunc_ln586_9_fu_2793_p1;
wire   [0:0] and_ln582_9_fu_2823_p2;
wire   [0:0] or_ln571_18_fu_2879_p2;
wire   [31:0] select_ln571_45_fu_2872_p3;
wire   [31:0] select_ln571_46_fu_2884_p3;
wire   [0:0] or_ln571_19_fu_2907_p2;
wire   [31:0] select_ln571_48_fu_2899_p3;
wire   [31:0] select_ln571_47_fu_2892_p3;
reg   [31:0] p_Result_23_fu_2944_p4;
reg   [31:0] l_fu_2954_p3;
wire   [31:0] lsb_index_fu_2968_p2;
wire   [30:0] tmp_30_fu_2974_p4;
wire   [5:0] trunc_ln947_fu_2990_p1;
wire   [5:0] sub_ln947_fu_2994_p2;
wire   [31:0] zext_ln947_fu_3000_p1;
wire   [31:0] lshr_ln947_fu_3004_p2;
wire   [31:0] shl_ln949_fu_3010_p2;
wire   [31:0] or_ln949_1_fu_3016_p2;
wire   [31:0] and_ln949_fu_3022_p2;
wire   [0:0] tmp_31_fu_3034_p3;
wire   [0:0] icmp_ln946_fu_2984_p2;
wire   [0:0] icmp_ln949_fu_3028_p2;
wire   [0:0] p_Result_24_fu_3048_p3;
wire   [0:0] xor_ln949_fu_3042_p2;
wire   [0:0] select_ln946_fu_3062_p3;
wire   [0:0] and_ln949_1_fu_3070_p2;
wire   [31:0] add_ln958_fu_3091_p2;
wire   [63:0] zext_ln957_fu_3088_p1;
wire   [63:0] zext_ln958_fu_3096_p1;
wire   [31:0] sub_ln959_fu_3106_p2;
wire   [63:0] zext_ln959_fu_3111_p1;
wire   [63:0] lshr_ln958_fu_3100_p2;
wire   [63:0] shl_ln959_fu_3115_p2;
wire   [63:0] m_2_fu_3121_p3;
wire   [63:0] zext_ln961_fu_3128_p1;
wire   [63:0] m_3_fu_3131_p2;
wire   [62:0] m_4_fu_3137_p4;
wire   [0:0] p_Result_s_fu_3151_p3;
wire   [7:0] sub_ln964_fu_3167_p2;
wire   [7:0] select_ln943_fu_3159_p3;
wire   [7:0] add_ln964_fu_3172_p2;
wire   [63:0] zext_ln962_fu_3147_p1;
wire   [8:0] tmp_s_fu_3178_p3;
wire   [63:0] p_Result_25_fu_3185_p5;
wire   [31:0] LD_10_fu_3197_p1;
wire   [31:0] grp_fu_255_p3;
wire   [7:0] trunc_ln943_1_fu_3209_p1;
wire   [7:0] sub_ln964_1_fu_3213_p2;
wire   [7:0] add_ln964_1_fu_3219_p2;
wire   [7:0] trunc_ln943_2_fu_3245_p1;
wire   [7:0] sub_ln964_2_fu_3249_p2;
wire   [7:0] add_ln964_2_fu_3255_p2;
wire   [7:0] trunc_ln943_3_fu_3281_p1;
wire   [7:0] sub_ln964_3_fu_3285_p2;
wire   [7:0] add_ln964_3_fu_3291_p2;
wire   [7:0] trunc_ln943_4_fu_3308_p1;
wire   [7:0] sub_ln964_4_fu_3312_p2;
wire   [7:0] add_ln964_4_fu_3318_p2;
wire   [0:0] or_ln33_1_fu_3339_p2;
wire   [0:0] or_ln33_2_fu_3343_p2;
wire   [0:0] or_ln33_fu_3335_p2;
wire   [0:0] or_ln33_5_fu_3358_p2;
wire   [0:0] or_ln33_6_fu_3362_p2;
wire   [0:0] or_ln33_4_fu_3354_p2;
wire   [0:0] or_ln33_7_fu_3367_p2;
wire   [0:0] or_ln33_3_fu_3348_p2;
reg    grp_fu_220_ce;
reg    grp_fu_223_ce;
reg    grp_fu_226_ce;
reg    grp_fu_229_ce;
reg    grp_fu_232_ce;
reg    grp_fu_235_ce;
reg    grp_fu_238_ce;
reg    grp_fu_241_ce;
reg    grp_fu_244_ce;
reg   [25:0] ap_NS_fsm;
wire    regslice_both_out_V_data_V_U_apdone_blk;
reg    ap_block_state26;
wire    regslice_both_in_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_V_data_V_U_ack_in;
wire    regslice_both_in_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_V_keep_V_U_vld_out;
wire    regslice_both_in_V_keep_V_U_ack_in;
wire    regslice_both_in_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_V_strb_V_U_vld_out;
wire    regslice_both_in_V_strb_V_U_ack_in;
wire    regslice_both_in_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_V_last_V_U_vld_out;
wire    regslice_both_in_V_last_V_U_ack_in;
reg   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_V_data_V_U_vld_out;
wire    regslice_both_out_V_keep_V_U_apdone_blk;
wire    regslice_both_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_V_keep_V_U_vld_out;
wire    regslice_both_out_V_strb_V_U_apdone_blk;
wire    regslice_both_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_V_strb_V_U_vld_out;
wire    regslice_both_out_V_last_V_U_apdone_blk;
reg   [0:0] out_r_TLAST_int_regslice;
wire    regslice_both_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
end

myproject_axi_myproject p_Val2_10_myproject_fu_206(
    .ap_ready(p_Val2_10_myproject_fu_206_ap_ready),
    .p_read(in_local_V_0_reg_3952),
    .p_read1(in_local_V_1_reg_3957),
    .p_read2(in_local_V_2_reg_3962),
    .p_read3(in_local_V_3_reg_3967),
    .p_read4(in_local_V_4_reg_3972),
    .p_read5(in_local_V_5_reg_3977),
    .p_read6(in_local_V_6_reg_3982),
    .p_read7(in_local_V_7_reg_3554),
    .p_read8(in_local_V_8_reg_3987),
    .p_read9(in_local_V_9_reg_3992),
    .ap_return(p_Val2_10_myproject_fu_206_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_220_p0),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_223_p0),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_226_p0),
    .ce(grp_fu_226_ce),
    .dout(grp_fu_226_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_229_p0),
    .ce(grp_fu_229_ce),
    .dout(grp_fu_229_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_232_p0),
    .ce(grp_fu_232_ce),
    .dout(grp_fu_232_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_235_p0),
    .ce(grp_fu_235_ce),
    .dout(grp_fu_235_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_238_p0),
    .ce(grp_fu_238_ce),
    .dout(grp_fu_238_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_241_p0),
    .ce(grp_fu_241_ce),
    .dout(grp_fu_241_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_244_p0),
    .ce(grp_fu_244_ce),
    .dout(grp_fu_244_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TLAST_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        LD_11_reg_4051[30 : 23] <= LD_11_fu_3225_p4[30 : 23];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        LD_12_reg_4062[30 : 23] <= LD_12_fu_3261_p4[30 : 23];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        LD_13_reg_4073[30 : 23] <= LD_13_fu_3297_p4[30 : 23];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        LD_14_reg_4079[30 : 23] <= LD_14_fu_3324_p4[30 : 23];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln581_1_reg_3636 <= add_ln581_1_fu_749_p2;
        add_ln581_2_reg_3678 <= add_ln581_2_fu_849_p2;
        add_ln581_3_reg_3720 <= add_ln581_3_fu_949_p2;
        add_ln581_4_reg_3762 <= add_ln581_4_fu_1049_p2;
        add_ln581_5_reg_3804 <= add_ln581_5_fu_1149_p2;
        add_ln581_6_reg_3846 <= add_ln581_6_fu_1249_p2;
        add_ln581_8_reg_3888 <= add_ln581_8_fu_1349_p2;
        add_ln581_9_reg_3930 <= add_ln581_9_fu_1449_p2;
        add_ln581_reg_3594 <= add_ln581_fu_649_p2;
        icmp_ln571_1_reg_3621 <= icmp_ln571_1_fu_731_p2;
        icmp_ln571_2_reg_3663 <= icmp_ln571_2_fu_831_p2;
        icmp_ln571_3_reg_3705 <= icmp_ln571_3_fu_931_p2;
        icmp_ln571_4_reg_3747 <= icmp_ln571_4_fu_1031_p2;
        icmp_ln571_5_reg_3789 <= icmp_ln571_5_fu_1131_p2;
        icmp_ln571_6_reg_3831 <= icmp_ln571_6_fu_1231_p2;
        icmp_ln571_8_reg_3873 <= icmp_ln571_8_fu_1331_p2;
        icmp_ln571_9_reg_3915 <= icmp_ln571_9_fu_1431_p2;
        icmp_ln571_reg_3579 <= icmp_ln571_fu_631_p2;
        icmp_ln581_1_reg_3629 <= icmp_ln581_1_fu_743_p2;
        icmp_ln581_2_reg_3671 <= icmp_ln581_2_fu_843_p2;
        icmp_ln581_3_reg_3713 <= icmp_ln581_3_fu_943_p2;
        icmp_ln581_4_reg_3755 <= icmp_ln581_4_fu_1043_p2;
        icmp_ln581_5_reg_3797 <= icmp_ln581_5_fu_1143_p2;
        icmp_ln581_6_reg_3839 <= icmp_ln581_6_fu_1243_p2;
        icmp_ln581_8_reg_3881 <= icmp_ln581_8_fu_1343_p2;
        icmp_ln581_9_reg_3923 <= icmp_ln581_9_fu_1443_p2;
        icmp_ln581_reg_3587 <= icmp_ln581_fu_643_p2;
        icmp_ln582_1_reg_3646 <= icmp_ln582_1_fu_761_p2;
        icmp_ln582_2_reg_3688 <= icmp_ln582_2_fu_861_p2;
        icmp_ln582_3_reg_3730 <= icmp_ln582_3_fu_961_p2;
        icmp_ln582_4_reg_3772 <= icmp_ln582_4_fu_1061_p2;
        icmp_ln582_5_reg_3814 <= icmp_ln582_5_fu_1161_p2;
        icmp_ln582_6_reg_3856 <= icmp_ln582_6_fu_1261_p2;
        icmp_ln582_8_reg_3898 <= icmp_ln582_8_fu_1361_p2;
        icmp_ln582_9_reg_3940 <= icmp_ln582_9_fu_1461_p2;
        icmp_ln582_reg_3604 <= icmp_ln582_fu_661_p2;
        man_V_11_reg_3700 <= man_V_11_fu_923_p3;
        man_V_14_reg_3742 <= man_V_14_fu_1023_p3;
        man_V_17_reg_3784 <= man_V_17_fu_1123_p3;
        man_V_20_reg_3826 <= man_V_20_fu_1223_p3;
        man_V_26_reg_3868 <= man_V_26_fu_1323_p3;
        man_V_29_reg_3910 <= man_V_29_fu_1423_p3;
        man_V_2_reg_3574 <= man_V_2_fu_623_p3;
        man_V_5_reg_3616 <= man_V_5_fu_723_p3;
        man_V_8_reg_3658 <= man_V_8_fu_823_p3;
        sub_ln581_1_reg_3641 <= sub_ln581_1_fu_755_p2;
        sub_ln581_2_reg_3683 <= sub_ln581_2_fu_855_p2;
        sub_ln581_3_reg_3725 <= sub_ln581_3_fu_955_p2;
        sub_ln581_4_reg_3767 <= sub_ln581_4_fu_1055_p2;
        sub_ln581_5_reg_3809 <= sub_ln581_5_fu_1155_p2;
        sub_ln581_6_reg_3851 <= sub_ln581_6_fu_1255_p2;
        sub_ln581_8_reg_3893 <= sub_ln581_8_fu_1355_p2;
        sub_ln581_9_reg_3935 <= sub_ln581_9_fu_1455_p2;
        sub_ln581_reg_3599 <= sub_ln581_fu_655_p2;
        trunc_ln583_1_reg_3652 <= trunc_ln583_1_fu_767_p1;
        trunc_ln583_2_reg_3694 <= trunc_ln583_2_fu_867_p1;
        trunc_ln583_3_reg_3736 <= trunc_ln583_3_fu_967_p1;
        trunc_ln583_4_reg_3778 <= trunc_ln583_4_fu_1067_p1;
        trunc_ln583_5_reg_3820 <= trunc_ln583_5_fu_1167_p1;
        trunc_ln583_6_reg_3862 <= trunc_ln583_6_fu_1267_p1;
        trunc_ln583_8_reg_3904 <= trunc_ln583_8_fu_1367_p1;
        trunc_ln583_9_reg_3946 <= trunc_ln583_9_fu_1467_p1;
        trunc_ln583_reg_3610 <= trunc_ln583_fu_667_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln581_7_reg_3486 <= add_ln581_7_fu_350_p2;
        icmp_ln571_7_reg_3471 <= icmp_ln571_7_fu_332_p2;
        icmp_ln581_7_reg_3479 <= icmp_ln581_7_fu_344_p2;
        icmp_ln582_7_reg_3496 <= icmp_ln582_7_fu_362_p2;
        in_V_data_V_val8_reg_3508 <= in_r_TDATA_int_regslice;
        in_struct_last_V_7_reg_3514 <= in_r_TLAST_int_regslice;
        man_V_23_reg_3466 <= man_V_23_fu_324_p3;
        sub_ln581_7_reg_3491 <= sub_ln581_7_fu_356_p2;
        trunc_ln583_7_reg_3502 <= trunc_ln583_7_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln935_reg_4015 <= icmp_ln935_fu_2934_p2;
        icmp_ln958_reg_4031 <= icmp_ln958_fu_3056_p2;
        select_ln958_reg_4036 <= select_ln958_fu_3076_p3;
        sub_ln944_reg_4025 <= sub_ln944_fu_2962_p2;
        tmp_V_2_reg_4020 <= tmp_V_2_fu_2939_p3;
        trunc_ln943_reg_4041 <= trunc_ln943_fu_3084_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_V_data_V_val1_reg_3412 <= in_r_TDATA_int_regslice;
        in_struct_last_V_2_reg_3418 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_V_data_V_val2_reg_3390 <= in_r_TDATA_int_regslice;
        in_struct_last_V_reg_3396 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_V_data_V_val3_reg_3423 <= in_r_TDATA_int_regslice;
        in_struct_last_V_3_reg_3429 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        in_V_data_V_val4_reg_3434 <= in_r_TDATA_int_regslice;
        in_struct_last_V_4_reg_3440 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        in_V_data_V_val5_reg_3445 <= in_r_TDATA_int_regslice;
        in_struct_last_V_5_reg_3451 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_V_data_V_val6_reg_3401 <= in_r_TDATA_int_regslice;
        in_struct_last_V_1_reg_3407 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in_V_data_V_val_reg_3379 <= in_r_TDATA_int_regslice;
        in_struct_last_V_9_reg_3385 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        in_local_V_0_reg_3952 <= in_local_V_0_fu_1624_p3;
        in_local_V_1_reg_3957 <= in_local_V_1_fu_1785_p3;
        in_local_V_2_reg_3962 <= in_local_V_2_fu_1946_p3;
        in_local_V_3_reg_3967 <= in_local_V_3_fu_2107_p3;
        in_local_V_4_reg_3972 <= in_local_V_4_fu_2268_p3;
        in_local_V_5_reg_3977 <= in_local_V_5_fu_2429_p3;
        in_local_V_6_reg_3982 <= in_local_V_6_fu_2590_p3;
        in_local_V_8_reg_3987 <= in_local_V_8_fu_2751_p3;
        in_local_V_9_reg_3992 <= in_local_V_9_fu_2913_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        in_local_V_7_reg_3554 <= in_local_V_7_fu_554_p3;
        in_struct_last_V_8_reg_3564 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_struct_last_V_6_reg_3456 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out_struct_last_V_reg_4085 <= out_struct_last_V_fu_3373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_Result_22_reg_4004 <= p_Val2_10_myproject_fu_206_ap_return[32'd31];
        p_Val2_10_reg_3997 <= p_Val2_10_myproject_fu_206_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_263 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((p_Result_22_reg_4004 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        tmp_V_reg_4010 <= tmp_V_fu_2929_p2;
    end
end

always @ (*) begin
    if (~(1'b1 == 1'b1)) begin
        ap_phi_mux_out_struct_data_3_phi_fu_173_p4 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_phi_mux_out_struct_data_3_phi_fu_173_p4 = out_struct_data_2_fu_3272_p1;
    end else begin
        ap_phi_mux_out_struct_data_3_phi_fu_173_p4 = 'bx;
    end
end

always @ (*) begin
    if (~(1'b1 == 1'b1)) begin
        ap_phi_mux_out_struct_data_phi_fu_163_p4 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_phi_mux_out_struct_data_phi_fu_163_p4 = bitcast_ln744_fu_3236_p1;
    end else begin
        ap_phi_mux_out_struct_data_phi_fu_163_p4 = 'bx;
    end
end

always @ (*) begin
    if (~(1'b1 == 1'b1)) begin
        ap_phi_mux_retval_0_i_i_6_phi_fu_184_p4 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_phi_mux_retval_0_i_i_6_phi_fu_184_p4 = LD_13_reg_4073;
    end else begin
        ap_phi_mux_retval_0_i_i_6_phi_fu_184_p4 = 'bx;
    end
end

always @ (*) begin
    if (~(1'b1 == 1'b1)) begin
        ap_phi_mux_retval_0_i_i_8_phi_fu_197_p4 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_phi_mux_retval_0_i_i_8_phi_fu_197_p4 = LD_14_reg_4079;
    end else begin
        ap_phi_mux_retval_0_i_i_8_phi_fu_197_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_220_p0 = in_struct_data_fu_372_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_220_p0 = in_struct_data_7_fu_267_p1;
    end else begin
        grp_fu_220_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_226_ce = 1'b1;
    end else begin
        grp_fu_226_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_229_ce = 1'b1;
    end else begin
        grp_fu_229_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_232_ce = 1'b1;
    end else begin
        grp_fu_232_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_235_ce = 1'b1;
    end else begin
        grp_fu_235_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_238_ce = 1'b1;
    end else begin
        grp_fu_238_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_241_ce = 1'b1;
    end else begin
        grp_fu_241_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_244_ce = 1'b1;
    end else begin
        grp_fu_244_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            out_r_TDATA_int_regslice = ap_phi_mux_retval_0_i_i_8_phi_fu_197_p4;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            out_r_TDATA_int_regslice = LD_14_fu_3324_p4;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            out_r_TDATA_int_regslice = ap_phi_mux_retval_0_i_i_6_phi_fu_184_p4;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            out_r_TDATA_int_regslice = LD_13_fu_3297_p4;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            out_r_TDATA_int_regslice = bitcast_ln303_1_fu_3276_p1;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            out_r_TDATA_int_regslice = LD_12_fu_3261_p4;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            out_r_TDATA_int_regslice = bitcast_ln303_fu_3240_p1;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            out_r_TDATA_int_regslice = 32'd0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            out_r_TDATA_int_regslice = LD_11_fu_3225_p4;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            out_r_TDATA_int_regslice = select_ln303_fu_3201_p3;
        end else begin
            out_r_TDATA_int_regslice = 'bx;
        end
    end else begin
        out_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        out_r_TLAST_int_regslice = out_struct_last_V_reg_4085;
    end else if ((((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        out_r_TLAST_int_regslice = 1'd0;
    end else begin
        out_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state23)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((in_r_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((out_r_TREADY_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_737_p2 = (12'd1075 - zext_ln455_1_fu_697_p1);

assign F2_2_fu_837_p2 = (12'd1075 - zext_ln455_2_fu_797_p1);

assign F2_3_fu_937_p2 = (12'd1075 - zext_ln455_3_fu_897_p1);

assign F2_4_fu_1037_p2 = (12'd1075 - zext_ln455_4_fu_997_p1);

assign F2_5_fu_1137_p2 = (12'd1075 - zext_ln455_5_fu_1097_p1);

assign F2_6_fu_1237_p2 = (12'd1075 - zext_ln455_6_fu_1197_p1);

assign F2_7_fu_338_p2 = (12'd1075 - zext_ln455_7_fu_298_p1);

assign F2_8_fu_1337_p2 = (12'd1075 - zext_ln455_8_fu_1297_p1);

assign F2_9_fu_1437_p2 = (12'd1075 - zext_ln455_9_fu_1397_p1);

assign F2_fu_637_p2 = (12'd1075 - zext_ln455_fu_597_p1);

assign LD_10_fu_3197_p1 = p_Result_25_fu_3185_p5[31:0];

assign LD_11_fu_3225_p4 = {{{{1'd0}, {add_ln964_1_fu_3219_p2}}}, {23'd0}};

assign LD_12_fu_3261_p4 = {{{{1'd0}, {add_ln964_2_fu_3255_p2}}}, {23'd0}};

assign LD_13_fu_3297_p4 = {{{{1'd0}, {add_ln964_3_fu_3291_p2}}}, {23'd0}};

assign LD_14_fu_3324_p4 = {{{{1'd0}, {add_ln964_4_fu_3318_p2}}}, {23'd0}};

assign add_ln581_1_fu_749_p2 = ($signed(F2_1_fu_737_p2) + $signed(12'd4080));

assign add_ln581_2_fu_849_p2 = ($signed(F2_2_fu_837_p2) + $signed(12'd4080));

assign add_ln581_3_fu_949_p2 = ($signed(F2_3_fu_937_p2) + $signed(12'd4080));

assign add_ln581_4_fu_1049_p2 = ($signed(F2_4_fu_1037_p2) + $signed(12'd4080));

assign add_ln581_5_fu_1149_p2 = ($signed(F2_5_fu_1137_p2) + $signed(12'd4080));

assign add_ln581_6_fu_1249_p2 = ($signed(F2_6_fu_1237_p2) + $signed(12'd4080));

assign add_ln581_7_fu_350_p2 = ($signed(F2_7_fu_338_p2) + $signed(12'd4080));

assign add_ln581_8_fu_1349_p2 = ($signed(F2_8_fu_1337_p2) + $signed(12'd4080));

assign add_ln581_9_fu_1449_p2 = ($signed(F2_9_fu_1437_p2) + $signed(12'd4080));

assign add_ln581_fu_649_p2 = ($signed(F2_fu_637_p2) + $signed(12'd4080));

assign add_ln958_fu_3091_p2 = ($signed(sub_ln944_reg_4025) + $signed(32'd4294967271));

assign add_ln964_1_fu_3219_p2 = (sub_ln964_1_fu_3213_p2 + 8'd126);

assign add_ln964_2_fu_3255_p2 = (sub_ln964_2_fu_3249_p2 + 8'd126);

assign add_ln964_3_fu_3291_p2 = (sub_ln964_3_fu_3285_p2 + 8'd126);

assign add_ln964_4_fu_3318_p2 = (sub_ln964_4_fu_3312_p2 + 8'd126);

assign add_ln964_fu_3172_p2 = (sub_ln964_fu_3167_p2 + select_ln943_fu_3159_p3);

assign and_ln581_1_fu_1710_p2 = (xor_ln582_1_fu_1704_p2 & icmp_ln581_1_reg_3629);

assign and_ln581_2_fu_1871_p2 = (xor_ln582_2_fu_1865_p2 & icmp_ln581_2_reg_3671);

assign and_ln581_3_fu_2032_p2 = (xor_ln582_3_fu_2026_p2 & icmp_ln581_3_reg_3713);

assign and_ln581_4_fu_2193_p2 = (xor_ln582_4_fu_2187_p2 & icmp_ln581_4_reg_3755);

assign and_ln581_5_fu_2354_p2 = (xor_ln582_5_fu_2348_p2 & icmp_ln581_5_reg_3797);

assign and_ln581_6_fu_2515_p2 = (xor_ln582_6_fu_2509_p2 & icmp_ln581_6_reg_3839);

assign and_ln581_7_fu_479_p2 = (xor_ln582_7_fu_473_p2 & icmp_ln581_7_reg_3479);

assign and_ln581_8_fu_2676_p2 = (xor_ln582_8_fu_2670_p2 & icmp_ln581_8_reg_3881);

assign and_ln581_9_fu_2838_p2 = (xor_ln582_9_fu_2832_p2 & icmp_ln581_9_reg_3923);

assign and_ln581_fu_1549_p2 = (xor_ln582_fu_1543_p2 & icmp_ln581_reg_3587);

assign and_ln582_1_fu_1695_p2 = (xor_ln571_1_fu_1690_p2 & icmp_ln582_1_reg_3646);

assign and_ln582_2_fu_1856_p2 = (xor_ln571_2_fu_1851_p2 & icmp_ln582_2_reg_3688);

assign and_ln582_3_fu_2017_p2 = (xor_ln571_3_fu_2012_p2 & icmp_ln582_3_reg_3730);

assign and_ln582_4_fu_2178_p2 = (xor_ln571_4_fu_2173_p2 & icmp_ln582_4_reg_3772);

assign and_ln582_5_fu_2339_p2 = (xor_ln571_5_fu_2334_p2 & icmp_ln582_5_reg_3814);

assign and_ln582_6_fu_2500_p2 = (xor_ln571_6_fu_2495_p2 & icmp_ln582_6_reg_3856);

assign and_ln582_7_fu_464_p2 = (xor_ln571_7_fu_459_p2 & icmp_ln582_7_reg_3496);

assign and_ln582_8_fu_2661_p2 = (xor_ln571_8_fu_2656_p2 & icmp_ln582_8_reg_3898);

assign and_ln582_9_fu_2823_p2 = (xor_ln571_9_fu_2818_p2 & icmp_ln582_9_reg_3940);

assign and_ln582_fu_1534_p2 = (xor_ln571_fu_1529_p2 & icmp_ln582_reg_3604);

assign and_ln585_1_fu_1721_p2 = (icmp_ln585_1_fu_1715_p2 & and_ln581_1_fu_1710_p2);

assign and_ln585_2_fu_1882_p2 = (icmp_ln585_2_fu_1876_p2 & and_ln581_2_fu_1871_p2);

assign and_ln585_3_fu_2043_p2 = (icmp_ln585_3_fu_2037_p2 & and_ln581_3_fu_2032_p2);

assign and_ln585_4_fu_2204_p2 = (icmp_ln585_4_fu_2198_p2 & and_ln581_4_fu_2193_p2);

assign and_ln585_5_fu_2365_p2 = (icmp_ln585_5_fu_2359_p2 & and_ln581_5_fu_2354_p2);

assign and_ln585_6_fu_2526_p2 = (icmp_ln585_6_fu_2520_p2 & and_ln581_6_fu_2515_p2);

assign and_ln585_7_fu_490_p2 = (icmp_ln585_7_fu_484_p2 & and_ln581_7_fu_479_p2);

assign and_ln585_8_fu_2687_p2 = (icmp_ln585_8_fu_2681_p2 & and_ln581_8_fu_2676_p2);

assign and_ln585_9_fu_2849_p2 = (icmp_ln585_9_fu_2843_p2 & and_ln581_9_fu_2838_p2);

assign and_ln585_fu_1560_p2 = (icmp_ln585_fu_1554_p2 & and_ln581_fu_1549_p2);

assign and_ln603_1_fu_1738_p2 = (xor_ln581_1_fu_1732_p2 & icmp_ln603_1_fu_1651_p2);

assign and_ln603_2_fu_1899_p2 = (xor_ln581_2_fu_1893_p2 & icmp_ln603_2_fu_1812_p2);

assign and_ln603_3_fu_2060_p2 = (xor_ln581_3_fu_2054_p2 & icmp_ln603_3_fu_1973_p2);

assign and_ln603_4_fu_2221_p2 = (xor_ln581_4_fu_2215_p2 & icmp_ln603_4_fu_2134_p2);

assign and_ln603_5_fu_2382_p2 = (xor_ln581_5_fu_2376_p2 & icmp_ln603_5_fu_2295_p2);

assign and_ln603_6_fu_2543_p2 = (xor_ln581_6_fu_2537_p2 & icmp_ln603_6_fu_2456_p2);

assign and_ln603_7_fu_507_p2 = (xor_ln581_7_fu_501_p2 & icmp_ln603_7_fu_419_p2);

assign and_ln603_8_fu_2704_p2 = (xor_ln581_8_fu_2698_p2 & icmp_ln603_8_fu_2617_p2);

assign and_ln603_9_fu_2866_p2 = (xor_ln581_9_fu_2860_p2 & icmp_ln603_9_fu_2778_p2);

assign and_ln603_fu_1577_p2 = (xor_ln581_fu_1571_p2 & icmp_ln603_fu_1490_p2);

assign and_ln949_1_fu_3070_p2 = (xor_ln949_fu_3042_p2 & p_Result_24_fu_3048_p3);

assign and_ln949_fu_3022_p2 = (tmp_V_2_fu_2939_p3 & or_ln949_1_fu_3016_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state26 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_1_fu_1661_p2 = $signed(man_V_5_reg_3616) >>> zext_ln586_1_fu_1657_p1;

assign ashr_ln586_2_fu_1822_p2 = $signed(man_V_8_reg_3658) >>> zext_ln586_2_fu_1818_p1;

assign ashr_ln586_3_fu_1983_p2 = $signed(man_V_11_reg_3700) >>> zext_ln586_3_fu_1979_p1;

assign ashr_ln586_4_fu_2144_p2 = $signed(man_V_14_reg_3742) >>> zext_ln586_4_fu_2140_p1;

assign ashr_ln586_5_fu_2305_p2 = $signed(man_V_17_reg_3784) >>> zext_ln586_5_fu_2301_p1;

assign ashr_ln586_6_fu_2466_p2 = $signed(man_V_20_reg_3826) >>> zext_ln586_6_fu_2462_p1;

assign ashr_ln586_7_fu_429_p2 = $signed(man_V_23_reg_3466) >>> zext_ln586_7_fu_425_p1;

assign ashr_ln586_8_fu_2627_p2 = $signed(man_V_26_reg_3868) >>> zext_ln586_8_fu_2623_p1;

assign ashr_ln586_9_fu_2788_p2 = $signed(man_V_29_reg_3910) >>> zext_ln586_9_fu_2784_p1;

assign ashr_ln586_fu_1500_p2 = $signed(man_V_2_reg_3574) >>> zext_ln586_fu_1496_p1;

assign bitcast_ln303_1_fu_3276_p1 = ap_phi_mux_out_struct_data_3_phi_fu_173_p4;

assign bitcast_ln303_fu_3240_p1 = ap_phi_mux_out_struct_data_phi_fu_163_p4;

assign bitcast_ln744_fu_3236_p1 = LD_11_reg_4051;

assign exp_tmp_1_fu_687_p4 = {{ireg_1_fu_671_p1[62:52]}};

assign exp_tmp_2_fu_787_p4 = {{ireg_2_fu_771_p1[62:52]}};

assign exp_tmp_3_fu_887_p4 = {{ireg_3_fu_871_p1[62:52]}};

assign exp_tmp_4_fu_987_p4 = {{ireg_4_fu_971_p1[62:52]}};

assign exp_tmp_5_fu_1087_p4 = {{ireg_5_fu_1071_p1[62:52]}};

assign exp_tmp_6_fu_1187_p4 = {{ireg_6_fu_1171_p1[62:52]}};

assign exp_tmp_7_fu_288_p4 = {{ireg_7_fu_272_p1[62:52]}};

assign exp_tmp_8_fu_1287_p4 = {{ireg_8_fu_1271_p1[62:52]}};

assign exp_tmp_9_fu_1387_p4 = {{ireg_9_fu_1371_p1[62:52]}};

assign exp_tmp_fu_587_p4 = {{ireg_fu_571_p1[62:52]}};

assign grp_fu_223_p0 = in_V_data_V_val2_reg_3390;

assign grp_fu_226_p0 = in_V_data_V_val6_reg_3401;

assign grp_fu_229_p0 = in_V_data_V_val1_reg_3412;

assign grp_fu_232_p0 = in_V_data_V_val3_reg_3423;

assign grp_fu_235_p0 = in_V_data_V_val4_reg_3434;

assign grp_fu_238_p0 = in_V_data_V_val5_reg_3445;

assign grp_fu_241_p0 = in_V_data_V_val8_reg_3508;

assign grp_fu_244_p0 = in_r_TDATA_int_regslice;


always @ (32'd0) begin
    if (32'd0[0] == 1'b1) begin
        grp_fu_255_p3 = 32'd0;
    end else if (32'd0[1] == 1'b1) begin
        grp_fu_255_p3 = 32'd1;
    end else if (32'd0[2] == 1'b1) begin
        grp_fu_255_p3 = 32'd2;
    end else if (32'd0[3] == 1'b1) begin
        grp_fu_255_p3 = 32'd3;
    end else if (32'd0[4] == 1'b1) begin
        grp_fu_255_p3 = 32'd4;
    end else if (32'd0[5] == 1'b1) begin
        grp_fu_255_p3 = 32'd5;
    end else if (32'd0[6] == 1'b1) begin
        grp_fu_255_p3 = 32'd6;
    end else if (32'd0[7] == 1'b1) begin
        grp_fu_255_p3 = 32'd7;
    end else if (32'd0[8] == 1'b1) begin
        grp_fu_255_p3 = 32'd8;
    end else if (32'd0[9] == 1'b1) begin
        grp_fu_255_p3 = 32'd9;
    end else if (32'd0[10] == 1'b1) begin
        grp_fu_255_p3 = 32'd10;
    end else if (32'd0[11] == 1'b1) begin
        grp_fu_255_p3 = 32'd11;
    end else if (32'd0[12] == 1'b1) begin
        grp_fu_255_p3 = 32'd12;
    end else if (32'd0[13] == 1'b1) begin
        grp_fu_255_p3 = 32'd13;
    end else if (32'd0[14] == 1'b1) begin
        grp_fu_255_p3 = 32'd14;
    end else if (32'd0[15] == 1'b1) begin
        grp_fu_255_p3 = 32'd15;
    end else if (32'd0[16] == 1'b1) begin
        grp_fu_255_p3 = 32'd16;
    end else if (32'd0[17] == 1'b1) begin
        grp_fu_255_p3 = 32'd17;
    end else if (32'd0[18] == 1'b1) begin
        grp_fu_255_p3 = 32'd18;
    end else if (32'd0[19] == 1'b1) begin
        grp_fu_255_p3 = 32'd19;
    end else if (32'd0[20] == 1'b1) begin
        grp_fu_255_p3 = 32'd20;
    end else if (32'd0[21] == 1'b1) begin
        grp_fu_255_p3 = 32'd21;
    end else if (32'd0[22] == 1'b1) begin
        grp_fu_255_p3 = 32'd22;
    end else if (32'd0[23] == 1'b1) begin
        grp_fu_255_p3 = 32'd23;
    end else if (32'd0[24] == 1'b1) begin
        grp_fu_255_p3 = 32'd24;
    end else if (32'd0[25] == 1'b1) begin
        grp_fu_255_p3 = 32'd25;
    end else if (32'd0[26] == 1'b1) begin
        grp_fu_255_p3 = 32'd26;
    end else if (32'd0[27] == 1'b1) begin
        grp_fu_255_p3 = 32'd27;
    end else if (32'd0[28] == 1'b1) begin
        grp_fu_255_p3 = 32'd28;
    end else if (32'd0[29] == 1'b1) begin
        grp_fu_255_p3 = 32'd29;
    end else if (32'd0[30] == 1'b1) begin
        grp_fu_255_p3 = 32'd30;
    end else if (32'd0[31] == 1'b1) begin
        grp_fu_255_p3 = 32'd31;
    end else begin
        grp_fu_255_p3 = 32'd32;
    end
end

assign icmp_ln571_1_fu_731_p2 = ((trunc_ln555_1_fu_675_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_831_p2 = ((trunc_ln555_2_fu_775_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_931_p2 = ((trunc_ln555_3_fu_875_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_4_fu_1031_p2 = ((trunc_ln555_4_fu_975_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_5_fu_1131_p2 = ((trunc_ln555_5_fu_1075_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_6_fu_1231_p2 = ((trunc_ln555_6_fu_1175_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_7_fu_332_p2 = ((trunc_ln555_7_fu_276_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_8_fu_1331_p2 = ((trunc_ln555_8_fu_1275_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_9_fu_1431_p2 = ((trunc_ln555_9_fu_1375_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_631_p2 = ((trunc_ln555_fu_575_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_743_p2 = (($signed(F2_1_fu_737_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_843_p2 = (($signed(F2_2_fu_837_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_3_fu_943_p2 = (($signed(F2_3_fu_937_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_4_fu_1043_p2 = (($signed(F2_4_fu_1037_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_5_fu_1143_p2 = (($signed(F2_5_fu_1137_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_6_fu_1243_p2 = (($signed(F2_6_fu_1237_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_7_fu_344_p2 = (($signed(F2_7_fu_338_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_8_fu_1343_p2 = (($signed(F2_8_fu_1337_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_9_fu_1443_p2 = (($signed(F2_9_fu_1437_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_643_p2 = (($signed(F2_fu_637_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_761_p2 = ((F2_1_fu_737_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_861_p2 = ((F2_2_fu_837_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_3_fu_961_p2 = ((F2_3_fu_937_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_4_fu_1061_p2 = ((F2_4_fu_1037_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_5_fu_1161_p2 = ((F2_5_fu_1137_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_6_fu_1261_p2 = ((F2_6_fu_1237_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_7_fu_362_p2 = ((F2_7_fu_338_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_8_fu_1361_p2 = ((F2_8_fu_1337_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_9_fu_1461_p2 = ((F2_9_fu_1437_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_661_p2 = ((F2_fu_637_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1715_p2 = ((sh_amt_1_fu_1632_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_1876_p2 = ((sh_amt_2_fu_1793_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_3_fu_2037_p2 = ((sh_amt_3_fu_1954_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_4_fu_2198_p2 = ((sh_amt_4_fu_2115_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_5_fu_2359_p2 = ((sh_amt_5_fu_2276_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_6_fu_2520_p2 = ((sh_amt_6_fu_2437_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_7_fu_484_p2 = ((sh_amt_7_fu_400_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_8_fu_2681_p2 = ((sh_amt_8_fu_2598_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_9_fu_2843_p2 = ((sh_amt_9_fu_2759_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1554_p2 = ((sh_amt_fu_1471_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1651_p2 = ((tmp_3_fu_1641_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_1812_p2 = ((tmp_6_fu_1802_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_3_fu_1973_p2 = ((tmp_9_fu_1963_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_4_fu_2134_p2 = ((tmp_12_fu_2124_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_5_fu_2295_p2 = ((tmp_15_fu_2285_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_6_fu_2456_p2 = ((tmp_18_fu_2446_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_7_fu_419_p2 = ((tmp_21_fu_409_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_8_fu_2617_p2 = ((tmp_24_fu_2607_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_9_fu_2778_p2 = ((tmp_27_fu_2768_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1490_p2 = ((tmp_fu_1480_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2934_p2 = ((p_Val2_10_reg_3997 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_2984_p2 = (($signed(tmp_30_fu_2974_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_3028_p2 = ((and_ln949_fu_3022_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_3056_p2 = (($signed(lsb_index_fu_2968_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_local_V_0_fu_1624_p3 = ((or_ln571_1_fu_1618_p2[0:0] == 1'b1) ? select_ln571_3_fu_1610_p3 : select_ln571_2_fu_1603_p3);

assign in_local_V_1_fu_1785_p3 = ((or_ln571_3_fu_1779_p2[0:0] == 1'b1) ? select_ln571_8_fu_1771_p3 : select_ln571_7_fu_1764_p3);

assign in_local_V_2_fu_1946_p3 = ((or_ln571_5_fu_1940_p2[0:0] == 1'b1) ? select_ln571_13_fu_1932_p3 : select_ln571_12_fu_1925_p3);

assign in_local_V_3_fu_2107_p3 = ((or_ln571_7_fu_2101_p2[0:0] == 1'b1) ? select_ln571_18_fu_2093_p3 : select_ln571_17_fu_2086_p3);

assign in_local_V_4_fu_2268_p3 = ((or_ln571_9_fu_2262_p2[0:0] == 1'b1) ? select_ln571_23_fu_2254_p3 : select_ln571_22_fu_2247_p3);

assign in_local_V_5_fu_2429_p3 = ((or_ln571_11_fu_2423_p2[0:0] == 1'b1) ? select_ln571_28_fu_2415_p3 : select_ln571_27_fu_2408_p3);

assign in_local_V_6_fu_2590_p3 = ((or_ln571_13_fu_2584_p2[0:0] == 1'b1) ? select_ln571_33_fu_2576_p3 : select_ln571_32_fu_2569_p3);

assign in_local_V_7_fu_554_p3 = ((or_ln571_15_fu_548_p2[0:0] == 1'b1) ? select_ln571_38_fu_540_p3 : select_ln571_37_fu_533_p3);

assign in_local_V_8_fu_2751_p3 = ((or_ln571_17_fu_2745_p2[0:0] == 1'b1) ? select_ln571_43_fu_2737_p3 : select_ln571_42_fu_2730_p3);

assign in_local_V_9_fu_2913_p3 = ((or_ln571_19_fu_2907_p2[0:0] == 1'b1) ? select_ln571_48_fu_2899_p3 : select_ln571_47_fu_2892_p3);

assign in_r_TREADY = regslice_both_in_V_data_V_U_ack_in;

assign in_struct_data_7_fu_267_p1 = in_r_TDATA_int_regslice;

assign in_struct_data_fu_372_p1 = in_V_data_V_val_reg_3379;

assign ireg_1_fu_671_p1 = grp_fu_223_p1;

assign ireg_2_fu_771_p1 = grp_fu_226_p1;

assign ireg_3_fu_871_p1 = grp_fu_229_p1;

assign ireg_4_fu_971_p1 = grp_fu_232_p1;

assign ireg_5_fu_1071_p1 = grp_fu_235_p1;

assign ireg_6_fu_1171_p1 = grp_fu_238_p1;

assign ireg_7_fu_272_p1 = grp_fu_220_p1;

assign ireg_8_fu_1271_p1 = grp_fu_241_p1;

assign ireg_9_fu_1371_p1 = grp_fu_244_p1;

assign ireg_fu_571_p1 = grp_fu_220_p1;


always @ (p_Result_23_fu_2944_p4) begin
    if (p_Result_23_fu_2944_p4[0] == 1'b1) begin
        l_fu_2954_p3 = 32'd0;
    end else if (p_Result_23_fu_2944_p4[1] == 1'b1) begin
        l_fu_2954_p3 = 32'd1;
    end else if (p_Result_23_fu_2944_p4[2] == 1'b1) begin
        l_fu_2954_p3 = 32'd2;
    end else if (p_Result_23_fu_2944_p4[3] == 1'b1) begin
        l_fu_2954_p3 = 32'd3;
    end else if (p_Result_23_fu_2944_p4[4] == 1'b1) begin
        l_fu_2954_p3 = 32'd4;
    end else if (p_Result_23_fu_2944_p4[5] == 1'b1) begin
        l_fu_2954_p3 = 32'd5;
    end else if (p_Result_23_fu_2944_p4[6] == 1'b1) begin
        l_fu_2954_p3 = 32'd6;
    end else if (p_Result_23_fu_2944_p4[7] == 1'b1) begin
        l_fu_2954_p3 = 32'd7;
    end else if (p_Result_23_fu_2944_p4[8] == 1'b1) begin
        l_fu_2954_p3 = 32'd8;
    end else if (p_Result_23_fu_2944_p4[9] == 1'b1) begin
        l_fu_2954_p3 = 32'd9;
    end else if (p_Result_23_fu_2944_p4[10] == 1'b1) begin
        l_fu_2954_p3 = 32'd10;
    end else if (p_Result_23_fu_2944_p4[11] == 1'b1) begin
        l_fu_2954_p3 = 32'd11;
    end else if (p_Result_23_fu_2944_p4[12] == 1'b1) begin
        l_fu_2954_p3 = 32'd12;
    end else if (p_Result_23_fu_2944_p4[13] == 1'b1) begin
        l_fu_2954_p3 = 32'd13;
    end else if (p_Result_23_fu_2944_p4[14] == 1'b1) begin
        l_fu_2954_p3 = 32'd14;
    end else if (p_Result_23_fu_2944_p4[15] == 1'b1) begin
        l_fu_2954_p3 = 32'd15;
    end else if (p_Result_23_fu_2944_p4[16] == 1'b1) begin
        l_fu_2954_p3 = 32'd16;
    end else if (p_Result_23_fu_2944_p4[17] == 1'b1) begin
        l_fu_2954_p3 = 32'd17;
    end else if (p_Result_23_fu_2944_p4[18] == 1'b1) begin
        l_fu_2954_p3 = 32'd18;
    end else if (p_Result_23_fu_2944_p4[19] == 1'b1) begin
        l_fu_2954_p3 = 32'd19;
    end else if (p_Result_23_fu_2944_p4[20] == 1'b1) begin
        l_fu_2954_p3 = 32'd20;
    end else if (p_Result_23_fu_2944_p4[21] == 1'b1) begin
        l_fu_2954_p3 = 32'd21;
    end else if (p_Result_23_fu_2944_p4[22] == 1'b1) begin
        l_fu_2954_p3 = 32'd22;
    end else if (p_Result_23_fu_2944_p4[23] == 1'b1) begin
        l_fu_2954_p3 = 32'd23;
    end else if (p_Result_23_fu_2944_p4[24] == 1'b1) begin
        l_fu_2954_p3 = 32'd24;
    end else if (p_Result_23_fu_2944_p4[25] == 1'b1) begin
        l_fu_2954_p3 = 32'd25;
    end else if (p_Result_23_fu_2944_p4[26] == 1'b1) begin
        l_fu_2954_p3 = 32'd26;
    end else if (p_Result_23_fu_2944_p4[27] == 1'b1) begin
        l_fu_2954_p3 = 32'd27;
    end else if (p_Result_23_fu_2944_p4[28] == 1'b1) begin
        l_fu_2954_p3 = 32'd28;
    end else if (p_Result_23_fu_2944_p4[29] == 1'b1) begin
        l_fu_2954_p3 = 32'd29;
    end else if (p_Result_23_fu_2944_p4[30] == 1'b1) begin
        l_fu_2954_p3 = 32'd30;
    end else if (p_Result_23_fu_2944_p4[31] == 1'b1) begin
        l_fu_2954_p3 = 32'd31;
    end else begin
        l_fu_2954_p3 = 32'd32;
    end
end

assign lsb_index_fu_2968_p2 = ($signed(sub_ln944_fu_2962_p2) + $signed(32'd4294967272));

assign lshr_ln947_fu_3004_p2 = 32'd4294967295 >> zext_ln947_fu_3000_p1;

assign lshr_ln958_fu_3100_p2 = zext_ln957_fu_3088_p1 >> zext_ln958_fu_3096_p1;

assign m_2_fu_3121_p3 = ((icmp_ln958_reg_4031[0:0] == 1'b1) ? lshr_ln958_fu_3100_p2 : shl_ln959_fu_3115_p2);

assign m_3_fu_3131_p2 = (m_2_fu_3121_p3 + zext_ln961_fu_3128_p1);

assign m_4_fu_3137_p4 = {{m_3_fu_3131_p2[63:1]}};

assign man_V_10_fu_917_p2 = (54'd0 - zext_ln569_3_fu_913_p1);

assign man_V_11_fu_923_p3 = ((p_Result_8_fu_879_p3[0:0] == 1'b1) ? man_V_10_fu_917_p2 : zext_ln569_3_fu_913_p1);

assign man_V_13_fu_1017_p2 = (54'd0 - zext_ln569_4_fu_1013_p1);

assign man_V_14_fu_1023_p3 = ((p_Result_10_fu_979_p3[0:0] == 1'b1) ? man_V_13_fu_1017_p2 : zext_ln569_4_fu_1013_p1);

assign man_V_16_fu_1117_p2 = (54'd0 - zext_ln569_5_fu_1113_p1);

assign man_V_17_fu_1123_p3 = ((p_Result_12_fu_1079_p3[0:0] == 1'b1) ? man_V_16_fu_1117_p2 : zext_ln569_5_fu_1113_p1);

assign man_V_19_fu_1217_p2 = (54'd0 - zext_ln569_6_fu_1213_p1);

assign man_V_1_fu_617_p2 = (54'd0 - zext_ln569_fu_613_p1);

assign man_V_20_fu_1223_p3 = ((p_Result_14_fu_1179_p3[0:0] == 1'b1) ? man_V_19_fu_1217_p2 : zext_ln569_6_fu_1213_p1);

assign man_V_22_fu_318_p2 = (54'd0 - zext_ln569_7_fu_314_p1);

assign man_V_23_fu_324_p3 = ((p_Result_16_fu_280_p3[0:0] == 1'b1) ? man_V_22_fu_318_p2 : zext_ln569_7_fu_314_p1);

assign man_V_25_fu_1317_p2 = (54'd0 - zext_ln569_8_fu_1313_p1);

assign man_V_26_fu_1323_p3 = ((p_Result_18_fu_1279_p3[0:0] == 1'b1) ? man_V_25_fu_1317_p2 : zext_ln569_8_fu_1313_p1);

assign man_V_28_fu_1417_p2 = (54'd0 - zext_ln569_9_fu_1413_p1);

assign man_V_29_fu_1423_p3 = ((p_Result_20_fu_1379_p3[0:0] == 1'b1) ? man_V_28_fu_1417_p2 : zext_ln569_9_fu_1413_p1);

assign man_V_2_fu_623_p3 = ((p_Result_2_fu_579_p3[0:0] == 1'b1) ? man_V_1_fu_617_p2 : zext_ln569_fu_613_p1);

assign man_V_4_fu_717_p2 = (54'd0 - zext_ln569_1_fu_713_p1);

assign man_V_5_fu_723_p3 = ((p_Result_4_fu_679_p3[0:0] == 1'b1) ? man_V_4_fu_717_p2 : zext_ln569_1_fu_713_p1);

assign man_V_7_fu_817_p2 = (54'd0 - zext_ln569_2_fu_813_p1);

assign man_V_8_fu_823_p3 = ((p_Result_6_fu_779_p3[0:0] == 1'b1) ? man_V_7_fu_817_p2 : zext_ln569_2_fu_813_p1);

assign or_ln33_1_fu_3339_p2 = (in_struct_last_V_3_reg_3429 | in_struct_last_V_2_reg_3418);

assign or_ln33_2_fu_3343_p2 = (or_ln33_1_fu_3339_p2 | in_struct_last_V_1_reg_3407);

assign or_ln33_3_fu_3348_p2 = (or_ln33_fu_3335_p2 | or_ln33_2_fu_3343_p2);

assign or_ln33_4_fu_3354_p2 = (in_struct_last_V_5_reg_3451 | in_struct_last_V_4_reg_3440);

assign or_ln33_5_fu_3358_p2 = (in_struct_last_V_8_reg_3564 | in_struct_last_V_7_reg_3514);

assign or_ln33_6_fu_3362_p2 = (or_ln33_5_fu_3358_p2 | in_struct_last_V_6_reg_3456);

assign or_ln33_7_fu_3367_p2 = (or_ln33_6_fu_3362_p2 | or_ln33_4_fu_3354_p2);

assign or_ln33_fu_3335_p2 = (in_struct_last_V_reg_3396 | in_struct_last_V_9_reg_3385);

assign or_ln571_10_fu_2395_p2 = (icmp_ln571_5_reg_3789 | and_ln603_5_fu_2382_p2);

assign or_ln571_11_fu_2423_p2 = (or_ln571_10_fu_2395_p2 | and_ln581_5_fu_2354_p2);

assign or_ln571_12_fu_2556_p2 = (icmp_ln571_6_reg_3831 | and_ln603_6_fu_2543_p2);

assign or_ln571_13_fu_2584_p2 = (or_ln571_12_fu_2556_p2 | and_ln581_6_fu_2515_p2);

assign or_ln571_14_fu_520_p2 = (icmp_ln571_7_reg_3471 | and_ln603_7_fu_507_p2);

assign or_ln571_15_fu_548_p2 = (or_ln571_14_fu_520_p2 | and_ln581_7_fu_479_p2);

assign or_ln571_16_fu_2717_p2 = (icmp_ln571_8_reg_3873 | and_ln603_8_fu_2704_p2);

assign or_ln571_17_fu_2745_p2 = (or_ln571_16_fu_2717_p2 | and_ln581_8_fu_2676_p2);

assign or_ln571_18_fu_2879_p2 = (icmp_ln571_9_reg_3915 | and_ln603_9_fu_2866_p2);

assign or_ln571_19_fu_2907_p2 = (or_ln571_18_fu_2879_p2 | and_ln581_9_fu_2838_p2);

assign or_ln571_1_fu_1618_p2 = (or_ln571_fu_1590_p2 | and_ln581_fu_1549_p2);

assign or_ln571_2_fu_1751_p2 = (icmp_ln571_1_reg_3621 | and_ln603_1_fu_1738_p2);

assign or_ln571_3_fu_1779_p2 = (or_ln571_2_fu_1751_p2 | and_ln581_1_fu_1710_p2);

assign or_ln571_4_fu_1912_p2 = (icmp_ln571_2_reg_3663 | and_ln603_2_fu_1899_p2);

assign or_ln571_5_fu_1940_p2 = (or_ln571_4_fu_1912_p2 | and_ln581_2_fu_1871_p2);

assign or_ln571_6_fu_2073_p2 = (icmp_ln571_3_reg_3705 | and_ln603_3_fu_2060_p2);

assign or_ln571_7_fu_2101_p2 = (or_ln571_6_fu_2073_p2 | and_ln581_3_fu_2032_p2);

assign or_ln571_8_fu_2234_p2 = (icmp_ln571_4_reg_3747 | and_ln603_4_fu_2221_p2);

assign or_ln571_9_fu_2262_p2 = (or_ln571_8_fu_2234_p2 | and_ln581_4_fu_2193_p2);

assign or_ln571_fu_1590_p2 = (icmp_ln571_reg_3579 | and_ln603_fu_1577_p2);

assign or_ln581_1_fu_1727_p2 = (or_ln582_1_fu_1700_p2 | icmp_ln581_1_reg_3629);

assign or_ln581_2_fu_1888_p2 = (or_ln582_2_fu_1861_p2 | icmp_ln581_2_reg_3671);

assign or_ln581_3_fu_2049_p2 = (or_ln582_3_fu_2022_p2 | icmp_ln581_3_reg_3713);

assign or_ln581_4_fu_2210_p2 = (or_ln582_4_fu_2183_p2 | icmp_ln581_4_reg_3755);

assign or_ln581_5_fu_2371_p2 = (or_ln582_5_fu_2344_p2 | icmp_ln581_5_reg_3797);

assign or_ln581_6_fu_2532_p2 = (or_ln582_6_fu_2505_p2 | icmp_ln581_6_reg_3839);

assign or_ln581_7_fu_496_p2 = (or_ln582_7_fu_469_p2 | icmp_ln581_7_reg_3479);

assign or_ln581_8_fu_2693_p2 = (or_ln582_8_fu_2666_p2 | icmp_ln581_8_reg_3881);

assign or_ln581_9_fu_2855_p2 = (or_ln582_9_fu_2828_p2 | icmp_ln581_9_reg_3923);

assign or_ln581_fu_1566_p2 = (or_ln582_fu_1539_p2 | icmp_ln581_reg_3587);

assign or_ln582_1_fu_1700_p2 = (icmp_ln582_1_reg_3646 | icmp_ln571_1_reg_3621);

assign or_ln582_2_fu_1861_p2 = (icmp_ln582_2_reg_3688 | icmp_ln571_2_reg_3663);

assign or_ln582_3_fu_2022_p2 = (icmp_ln582_3_reg_3730 | icmp_ln571_3_reg_3705);

assign or_ln582_4_fu_2183_p2 = (icmp_ln582_4_reg_3772 | icmp_ln571_4_reg_3747);

assign or_ln582_5_fu_2344_p2 = (icmp_ln582_5_reg_3814 | icmp_ln571_5_reg_3789);

assign or_ln582_6_fu_2505_p2 = (icmp_ln582_6_reg_3856 | icmp_ln571_6_reg_3831);

assign or_ln582_7_fu_469_p2 = (icmp_ln582_7_reg_3496 | icmp_ln571_7_reg_3471);

assign or_ln582_8_fu_2666_p2 = (icmp_ln582_8_reg_3898 | icmp_ln571_8_reg_3873);

assign or_ln582_9_fu_2828_p2 = (icmp_ln582_9_reg_3940 | icmp_ln571_9_reg_3915);

assign or_ln582_fu_1539_p2 = (icmp_ln582_reg_3604 | icmp_ln571_reg_3579);

assign or_ln949_1_fu_3016_p2 = (shl_ln949_fu_3010_p2 | lshr_ln947_fu_3004_p2);

assign out_r_TVALID = regslice_both_out_V_data_V_U_vld_out;

assign out_struct_data_2_fu_3272_p1 = LD_12_reg_4062;

assign out_struct_last_V_fu_3373_p2 = (or_ln33_7_fu_3367_p2 | or_ln33_3_fu_3348_p2);

assign p_Result_10_fu_979_p3 = ireg_4_fu_971_p1[32'd63];

assign p_Result_11_fu_1005_p3 = {{1'd1}, {trunc_ln565_4_fu_1001_p1}};

assign p_Result_12_fu_1079_p3 = ireg_5_fu_1071_p1[32'd63];

assign p_Result_13_fu_1105_p3 = {{1'd1}, {trunc_ln565_5_fu_1101_p1}};

assign p_Result_14_fu_1179_p3 = ireg_6_fu_1171_p1[32'd63];

assign p_Result_15_fu_1205_p3 = {{1'd1}, {trunc_ln565_6_fu_1201_p1}};

assign p_Result_16_fu_280_p3 = ireg_7_fu_272_p1[32'd63];

assign p_Result_17_fu_306_p3 = {{1'd1}, {trunc_ln565_7_fu_302_p1}};

assign p_Result_18_fu_1279_p3 = ireg_8_fu_1271_p1[32'd63];

assign p_Result_19_fu_1305_p3 = {{1'd1}, {trunc_ln565_8_fu_1301_p1}};

assign p_Result_20_fu_1379_p3 = ireg_9_fu_1371_p1[32'd63];

assign p_Result_21_fu_1405_p3 = {{1'd1}, {trunc_ln565_9_fu_1401_p1}};

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_2939_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_23_fu_2944_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_2944_p4[ap_tvar_int_0] = tmp_V_2_fu_2939_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_24_fu_3048_p3 = tmp_V_2_fu_2939_p3[lsb_index_fu_2968_p2];

assign p_Result_25_fu_3185_p5 = {{zext_ln962_fu_3147_p1[63:32]}, {tmp_s_fu_3178_p3}, {zext_ln962_fu_3147_p1[22:0]}};

assign p_Result_2_fu_579_p3 = ireg_fu_571_p1[32'd63];

assign p_Result_3_fu_605_p3 = {{1'd1}, {trunc_ln565_fu_601_p1}};

assign p_Result_4_fu_679_p3 = ireg_1_fu_671_p1[32'd63];

assign p_Result_5_fu_705_p3 = {{1'd1}, {trunc_ln565_1_fu_701_p1}};

assign p_Result_6_fu_779_p3 = ireg_2_fu_771_p1[32'd63];

assign p_Result_7_fu_805_p3 = {{1'd1}, {trunc_ln565_2_fu_801_p1}};

assign p_Result_8_fu_879_p3 = ireg_3_fu_871_p1[32'd63];

assign p_Result_9_fu_905_p3 = {{1'd1}, {trunc_ln565_3_fu_901_p1}};

assign p_Result_s_fu_3151_p3 = m_3_fu_3131_p2[32'd25];

assign select_ln303_fu_3201_p3 = ((icmp_ln935_reg_4015[0:0] == 1'b1) ? 32'd0 : LD_10_fu_3197_p1);

assign select_ln571_10_fu_1905_p3 = ((icmp_ln571_2_reg_3663[0:0] == 1'b1) ? 32'd0 : shl_ln604_2_fu_1846_p2);

assign select_ln571_11_fu_1917_p3 = ((and_ln585_2_fu_1882_p2[0:0] == 1'b1) ? select_ln588_2_fu_1838_p3 : trunc_ln586_2_fu_1827_p1);

assign select_ln571_12_fu_1925_p3 = ((and_ln582_2_fu_1856_p2[0:0] == 1'b1) ? trunc_ln583_2_reg_3694 : 32'd0);

assign select_ln571_13_fu_1932_p3 = ((or_ln571_4_fu_1912_p2[0:0] == 1'b1) ? select_ln571_10_fu_1905_p3 : select_ln571_11_fu_1917_p3);

assign select_ln571_15_fu_2066_p3 = ((icmp_ln571_3_reg_3705[0:0] == 1'b1) ? 32'd0 : shl_ln604_3_fu_2007_p2);

assign select_ln571_16_fu_2078_p3 = ((and_ln585_3_fu_2043_p2[0:0] == 1'b1) ? select_ln588_3_fu_1999_p3 : trunc_ln586_3_fu_1988_p1);

assign select_ln571_17_fu_2086_p3 = ((and_ln582_3_fu_2017_p2[0:0] == 1'b1) ? trunc_ln583_3_reg_3736 : 32'd0);

assign select_ln571_18_fu_2093_p3 = ((or_ln571_6_fu_2073_p2[0:0] == 1'b1) ? select_ln571_15_fu_2066_p3 : select_ln571_16_fu_2078_p3);

assign select_ln571_1_fu_1595_p3 = ((and_ln585_fu_1560_p2[0:0] == 1'b1) ? select_ln588_fu_1516_p3 : trunc_ln586_fu_1505_p1);

assign select_ln571_20_fu_2227_p3 = ((icmp_ln571_4_reg_3747[0:0] == 1'b1) ? 32'd0 : shl_ln604_4_fu_2168_p2);

assign select_ln571_21_fu_2239_p3 = ((and_ln585_4_fu_2204_p2[0:0] == 1'b1) ? select_ln588_4_fu_2160_p3 : trunc_ln586_4_fu_2149_p1);

assign select_ln571_22_fu_2247_p3 = ((and_ln582_4_fu_2178_p2[0:0] == 1'b1) ? trunc_ln583_4_reg_3778 : 32'd0);

assign select_ln571_23_fu_2254_p3 = ((or_ln571_8_fu_2234_p2[0:0] == 1'b1) ? select_ln571_20_fu_2227_p3 : select_ln571_21_fu_2239_p3);

assign select_ln571_25_fu_2388_p3 = ((icmp_ln571_5_reg_3789[0:0] == 1'b1) ? 32'd0 : shl_ln604_5_fu_2329_p2);

assign select_ln571_26_fu_2400_p3 = ((and_ln585_5_fu_2365_p2[0:0] == 1'b1) ? select_ln588_5_fu_2321_p3 : trunc_ln586_5_fu_2310_p1);

assign select_ln571_27_fu_2408_p3 = ((and_ln582_5_fu_2339_p2[0:0] == 1'b1) ? trunc_ln583_5_reg_3820 : 32'd0);

assign select_ln571_28_fu_2415_p3 = ((or_ln571_10_fu_2395_p2[0:0] == 1'b1) ? select_ln571_25_fu_2388_p3 : select_ln571_26_fu_2400_p3);

assign select_ln571_2_fu_1603_p3 = ((and_ln582_fu_1534_p2[0:0] == 1'b1) ? trunc_ln583_reg_3610 : 32'd0);

assign select_ln571_30_fu_2549_p3 = ((icmp_ln571_6_reg_3831[0:0] == 1'b1) ? 32'd0 : shl_ln604_6_fu_2490_p2);

assign select_ln571_31_fu_2561_p3 = ((and_ln585_6_fu_2526_p2[0:0] == 1'b1) ? select_ln588_6_fu_2482_p3 : trunc_ln586_6_fu_2471_p1);

assign select_ln571_32_fu_2569_p3 = ((and_ln582_6_fu_2500_p2[0:0] == 1'b1) ? trunc_ln583_6_reg_3862 : 32'd0);

assign select_ln571_33_fu_2576_p3 = ((or_ln571_12_fu_2556_p2[0:0] == 1'b1) ? select_ln571_30_fu_2549_p3 : select_ln571_31_fu_2561_p3);

assign select_ln571_35_fu_513_p3 = ((icmp_ln571_7_reg_3471[0:0] == 1'b1) ? 32'd0 : shl_ln604_7_fu_454_p2);

assign select_ln571_36_fu_525_p3 = ((and_ln585_7_fu_490_p2[0:0] == 1'b1) ? select_ln588_7_fu_446_p3 : trunc_ln586_7_fu_434_p1);

assign select_ln571_37_fu_533_p3 = ((and_ln582_7_fu_464_p2[0:0] == 1'b1) ? trunc_ln583_7_reg_3502 : 32'd0);

assign select_ln571_38_fu_540_p3 = ((or_ln571_14_fu_520_p2[0:0] == 1'b1) ? select_ln571_35_fu_513_p3 : select_ln571_36_fu_525_p3);

assign select_ln571_3_fu_1610_p3 = ((or_ln571_fu_1590_p2[0:0] == 1'b1) ? select_ln571_fu_1583_p3 : select_ln571_1_fu_1595_p3);

assign select_ln571_40_fu_2710_p3 = ((icmp_ln571_8_reg_3873[0:0] == 1'b1) ? 32'd0 : shl_ln604_8_fu_2651_p2);

assign select_ln571_41_fu_2722_p3 = ((and_ln585_8_fu_2687_p2[0:0] == 1'b1) ? select_ln588_8_fu_2643_p3 : trunc_ln586_8_fu_2632_p1);

assign select_ln571_42_fu_2730_p3 = ((and_ln582_8_fu_2661_p2[0:0] == 1'b1) ? trunc_ln583_8_reg_3904 : 32'd0);

assign select_ln571_43_fu_2737_p3 = ((or_ln571_16_fu_2717_p2[0:0] == 1'b1) ? select_ln571_40_fu_2710_p3 : select_ln571_41_fu_2722_p3);

assign select_ln571_45_fu_2872_p3 = ((icmp_ln571_9_reg_3915[0:0] == 1'b1) ? 32'd0 : shl_ln604_9_fu_2813_p2);

assign select_ln571_46_fu_2884_p3 = ((and_ln585_9_fu_2849_p2[0:0] == 1'b1) ? select_ln588_9_fu_2805_p3 : trunc_ln586_9_fu_2793_p1);

assign select_ln571_47_fu_2892_p3 = ((and_ln582_9_fu_2823_p2[0:0] == 1'b1) ? trunc_ln583_9_reg_3946 : 32'd0);

assign select_ln571_48_fu_2899_p3 = ((or_ln571_18_fu_2879_p2[0:0] == 1'b1) ? select_ln571_45_fu_2872_p3 : select_ln571_46_fu_2884_p3);

assign select_ln571_5_fu_1744_p3 = ((icmp_ln571_1_reg_3621[0:0] == 1'b1) ? 32'd0 : shl_ln604_1_fu_1685_p2);

assign select_ln571_6_fu_1756_p3 = ((and_ln585_1_fu_1721_p2[0:0] == 1'b1) ? select_ln588_1_fu_1677_p3 : trunc_ln586_1_fu_1666_p1);

assign select_ln571_7_fu_1764_p3 = ((and_ln582_1_fu_1695_p2[0:0] == 1'b1) ? trunc_ln583_1_reg_3652 : 32'd0);

assign select_ln571_8_fu_1771_p3 = ((or_ln571_2_fu_1751_p2[0:0] == 1'b1) ? select_ln571_5_fu_1744_p3 : select_ln571_6_fu_1756_p3);

assign select_ln571_fu_1583_p3 = ((icmp_ln571_reg_3579[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_1524_p2);

assign select_ln588_1_fu_1677_p3 = ((tmp_4_fu_1670_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_2_fu_1838_p3 = ((tmp_7_fu_1831_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_3_fu_1999_p3 = ((tmp_10_fu_1992_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_4_fu_2160_p3 = ((tmp_13_fu_2153_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_5_fu_2321_p3 = ((tmp_16_fu_2314_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_6_fu_2482_p3 = ((tmp_19_fu_2475_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_7_fu_446_p3 = ((tmp_22_fu_438_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_8_fu_2643_p3 = ((tmp_25_fu_2636_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_9_fu_2805_p3 = ((tmp_28_fu_2797_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_1516_p3 = ((tmp_1_fu_1509_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln943_fu_3159_p3 = ((p_Result_s_fu_3151_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln946_fu_3062_p3 = ((icmp_ln946_fu_2984_p2[0:0] == 1'b1) ? icmp_ln949_fu_3028_p2 : p_Result_24_fu_3048_p3);

assign select_ln958_fu_3076_p3 = ((icmp_ln958_fu_3056_p2[0:0] == 1'b1) ? select_ln946_fu_3062_p3 : and_ln949_1_fu_3070_p2);

assign sext_ln581_1_fu_1637_p1 = sh_amt_1_fu_1632_p3;

assign sext_ln581_2_fu_1798_p1 = sh_amt_2_fu_1793_p3;

assign sext_ln581_3_fu_1959_p1 = sh_amt_3_fu_1954_p3;

assign sext_ln581_4_fu_2120_p1 = sh_amt_4_fu_2115_p3;

assign sext_ln581_5_fu_2281_p1 = sh_amt_5_fu_2276_p3;

assign sext_ln581_6_fu_2442_p1 = sh_amt_6_fu_2437_p3;

assign sext_ln581_7_fu_405_p1 = sh_amt_7_fu_400_p3;

assign sext_ln581_8_fu_2603_p1 = sh_amt_8_fu_2598_p3;

assign sext_ln581_9_fu_2764_p1 = sh_amt_9_fu_2759_p3;

assign sext_ln581_fu_1476_p1 = sh_amt_fu_1471_p3;

assign sh_amt_1_fu_1632_p3 = ((icmp_ln581_1_reg_3629[0:0] == 1'b1) ? add_ln581_1_reg_3636 : sub_ln581_1_reg_3641);

assign sh_amt_2_fu_1793_p3 = ((icmp_ln581_2_reg_3671[0:0] == 1'b1) ? add_ln581_2_reg_3678 : sub_ln581_2_reg_3683);

assign sh_amt_3_fu_1954_p3 = ((icmp_ln581_3_reg_3713[0:0] == 1'b1) ? add_ln581_3_reg_3720 : sub_ln581_3_reg_3725);

assign sh_amt_4_fu_2115_p3 = ((icmp_ln581_4_reg_3755[0:0] == 1'b1) ? add_ln581_4_reg_3762 : sub_ln581_4_reg_3767);

assign sh_amt_5_fu_2276_p3 = ((icmp_ln581_5_reg_3797[0:0] == 1'b1) ? add_ln581_5_reg_3804 : sub_ln581_5_reg_3809);

assign sh_amt_6_fu_2437_p3 = ((icmp_ln581_6_reg_3839[0:0] == 1'b1) ? add_ln581_6_reg_3846 : sub_ln581_6_reg_3851);

assign sh_amt_7_fu_400_p3 = ((icmp_ln581_7_reg_3479[0:0] == 1'b1) ? add_ln581_7_reg_3486 : sub_ln581_7_reg_3491);

assign sh_amt_8_fu_2598_p3 = ((icmp_ln581_8_reg_3881[0:0] == 1'b1) ? add_ln581_8_reg_3888 : sub_ln581_8_reg_3893);

assign sh_amt_9_fu_2759_p3 = ((icmp_ln581_9_reg_3923[0:0] == 1'b1) ? add_ln581_9_reg_3930 : sub_ln581_9_reg_3935);

assign sh_amt_fu_1471_p3 = ((icmp_ln581_reg_3587[0:0] == 1'b1) ? add_ln581_reg_3594 : sub_ln581_reg_3599);

assign shl_ln604_1_fu_1685_p2 = trunc_ln583_1_reg_3652 << sext_ln581_1_fu_1637_p1;

assign shl_ln604_2_fu_1846_p2 = trunc_ln583_2_reg_3694 << sext_ln581_2_fu_1798_p1;

assign shl_ln604_3_fu_2007_p2 = trunc_ln583_3_reg_3736 << sext_ln581_3_fu_1959_p1;

assign shl_ln604_4_fu_2168_p2 = trunc_ln583_4_reg_3778 << sext_ln581_4_fu_2120_p1;

assign shl_ln604_5_fu_2329_p2 = trunc_ln583_5_reg_3820 << sext_ln581_5_fu_2281_p1;

assign shl_ln604_6_fu_2490_p2 = trunc_ln583_6_reg_3862 << sext_ln581_6_fu_2442_p1;

assign shl_ln604_7_fu_454_p2 = trunc_ln583_7_reg_3502 << sext_ln581_7_fu_405_p1;

assign shl_ln604_8_fu_2651_p2 = trunc_ln583_8_reg_3904 << sext_ln581_8_fu_2603_p1;

assign shl_ln604_9_fu_2813_p2 = trunc_ln583_9_reg_3946 << sext_ln581_9_fu_2764_p1;

assign shl_ln604_fu_1524_p2 = trunc_ln583_reg_3610 << sext_ln581_fu_1476_p1;

assign shl_ln949_fu_3010_p2 = 32'd1 << lsb_index_fu_2968_p2;

assign shl_ln959_fu_3115_p2 = zext_ln957_fu_3088_p1 << zext_ln959_fu_3111_p1;

assign sub_ln581_1_fu_755_p2 = (12'd16 - F2_1_fu_737_p2);

assign sub_ln581_2_fu_855_p2 = (12'd16 - F2_2_fu_837_p2);

assign sub_ln581_3_fu_955_p2 = (12'd16 - F2_3_fu_937_p2);

assign sub_ln581_4_fu_1055_p2 = (12'd16 - F2_4_fu_1037_p2);

assign sub_ln581_5_fu_1155_p2 = (12'd16 - F2_5_fu_1137_p2);

assign sub_ln581_6_fu_1255_p2 = (12'd16 - F2_6_fu_1237_p2);

assign sub_ln581_7_fu_356_p2 = (12'd16 - F2_7_fu_338_p2);

assign sub_ln581_8_fu_1355_p2 = (12'd16 - F2_8_fu_1337_p2);

assign sub_ln581_9_fu_1455_p2 = (12'd16 - F2_9_fu_1437_p2);

assign sub_ln581_fu_655_p2 = (12'd16 - F2_fu_637_p2);

assign sub_ln944_fu_2962_p2 = (32'd32 - l_fu_2954_p3);

assign sub_ln947_fu_2994_p2 = ($signed(6'd57) - $signed(trunc_ln947_fu_2990_p1));

assign sub_ln959_fu_3106_p2 = (32'd25 - sub_ln944_reg_4025);

assign sub_ln964_1_fu_3213_p2 = (8'd16 - trunc_ln943_1_fu_3209_p1);

assign sub_ln964_2_fu_3249_p2 = (8'd16 - trunc_ln943_2_fu_3245_p1);

assign sub_ln964_3_fu_3285_p2 = (8'd16 - trunc_ln943_3_fu_3281_p1);

assign sub_ln964_4_fu_3312_p2 = (8'd16 - trunc_ln943_4_fu_3308_p1);

assign sub_ln964_fu_3167_p2 = (8'd16 - trunc_ln943_reg_4041);

assign tmp_10_fu_1992_p3 = in_V_data_V_val1_reg_3412[32'd31];

assign tmp_12_fu_2124_p4 = {{sh_amt_4_fu_2115_p3[11:5]}};

assign tmp_13_fu_2153_p3 = in_V_data_V_val3_reg_3423[32'd31];

assign tmp_15_fu_2285_p4 = {{sh_amt_5_fu_2276_p3[11:5]}};

assign tmp_16_fu_2314_p3 = in_V_data_V_val4_reg_3434[32'd31];

assign tmp_18_fu_2446_p4 = {{sh_amt_6_fu_2437_p3[11:5]}};

assign tmp_19_fu_2475_p3 = in_V_data_V_val5_reg_3445[32'd31];

assign tmp_1_fu_1509_p3 = in_V_data_V_val_reg_3379[32'd31];

assign tmp_21_fu_409_p4 = {{sh_amt_7_fu_400_p3[11:5]}};

assign tmp_22_fu_438_p3 = reg_263[32'd31];

assign tmp_24_fu_2607_p4 = {{sh_amt_8_fu_2598_p3[11:5]}};

assign tmp_25_fu_2636_p3 = in_V_data_V_val8_reg_3508[32'd31];

assign tmp_27_fu_2768_p4 = {{sh_amt_9_fu_2759_p3[11:5]}};

assign tmp_28_fu_2797_p3 = reg_263[32'd31];

assign tmp_30_fu_2974_p4 = {{lsb_index_fu_2968_p2[31:1]}};

assign tmp_31_fu_3034_p3 = lsb_index_fu_2968_p2[32'd31];

assign tmp_3_fu_1641_p4 = {{sh_amt_1_fu_1632_p3[11:5]}};

assign tmp_4_fu_1670_p3 = in_V_data_V_val2_reg_3390[32'd31];

assign tmp_6_fu_1802_p4 = {{sh_amt_2_fu_1793_p3[11:5]}};

assign tmp_7_fu_1831_p3 = in_V_data_V_val6_reg_3401[32'd31];

assign tmp_9_fu_1963_p4 = {{sh_amt_3_fu_1954_p3[11:5]}};

assign tmp_V_2_fu_2939_p3 = ((p_Result_22_reg_4004[0:0] == 1'b1) ? tmp_V_reg_4010 : p_Val2_10_reg_3997);

assign tmp_V_fu_2929_p2 = (32'd0 - p_Val2_10_reg_3997);

assign tmp_fu_1480_p4 = {{sh_amt_fu_1471_p3[11:5]}};

assign tmp_s_fu_3178_p3 = {{p_Result_22_reg_4004}, {add_ln964_fu_3172_p2}};

assign trunc_ln555_1_fu_675_p1 = ireg_1_fu_671_p1[62:0];

assign trunc_ln555_2_fu_775_p1 = ireg_2_fu_771_p1[62:0];

assign trunc_ln555_3_fu_875_p1 = ireg_3_fu_871_p1[62:0];

assign trunc_ln555_4_fu_975_p1 = ireg_4_fu_971_p1[62:0];

assign trunc_ln555_5_fu_1075_p1 = ireg_5_fu_1071_p1[62:0];

assign trunc_ln555_6_fu_1175_p1 = ireg_6_fu_1171_p1[62:0];

assign trunc_ln555_7_fu_276_p1 = ireg_7_fu_272_p1[62:0];

assign trunc_ln555_8_fu_1275_p1 = ireg_8_fu_1271_p1[62:0];

assign trunc_ln555_9_fu_1375_p1 = ireg_9_fu_1371_p1[62:0];

assign trunc_ln555_fu_575_p1 = ireg_fu_571_p1[62:0];

assign trunc_ln565_1_fu_701_p1 = ireg_1_fu_671_p1[51:0];

assign trunc_ln565_2_fu_801_p1 = ireg_2_fu_771_p1[51:0];

assign trunc_ln565_3_fu_901_p1 = ireg_3_fu_871_p1[51:0];

assign trunc_ln565_4_fu_1001_p1 = ireg_4_fu_971_p1[51:0];

assign trunc_ln565_5_fu_1101_p1 = ireg_5_fu_1071_p1[51:0];

assign trunc_ln565_6_fu_1201_p1 = ireg_6_fu_1171_p1[51:0];

assign trunc_ln565_7_fu_302_p1 = ireg_7_fu_272_p1[51:0];

assign trunc_ln565_8_fu_1301_p1 = ireg_8_fu_1271_p1[51:0];

assign trunc_ln565_9_fu_1401_p1 = ireg_9_fu_1371_p1[51:0];

assign trunc_ln565_fu_601_p1 = ireg_fu_571_p1[51:0];

assign trunc_ln583_1_fu_767_p1 = man_V_5_fu_723_p3[31:0];

assign trunc_ln583_2_fu_867_p1 = man_V_8_fu_823_p3[31:0];

assign trunc_ln583_3_fu_967_p1 = man_V_11_fu_923_p3[31:0];

assign trunc_ln583_4_fu_1067_p1 = man_V_14_fu_1023_p3[31:0];

assign trunc_ln583_5_fu_1167_p1 = man_V_17_fu_1123_p3[31:0];

assign trunc_ln583_6_fu_1267_p1 = man_V_20_fu_1223_p3[31:0];

assign trunc_ln583_7_fu_368_p1 = man_V_23_fu_324_p3[31:0];

assign trunc_ln583_8_fu_1367_p1 = man_V_26_fu_1323_p3[31:0];

assign trunc_ln583_9_fu_1467_p1 = man_V_29_fu_1423_p3[31:0];

assign trunc_ln583_fu_667_p1 = man_V_2_fu_623_p3[31:0];

assign trunc_ln586_1_fu_1666_p1 = ashr_ln586_1_fu_1661_p2[31:0];

assign trunc_ln586_2_fu_1827_p1 = ashr_ln586_2_fu_1822_p2[31:0];

assign trunc_ln586_3_fu_1988_p1 = ashr_ln586_3_fu_1983_p2[31:0];

assign trunc_ln586_4_fu_2149_p1 = ashr_ln586_4_fu_2144_p2[31:0];

assign trunc_ln586_5_fu_2310_p1 = ashr_ln586_5_fu_2305_p2[31:0];

assign trunc_ln586_6_fu_2471_p1 = ashr_ln586_6_fu_2466_p2[31:0];

assign trunc_ln586_7_fu_434_p1 = ashr_ln586_7_fu_429_p2[31:0];

assign trunc_ln586_8_fu_2632_p1 = ashr_ln586_8_fu_2627_p2[31:0];

assign trunc_ln586_9_fu_2793_p1 = ashr_ln586_9_fu_2788_p2[31:0];

assign trunc_ln586_fu_1505_p1 = ashr_ln586_fu_1500_p2[31:0];

assign trunc_ln943_1_fu_3209_p1 = grp_fu_255_p3[7:0];

assign trunc_ln943_2_fu_3245_p1 = grp_fu_255_p3[7:0];

assign trunc_ln943_3_fu_3281_p1 = grp_fu_255_p3[7:0];

assign trunc_ln943_4_fu_3308_p1 = grp_fu_255_p3[7:0];

assign trunc_ln943_fu_3084_p1 = l_fu_2954_p3[7:0];

assign trunc_ln947_fu_2990_p1 = sub_ln944_fu_2962_p2[5:0];

assign xor_ln571_1_fu_1690_p2 = (icmp_ln571_1_reg_3621 ^ 1'd1);

assign xor_ln571_2_fu_1851_p2 = (icmp_ln571_2_reg_3663 ^ 1'd1);

assign xor_ln571_3_fu_2012_p2 = (icmp_ln571_3_reg_3705 ^ 1'd1);

assign xor_ln571_4_fu_2173_p2 = (icmp_ln571_4_reg_3747 ^ 1'd1);

assign xor_ln571_5_fu_2334_p2 = (icmp_ln571_5_reg_3789 ^ 1'd1);

assign xor_ln571_6_fu_2495_p2 = (icmp_ln571_6_reg_3831 ^ 1'd1);

assign xor_ln571_7_fu_459_p2 = (icmp_ln571_7_reg_3471 ^ 1'd1);

assign xor_ln571_8_fu_2656_p2 = (icmp_ln571_8_reg_3873 ^ 1'd1);

assign xor_ln571_9_fu_2818_p2 = (icmp_ln571_9_reg_3915 ^ 1'd1);

assign xor_ln571_fu_1529_p2 = (icmp_ln571_reg_3579 ^ 1'd1);

assign xor_ln581_1_fu_1732_p2 = (or_ln581_1_fu_1727_p2 ^ 1'd1);

assign xor_ln581_2_fu_1893_p2 = (or_ln581_2_fu_1888_p2 ^ 1'd1);

assign xor_ln581_3_fu_2054_p2 = (or_ln581_3_fu_2049_p2 ^ 1'd1);

assign xor_ln581_4_fu_2215_p2 = (or_ln581_4_fu_2210_p2 ^ 1'd1);

assign xor_ln581_5_fu_2376_p2 = (or_ln581_5_fu_2371_p2 ^ 1'd1);

assign xor_ln581_6_fu_2537_p2 = (or_ln581_6_fu_2532_p2 ^ 1'd1);

assign xor_ln581_7_fu_501_p2 = (or_ln581_7_fu_496_p2 ^ 1'd1);

assign xor_ln581_8_fu_2698_p2 = (or_ln581_8_fu_2693_p2 ^ 1'd1);

assign xor_ln581_9_fu_2860_p2 = (or_ln581_9_fu_2855_p2 ^ 1'd1);

assign xor_ln581_fu_1571_p2 = (or_ln581_fu_1566_p2 ^ 1'd1);

assign xor_ln582_1_fu_1704_p2 = (or_ln582_1_fu_1700_p2 ^ 1'd1);

assign xor_ln582_2_fu_1865_p2 = (or_ln582_2_fu_1861_p2 ^ 1'd1);

assign xor_ln582_3_fu_2026_p2 = (or_ln582_3_fu_2022_p2 ^ 1'd1);

assign xor_ln582_4_fu_2187_p2 = (or_ln582_4_fu_2183_p2 ^ 1'd1);

assign xor_ln582_5_fu_2348_p2 = (or_ln582_5_fu_2344_p2 ^ 1'd1);

assign xor_ln582_6_fu_2509_p2 = (or_ln582_6_fu_2505_p2 ^ 1'd1);

assign xor_ln582_7_fu_473_p2 = (or_ln582_7_fu_469_p2 ^ 1'd1);

assign xor_ln582_8_fu_2670_p2 = (or_ln582_8_fu_2666_p2 ^ 1'd1);

assign xor_ln582_9_fu_2832_p2 = (or_ln582_9_fu_2828_p2 ^ 1'd1);

assign xor_ln582_fu_1543_p2 = (or_ln582_fu_1539_p2 ^ 1'd1);

assign xor_ln949_fu_3042_p2 = (tmp_31_fu_3034_p3 ^ 1'd1);

assign zext_ln455_1_fu_697_p1 = exp_tmp_1_fu_687_p4;

assign zext_ln455_2_fu_797_p1 = exp_tmp_2_fu_787_p4;

assign zext_ln455_3_fu_897_p1 = exp_tmp_3_fu_887_p4;

assign zext_ln455_4_fu_997_p1 = exp_tmp_4_fu_987_p4;

assign zext_ln455_5_fu_1097_p1 = exp_tmp_5_fu_1087_p4;

assign zext_ln455_6_fu_1197_p1 = exp_tmp_6_fu_1187_p4;

assign zext_ln455_7_fu_298_p1 = exp_tmp_7_fu_288_p4;

assign zext_ln455_8_fu_1297_p1 = exp_tmp_8_fu_1287_p4;

assign zext_ln455_9_fu_1397_p1 = exp_tmp_9_fu_1387_p4;

assign zext_ln455_fu_597_p1 = exp_tmp_fu_587_p4;

assign zext_ln569_1_fu_713_p1 = p_Result_5_fu_705_p3;

assign zext_ln569_2_fu_813_p1 = p_Result_7_fu_805_p3;

assign zext_ln569_3_fu_913_p1 = p_Result_9_fu_905_p3;

assign zext_ln569_4_fu_1013_p1 = p_Result_11_fu_1005_p3;

assign zext_ln569_5_fu_1113_p1 = p_Result_13_fu_1105_p3;

assign zext_ln569_6_fu_1213_p1 = p_Result_15_fu_1205_p3;

assign zext_ln569_7_fu_314_p1 = p_Result_17_fu_306_p3;

assign zext_ln569_8_fu_1313_p1 = p_Result_19_fu_1305_p3;

assign zext_ln569_9_fu_1413_p1 = p_Result_21_fu_1405_p3;

assign zext_ln569_fu_613_p1 = p_Result_3_fu_605_p3;

assign zext_ln586_1_fu_1657_p1 = $unsigned(sext_ln581_1_fu_1637_p1);

assign zext_ln586_2_fu_1818_p1 = $unsigned(sext_ln581_2_fu_1798_p1);

assign zext_ln586_3_fu_1979_p1 = $unsigned(sext_ln581_3_fu_1959_p1);

assign zext_ln586_4_fu_2140_p1 = $unsigned(sext_ln581_4_fu_2120_p1);

assign zext_ln586_5_fu_2301_p1 = $unsigned(sext_ln581_5_fu_2281_p1);

assign zext_ln586_6_fu_2462_p1 = $unsigned(sext_ln581_6_fu_2442_p1);

assign zext_ln586_7_fu_425_p1 = $unsigned(sext_ln581_7_fu_405_p1);

assign zext_ln586_8_fu_2623_p1 = $unsigned(sext_ln581_8_fu_2603_p1);

assign zext_ln586_9_fu_2784_p1 = $unsigned(sext_ln581_9_fu_2764_p1);

assign zext_ln586_fu_1496_p1 = $unsigned(sext_ln581_fu_1476_p1);

assign zext_ln947_fu_3000_p1 = sub_ln947_fu_2994_p2;

assign zext_ln957_fu_3088_p1 = tmp_V_2_reg_4020;

assign zext_ln958_fu_3096_p1 = add_ln958_fu_3091_p2;

assign zext_ln959_fu_3111_p1 = sub_ln959_fu_3106_p2;

assign zext_ln961_fu_3128_p1 = select_ln958_reg_4036;

assign zext_ln962_fu_3147_p1 = m_4_fu_3137_p4;

always @ (posedge ap_clk) begin
    LD_11_reg_4051[22:0] <= 23'b00000000000000000000000;
    LD_11_reg_4051[31] <= 1'b0;
    LD_12_reg_4062[22:0] <= 23'b00000000000000000000000;
    LD_12_reg_4062[31] <= 1'b0;
    LD_13_reg_4073[22:0] <= 23'b00000000000000000000000;
    LD_13_reg_4073[31] <= 1'b0;
    LD_14_reg_4079[22:0] <= 23'b00000000000000000000000;
    LD_14_reg_4079[31] <= 1'b0;
end

endmodule //myproject_axi
