// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.973116,HLS_SYN_LAT=7,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1919,HLS_SYN_LUT=9198,HLS_VERSION=2020_1}" *)

module myproject_axi (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TLAST
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input  [319:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [39:0] in_r_TKEEP;
input  [39:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
output  [319:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [39:0] out_r_TKEEP;
output  [39:0] out_r_TSTRB;
output  [0:0] out_r_TLAST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [319:0] p_0_reg_3050;
reg   [0:0] tmp_last_V_reg_3064;
wire   [53:0] man_V_2_fu_430_p3;
reg   [53:0] man_V_2_reg_3119;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln580_fu_438_p2;
reg   [0:0] icmp_ln580_reg_3124;
wire   [0:0] icmp_ln590_fu_450_p2;
reg   [0:0] icmp_ln590_reg_3131;
wire   [11:0] add_ln590_fu_456_p2;
reg   [11:0] add_ln590_reg_3138;
wire   [11:0] sub_ln590_fu_462_p2;
reg   [11:0] sub_ln590_reg_3143;
wire   [0:0] icmp_ln591_fu_468_p2;
reg   [0:0] icmp_ln591_reg_3148;
wire   [31:0] trunc_ln592_fu_474_p1;
reg   [31:0] trunc_ln592_reg_3154;
wire   [53:0] man_V_5_fu_530_p3;
reg   [53:0] man_V_5_reg_3160;
wire   [0:0] icmp_ln580_1_fu_538_p2;
reg   [0:0] icmp_ln580_1_reg_3165;
wire   [0:0] icmp_ln590_1_fu_550_p2;
reg   [0:0] icmp_ln590_1_reg_3172;
wire   [11:0] add_ln590_1_fu_556_p2;
reg   [11:0] add_ln590_1_reg_3179;
wire   [11:0] sub_ln590_1_fu_562_p2;
reg   [11:0] sub_ln590_1_reg_3184;
wire   [0:0] icmp_ln591_1_fu_568_p2;
reg   [0:0] icmp_ln591_1_reg_3189;
wire   [31:0] trunc_ln592_1_fu_574_p1;
reg   [31:0] trunc_ln592_1_reg_3195;
wire   [53:0] man_V_8_fu_630_p3;
reg   [53:0] man_V_8_reg_3201;
wire   [0:0] icmp_ln580_2_fu_638_p2;
reg   [0:0] icmp_ln580_2_reg_3206;
wire   [0:0] icmp_ln590_2_fu_650_p2;
reg   [0:0] icmp_ln590_2_reg_3213;
wire   [11:0] add_ln590_2_fu_656_p2;
reg   [11:0] add_ln590_2_reg_3220;
wire   [11:0] sub_ln590_2_fu_662_p2;
reg   [11:0] sub_ln590_2_reg_3225;
wire   [0:0] icmp_ln591_2_fu_668_p2;
reg   [0:0] icmp_ln591_2_reg_3230;
wire   [31:0] trunc_ln592_2_fu_674_p1;
reg   [31:0] trunc_ln592_2_reg_3236;
wire   [53:0] man_V_11_fu_730_p3;
reg   [53:0] man_V_11_reg_3242;
wire   [0:0] icmp_ln580_3_fu_738_p2;
reg   [0:0] icmp_ln580_3_reg_3247;
wire   [0:0] icmp_ln590_3_fu_750_p2;
reg   [0:0] icmp_ln590_3_reg_3254;
wire   [11:0] add_ln590_3_fu_756_p2;
reg   [11:0] add_ln590_3_reg_3261;
wire   [11:0] sub_ln590_3_fu_762_p2;
reg   [11:0] sub_ln590_3_reg_3266;
wire   [0:0] icmp_ln591_3_fu_768_p2;
reg   [0:0] icmp_ln591_3_reg_3271;
wire   [31:0] trunc_ln592_3_fu_774_p1;
reg   [31:0] trunc_ln592_3_reg_3277;
wire   [53:0] man_V_14_fu_830_p3;
reg   [53:0] man_V_14_reg_3283;
wire   [0:0] icmp_ln580_4_fu_838_p2;
reg   [0:0] icmp_ln580_4_reg_3288;
wire   [0:0] icmp_ln590_4_fu_850_p2;
reg   [0:0] icmp_ln590_4_reg_3295;
wire   [11:0] add_ln590_4_fu_856_p2;
reg   [11:0] add_ln590_4_reg_3302;
wire   [11:0] sub_ln590_4_fu_862_p2;
reg   [11:0] sub_ln590_4_reg_3307;
wire   [0:0] icmp_ln591_4_fu_868_p2;
reg   [0:0] icmp_ln591_4_reg_3312;
wire   [31:0] trunc_ln592_4_fu_874_p1;
reg   [31:0] trunc_ln592_4_reg_3318;
wire   [53:0] man_V_17_fu_930_p3;
reg   [53:0] man_V_17_reg_3324;
wire   [0:0] icmp_ln580_5_fu_938_p2;
reg   [0:0] icmp_ln580_5_reg_3329;
wire   [0:0] icmp_ln590_5_fu_950_p2;
reg   [0:0] icmp_ln590_5_reg_3336;
wire   [11:0] add_ln590_5_fu_956_p2;
reg   [11:0] add_ln590_5_reg_3343;
wire   [11:0] sub_ln590_5_fu_962_p2;
reg   [11:0] sub_ln590_5_reg_3348;
wire   [0:0] icmp_ln591_5_fu_968_p2;
reg   [0:0] icmp_ln591_5_reg_3353;
wire   [31:0] trunc_ln592_5_fu_974_p1;
reg   [31:0] trunc_ln592_5_reg_3359;
wire   [53:0] man_V_20_fu_1030_p3;
reg   [53:0] man_V_20_reg_3365;
wire   [0:0] icmp_ln580_6_fu_1038_p2;
reg   [0:0] icmp_ln580_6_reg_3370;
wire   [0:0] icmp_ln590_6_fu_1050_p2;
reg   [0:0] icmp_ln590_6_reg_3377;
wire   [11:0] add_ln590_6_fu_1056_p2;
reg   [11:0] add_ln590_6_reg_3384;
wire   [11:0] sub_ln590_6_fu_1062_p2;
reg   [11:0] sub_ln590_6_reg_3389;
wire   [0:0] icmp_ln591_6_fu_1068_p2;
reg   [0:0] icmp_ln591_6_reg_3394;
wire   [31:0] trunc_ln592_6_fu_1074_p1;
reg   [31:0] trunc_ln592_6_reg_3400;
wire   [53:0] man_V_23_fu_1130_p3;
reg   [53:0] man_V_23_reg_3406;
wire   [0:0] icmp_ln580_7_fu_1138_p2;
reg   [0:0] icmp_ln580_7_reg_3411;
wire   [0:0] icmp_ln590_7_fu_1150_p2;
reg   [0:0] icmp_ln590_7_reg_3418;
wire   [11:0] add_ln590_7_fu_1156_p2;
reg   [11:0] add_ln590_7_reg_3425;
wire   [11:0] sub_ln590_7_fu_1162_p2;
reg   [11:0] sub_ln590_7_reg_3430;
wire   [0:0] icmp_ln591_7_fu_1168_p2;
reg   [0:0] icmp_ln591_7_reg_3435;
wire   [31:0] trunc_ln592_7_fu_1174_p1;
reg   [31:0] trunc_ln592_7_reg_3441;
wire   [53:0] man_V_26_fu_1230_p3;
reg   [53:0] man_V_26_reg_3447;
wire   [0:0] icmp_ln580_8_fu_1238_p2;
reg   [0:0] icmp_ln580_8_reg_3452;
wire   [0:0] icmp_ln590_8_fu_1250_p2;
reg   [0:0] icmp_ln590_8_reg_3459;
wire   [11:0] add_ln590_8_fu_1256_p2;
reg   [11:0] add_ln590_8_reg_3466;
wire   [11:0] sub_ln590_8_fu_1262_p2;
reg   [11:0] sub_ln590_8_reg_3471;
wire   [0:0] icmp_ln591_8_fu_1268_p2;
reg   [0:0] icmp_ln591_8_reg_3476;
wire   [31:0] trunc_ln592_8_fu_1274_p1;
reg   [31:0] trunc_ln592_8_reg_3482;
wire   [53:0] man_V_29_fu_1330_p3;
reg   [53:0] man_V_29_reg_3488;
wire   [0:0] icmp_ln580_9_fu_1338_p2;
reg   [0:0] icmp_ln580_9_reg_3493;
wire   [0:0] icmp_ln590_9_fu_1350_p2;
reg   [0:0] icmp_ln590_9_reg_3500;
wire   [11:0] add_ln590_9_fu_1356_p2;
reg   [11:0] add_ln590_9_reg_3507;
wire   [11:0] sub_ln590_9_fu_1362_p2;
reg   [11:0] sub_ln590_9_reg_3512;
wire   [0:0] icmp_ln591_9_fu_1368_p2;
reg   [0:0] icmp_ln591_9_reg_3517;
wire   [31:0] trunc_ln592_9_fu_1374_p1;
reg   [31:0] trunc_ln592_9_reg_3523;
wire   [31:0] in_local_V_fu_1509_p3;
reg   [31:0] in_local_V_reg_3529;
wire    ap_CS_fsm_state3;
wire   [31:0] in_local_V_1_fu_1647_p3;
reg   [31:0] in_local_V_1_reg_3534;
wire   [31:0] in_local_V_2_fu_1785_p3;
reg   [31:0] in_local_V_2_reg_3539;
wire   [31:0] in_local_V_3_fu_1923_p3;
reg   [31:0] in_local_V_3_reg_3544;
wire   [31:0] in_local_V_4_fu_2061_p3;
reg   [31:0] in_local_V_4_reg_3549;
wire   [31:0] in_local_V_5_fu_2199_p3;
reg   [31:0] in_local_V_5_reg_3554;
wire   [31:0] in_local_V_6_fu_2337_p3;
reg   [31:0] in_local_V_6_reg_3559;
wire   [31:0] in_local_V_7_fu_2475_p3;
reg   [31:0] in_local_V_7_reg_3564;
wire   [31:0] in_local_V_8_fu_2613_p3;
reg   [31:0] in_local_V_8_reg_3569;
wire   [31:0] in_local_V_9_fu_2751_p3;
reg   [31:0] in_local_V_9_reg_3574;
wire   [31:0] out_local_V_myproject_fu_182_ap_return;
reg   [31:0] out_local_V_reg_3579;
wire    ap_CS_fsm_state4;
reg   [0:0] p_Result_22_reg_3586;
wire   [31:0] tmp_V_fu_2766_p2;
reg   [31:0] tmp_V_reg_3592;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln988_fu_2771_p2;
reg   [0:0] icmp_ln988_reg_3597;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_V_3_fu_2776_p3;
reg   [31:0] tmp_V_3_reg_3602;
wire   [31:0] sub_ln997_fu_2799_p2;
reg   [31:0] sub_ln997_reg_3607;
wire   [0:0] icmp_ln1011_fu_2893_p2;
reg   [0:0] icmp_ln1011_reg_3613;
wire   [0:0] select_ln1011_fu_2913_p3;
reg   [0:0] select_ln1011_reg_3618;
wire   [7:0] trunc_ln996_fu_2921_p1;
reg   [7:0] trunc_ln996_reg_3623;
wire    out_local_V_myproject_fu_182_ap_ready;
wire   [31:0] grp_fu_196_p0;
wire   [31:0] grp_fu_199_p0;
wire   [31:0] grp_fu_202_p0;
wire   [31:0] grp_fu_205_p0;
wire   [31:0] grp_fu_208_p0;
wire   [31:0] grp_fu_211_p0;
wire   [31:0] grp_fu_214_p0;
wire   [31:0] grp_fu_217_p0;
wire   [31:0] grp_fu_220_p0;
wire   [31:0] grp_fu_223_p0;
wire   [31:0] trunc_ln293_fu_234_p1;
wire   [31:0] trunc_ln293_1_fu_243_p4;
wire   [31:0] trunc_ln293_2_fu_258_p4;
wire   [31:0] trunc_ln293_3_fu_273_p4;
wire   [31:0] trunc_ln293_4_fu_288_p4;
wire   [31:0] trunc_ln293_5_fu_303_p4;
wire   [31:0] trunc_ln293_6_fu_318_p4;
wire   [31:0] trunc_ln293_7_fu_333_p4;
wire   [31:0] trunc_ln293_8_fu_348_p4;
wire   [31:0] trunc_ln293_9_fu_363_p4;
wire   [63:0] grp_fu_196_p1;
wire   [63:0] ireg_fu_378_p1;
wire   [10:0] exp_tmp_fu_394_p4;
wire   [51:0] trunc_ln574_fu_408_p1;
wire   [52:0] p_Result_3_fu_412_p3;
wire   [53:0] zext_ln578_fu_420_p1;
wire   [0:0] p_Result_2_fu_386_p3;
wire   [53:0] man_V_1_fu_424_p2;
wire   [62:0] trunc_ln564_fu_382_p1;
wire   [11:0] zext_ln501_fu_404_p1;
wire   [11:0] F2_fu_444_p2;
wire   [63:0] grp_fu_199_p1;
wire   [63:0] ireg_1_fu_478_p1;
wire   [10:0] exp_tmp_1_fu_494_p4;
wire   [51:0] trunc_ln574_1_fu_508_p1;
wire   [52:0] p_Result_5_fu_512_p3;
wire   [53:0] zext_ln578_1_fu_520_p1;
wire   [0:0] p_Result_4_fu_486_p3;
wire   [53:0] man_V_4_fu_524_p2;
wire   [62:0] trunc_ln564_1_fu_482_p1;
wire   [11:0] zext_ln501_1_fu_504_p1;
wire   [11:0] F2_1_fu_544_p2;
wire   [63:0] grp_fu_202_p1;
wire   [63:0] ireg_2_fu_578_p1;
wire   [10:0] exp_tmp_2_fu_594_p4;
wire   [51:0] trunc_ln574_2_fu_608_p1;
wire   [52:0] p_Result_7_fu_612_p3;
wire   [53:0] zext_ln578_2_fu_620_p1;
wire   [0:0] p_Result_6_fu_586_p3;
wire   [53:0] man_V_7_fu_624_p2;
wire   [62:0] trunc_ln564_2_fu_582_p1;
wire   [11:0] zext_ln501_2_fu_604_p1;
wire   [11:0] F2_2_fu_644_p2;
wire   [63:0] grp_fu_205_p1;
wire   [63:0] ireg_3_fu_678_p1;
wire   [10:0] exp_tmp_3_fu_694_p4;
wire   [51:0] trunc_ln574_3_fu_708_p1;
wire   [52:0] p_Result_9_fu_712_p3;
wire   [53:0] zext_ln578_3_fu_720_p1;
wire   [0:0] p_Result_8_fu_686_p3;
wire   [53:0] man_V_10_fu_724_p2;
wire   [62:0] trunc_ln564_3_fu_682_p1;
wire   [11:0] zext_ln501_3_fu_704_p1;
wire   [11:0] F2_3_fu_744_p2;
wire   [63:0] grp_fu_208_p1;
wire   [63:0] ireg_4_fu_778_p1;
wire   [10:0] exp_tmp_4_fu_794_p4;
wire   [51:0] trunc_ln574_4_fu_808_p1;
wire   [52:0] p_Result_11_fu_812_p3;
wire   [53:0] zext_ln578_4_fu_820_p1;
wire   [0:0] p_Result_10_fu_786_p3;
wire   [53:0] man_V_13_fu_824_p2;
wire   [62:0] trunc_ln564_4_fu_782_p1;
wire   [11:0] zext_ln501_4_fu_804_p1;
wire   [11:0] F2_4_fu_844_p2;
wire   [63:0] grp_fu_211_p1;
wire   [63:0] ireg_5_fu_878_p1;
wire   [10:0] exp_tmp_5_fu_894_p4;
wire   [51:0] trunc_ln574_5_fu_908_p1;
wire   [52:0] p_Result_13_fu_912_p3;
wire   [53:0] zext_ln578_5_fu_920_p1;
wire   [0:0] p_Result_12_fu_886_p3;
wire   [53:0] man_V_16_fu_924_p2;
wire   [62:0] trunc_ln564_5_fu_882_p1;
wire   [11:0] zext_ln501_5_fu_904_p1;
wire   [11:0] F2_5_fu_944_p2;
wire   [63:0] grp_fu_214_p1;
wire   [63:0] ireg_6_fu_978_p1;
wire   [10:0] exp_tmp_6_fu_994_p4;
wire   [51:0] trunc_ln574_6_fu_1008_p1;
wire   [52:0] p_Result_15_fu_1012_p3;
wire   [53:0] zext_ln578_6_fu_1020_p1;
wire   [0:0] p_Result_14_fu_986_p3;
wire   [53:0] man_V_19_fu_1024_p2;
wire   [62:0] trunc_ln564_6_fu_982_p1;
wire   [11:0] zext_ln501_6_fu_1004_p1;
wire   [11:0] F2_6_fu_1044_p2;
wire   [63:0] grp_fu_217_p1;
wire   [63:0] ireg_7_fu_1078_p1;
wire   [10:0] exp_tmp_7_fu_1094_p4;
wire   [51:0] trunc_ln574_7_fu_1108_p1;
wire   [52:0] p_Result_17_fu_1112_p3;
wire   [53:0] zext_ln578_7_fu_1120_p1;
wire   [0:0] p_Result_16_fu_1086_p3;
wire   [53:0] man_V_22_fu_1124_p2;
wire   [62:0] trunc_ln564_7_fu_1082_p1;
wire   [11:0] zext_ln501_7_fu_1104_p1;
wire   [11:0] F2_7_fu_1144_p2;
wire   [63:0] grp_fu_220_p1;
wire   [63:0] ireg_8_fu_1178_p1;
wire   [10:0] exp_tmp_8_fu_1194_p4;
wire   [51:0] trunc_ln574_8_fu_1208_p1;
wire   [52:0] p_Result_19_fu_1212_p3;
wire   [53:0] zext_ln578_8_fu_1220_p1;
wire   [0:0] p_Result_18_fu_1186_p3;
wire   [53:0] man_V_25_fu_1224_p2;
wire   [62:0] trunc_ln564_8_fu_1182_p1;
wire   [11:0] zext_ln501_8_fu_1204_p1;
wire   [11:0] F2_8_fu_1244_p2;
wire   [63:0] grp_fu_223_p1;
wire   [63:0] ireg_9_fu_1278_p1;
wire   [10:0] exp_tmp_9_fu_1294_p4;
wire   [51:0] trunc_ln574_9_fu_1308_p1;
wire   [52:0] p_Result_21_fu_1312_p3;
wire   [53:0] zext_ln578_9_fu_1320_p1;
wire   [0:0] p_Result_20_fu_1286_p3;
wire   [53:0] man_V_28_fu_1324_p2;
wire   [62:0] trunc_ln564_9_fu_1282_p1;
wire   [11:0] zext_ln501_9_fu_1304_p1;
wire   [11:0] F2_9_fu_1344_p2;
wire  signed [11:0] sh_amt_fu_1378_p3;
wire   [6:0] tmp_fu_1393_p4;
wire  signed [31:0] sext_ln590_fu_1383_p1;
wire   [0:0] icmp_ln612_fu_1403_p2;
wire   [31:0] shl_ln613_fu_1409_p2;
wire   [53:0] zext_ln595_fu_1422_p1;
wire   [53:0] ashr_ln595_fu_1426_p2;
wire   [0:0] tmp_1_fu_1435_p3;
wire   [0:0] xor_ln580_fu_1450_p2;
wire   [0:0] and_ln591_fu_1455_p2;
wire   [31:0] select_ln597_fu_1442_p3;
wire   [0:0] or_ln591_fu_1467_p2;
wire   [0:0] or_ln590_fu_1471_p2;
wire   [31:0] select_ln591_fu_1460_p3;
wire   [31:0] select_ln612_fu_1414_p3;
wire   [0:0] icmp_ln594_fu_1387_p2;
wire   [0:0] xor_ln591_fu_1484_p2;
wire   [0:0] and_ln594_fu_1490_p2;
wire   [0:0] and_ln594_1_fu_1496_p2;
wire   [31:0] trunc_ln595_fu_1431_p1;
wire   [31:0] select_ln590_fu_1476_p3;
wire   [31:0] select_ln594_fu_1501_p3;
wire  signed [11:0] sh_amt_1_fu_1516_p3;
wire   [6:0] tmp_3_fu_1531_p4;
wire  signed [31:0] sext_ln590_1_fu_1521_p1;
wire   [0:0] icmp_ln612_1_fu_1541_p2;
wire   [31:0] shl_ln613_1_fu_1547_p2;
wire   [53:0] zext_ln595_1_fu_1560_p1;
wire   [53:0] ashr_ln595_1_fu_1564_p2;
wire   [0:0] tmp_4_fu_1573_p3;
wire   [0:0] xor_ln580_1_fu_1588_p2;
wire   [0:0] and_ln591_1_fu_1593_p2;
wire   [31:0] select_ln597_1_fu_1580_p3;
wire   [0:0] or_ln591_1_fu_1605_p2;
wire   [0:0] or_ln590_1_fu_1609_p2;
wire   [31:0] select_ln591_1_fu_1598_p3;
wire   [31:0] select_ln612_1_fu_1552_p3;
wire   [0:0] icmp_ln594_1_fu_1525_p2;
wire   [0:0] xor_ln591_1_fu_1622_p2;
wire   [0:0] and_ln594_2_fu_1628_p2;
wire   [0:0] and_ln594_3_fu_1634_p2;
wire   [31:0] trunc_ln595_1_fu_1569_p1;
wire   [31:0] select_ln590_2_fu_1614_p3;
wire   [31:0] select_ln594_1_fu_1639_p3;
wire  signed [11:0] sh_amt_2_fu_1654_p3;
wire   [6:0] tmp_6_fu_1669_p4;
wire  signed [31:0] sext_ln590_2_fu_1659_p1;
wire   [0:0] icmp_ln612_2_fu_1679_p2;
wire   [31:0] shl_ln613_2_fu_1685_p2;
wire   [53:0] zext_ln595_2_fu_1698_p1;
wire   [53:0] ashr_ln595_2_fu_1702_p2;
wire   [0:0] tmp_7_fu_1711_p3;
wire   [0:0] xor_ln580_2_fu_1726_p2;
wire   [0:0] and_ln591_2_fu_1731_p2;
wire   [31:0] select_ln597_2_fu_1718_p3;
wire   [0:0] or_ln591_2_fu_1743_p2;
wire   [0:0] or_ln590_2_fu_1747_p2;
wire   [31:0] select_ln591_2_fu_1736_p3;
wire   [31:0] select_ln612_2_fu_1690_p3;
wire   [0:0] icmp_ln594_2_fu_1663_p2;
wire   [0:0] xor_ln591_2_fu_1760_p2;
wire   [0:0] and_ln594_4_fu_1766_p2;
wire   [0:0] and_ln594_5_fu_1772_p2;
wire   [31:0] trunc_ln595_2_fu_1707_p1;
wire   [31:0] select_ln590_4_fu_1752_p3;
wire   [31:0] select_ln594_2_fu_1777_p3;
wire  signed [11:0] sh_amt_3_fu_1792_p3;
wire   [6:0] tmp_9_fu_1807_p4;
wire  signed [31:0] sext_ln590_3_fu_1797_p1;
wire   [0:0] icmp_ln612_3_fu_1817_p2;
wire   [31:0] shl_ln613_3_fu_1823_p2;
wire   [53:0] zext_ln595_3_fu_1836_p1;
wire   [53:0] ashr_ln595_3_fu_1840_p2;
wire   [0:0] tmp_10_fu_1849_p3;
wire   [0:0] xor_ln580_3_fu_1864_p2;
wire   [0:0] and_ln591_3_fu_1869_p2;
wire   [31:0] select_ln597_3_fu_1856_p3;
wire   [0:0] or_ln591_3_fu_1881_p2;
wire   [0:0] or_ln590_3_fu_1885_p2;
wire   [31:0] select_ln591_3_fu_1874_p3;
wire   [31:0] select_ln612_3_fu_1828_p3;
wire   [0:0] icmp_ln594_3_fu_1801_p2;
wire   [0:0] xor_ln591_3_fu_1898_p2;
wire   [0:0] and_ln594_6_fu_1904_p2;
wire   [0:0] and_ln594_7_fu_1910_p2;
wire   [31:0] trunc_ln595_3_fu_1845_p1;
wire   [31:0] select_ln590_6_fu_1890_p3;
wire   [31:0] select_ln594_3_fu_1915_p3;
wire  signed [11:0] sh_amt_4_fu_1930_p3;
wire   [6:0] tmp_12_fu_1945_p4;
wire  signed [31:0] sext_ln590_4_fu_1935_p1;
wire   [0:0] icmp_ln612_4_fu_1955_p2;
wire   [31:0] shl_ln613_4_fu_1961_p2;
wire   [53:0] zext_ln595_4_fu_1974_p1;
wire   [53:0] ashr_ln595_4_fu_1978_p2;
wire   [0:0] tmp_13_fu_1987_p3;
wire   [0:0] xor_ln580_4_fu_2002_p2;
wire   [0:0] and_ln591_4_fu_2007_p2;
wire   [31:0] select_ln597_4_fu_1994_p3;
wire   [0:0] or_ln591_4_fu_2019_p2;
wire   [0:0] or_ln590_4_fu_2023_p2;
wire   [31:0] select_ln591_4_fu_2012_p3;
wire   [31:0] select_ln612_4_fu_1966_p3;
wire   [0:0] icmp_ln594_4_fu_1939_p2;
wire   [0:0] xor_ln591_4_fu_2036_p2;
wire   [0:0] and_ln594_8_fu_2042_p2;
wire   [0:0] and_ln594_9_fu_2048_p2;
wire   [31:0] trunc_ln595_4_fu_1983_p1;
wire   [31:0] select_ln590_8_fu_2028_p3;
wire   [31:0] select_ln594_4_fu_2053_p3;
wire  signed [11:0] sh_amt_5_fu_2068_p3;
wire   [6:0] tmp_15_fu_2083_p4;
wire  signed [31:0] sext_ln590_5_fu_2073_p1;
wire   [0:0] icmp_ln612_5_fu_2093_p2;
wire   [31:0] shl_ln613_5_fu_2099_p2;
wire   [53:0] zext_ln595_5_fu_2112_p1;
wire   [53:0] ashr_ln595_5_fu_2116_p2;
wire   [0:0] tmp_16_fu_2125_p3;
wire   [0:0] xor_ln580_5_fu_2140_p2;
wire   [0:0] and_ln591_5_fu_2145_p2;
wire   [31:0] select_ln597_5_fu_2132_p3;
wire   [0:0] or_ln591_5_fu_2157_p2;
wire   [0:0] or_ln590_5_fu_2161_p2;
wire   [31:0] select_ln591_5_fu_2150_p3;
wire   [31:0] select_ln612_5_fu_2104_p3;
wire   [0:0] icmp_ln594_5_fu_2077_p2;
wire   [0:0] xor_ln591_5_fu_2174_p2;
wire   [0:0] and_ln594_10_fu_2180_p2;
wire   [0:0] and_ln594_11_fu_2186_p2;
wire   [31:0] trunc_ln595_5_fu_2121_p1;
wire   [31:0] select_ln590_10_fu_2166_p3;
wire   [31:0] select_ln594_5_fu_2191_p3;
wire  signed [11:0] sh_amt_6_fu_2206_p3;
wire   [6:0] tmp_18_fu_2221_p4;
wire  signed [31:0] sext_ln590_6_fu_2211_p1;
wire   [0:0] icmp_ln612_6_fu_2231_p2;
wire   [31:0] shl_ln613_6_fu_2237_p2;
wire   [53:0] zext_ln595_6_fu_2250_p1;
wire   [53:0] ashr_ln595_6_fu_2254_p2;
wire   [0:0] tmp_19_fu_2263_p3;
wire   [0:0] xor_ln580_6_fu_2278_p2;
wire   [0:0] and_ln591_6_fu_2283_p2;
wire   [31:0] select_ln597_6_fu_2270_p3;
wire   [0:0] or_ln591_6_fu_2295_p2;
wire   [0:0] or_ln590_6_fu_2299_p2;
wire   [31:0] select_ln591_6_fu_2288_p3;
wire   [31:0] select_ln612_6_fu_2242_p3;
wire   [0:0] icmp_ln594_6_fu_2215_p2;
wire   [0:0] xor_ln591_6_fu_2312_p2;
wire   [0:0] and_ln594_12_fu_2318_p2;
wire   [0:0] and_ln594_13_fu_2324_p2;
wire   [31:0] trunc_ln595_6_fu_2259_p1;
wire   [31:0] select_ln590_12_fu_2304_p3;
wire   [31:0] select_ln594_6_fu_2329_p3;
wire  signed [11:0] sh_amt_7_fu_2344_p3;
wire   [6:0] tmp_21_fu_2359_p4;
wire  signed [31:0] sext_ln590_7_fu_2349_p1;
wire   [0:0] icmp_ln612_7_fu_2369_p2;
wire   [31:0] shl_ln613_7_fu_2375_p2;
wire   [53:0] zext_ln595_7_fu_2388_p1;
wire   [53:0] ashr_ln595_7_fu_2392_p2;
wire   [0:0] tmp_22_fu_2401_p3;
wire   [0:0] xor_ln580_7_fu_2416_p2;
wire   [0:0] and_ln591_7_fu_2421_p2;
wire   [31:0] select_ln597_7_fu_2408_p3;
wire   [0:0] or_ln591_7_fu_2433_p2;
wire   [0:0] or_ln590_7_fu_2437_p2;
wire   [31:0] select_ln591_7_fu_2426_p3;
wire   [31:0] select_ln612_7_fu_2380_p3;
wire   [0:0] icmp_ln594_7_fu_2353_p2;
wire   [0:0] xor_ln591_7_fu_2450_p2;
wire   [0:0] and_ln594_14_fu_2456_p2;
wire   [0:0] and_ln594_15_fu_2462_p2;
wire   [31:0] trunc_ln595_7_fu_2397_p1;
wire   [31:0] select_ln590_14_fu_2442_p3;
wire   [31:0] select_ln594_7_fu_2467_p3;
wire  signed [11:0] sh_amt_8_fu_2482_p3;
wire   [6:0] tmp_24_fu_2497_p4;
wire  signed [31:0] sext_ln590_8_fu_2487_p1;
wire   [0:0] icmp_ln612_8_fu_2507_p2;
wire   [31:0] shl_ln613_8_fu_2513_p2;
wire   [53:0] zext_ln595_8_fu_2526_p1;
wire   [53:0] ashr_ln595_8_fu_2530_p2;
wire   [0:0] tmp_25_fu_2539_p3;
wire   [0:0] xor_ln580_8_fu_2554_p2;
wire   [0:0] and_ln591_8_fu_2559_p2;
wire   [31:0] select_ln597_8_fu_2546_p3;
wire   [0:0] or_ln591_8_fu_2571_p2;
wire   [0:0] or_ln590_8_fu_2575_p2;
wire   [31:0] select_ln591_8_fu_2564_p3;
wire   [31:0] select_ln612_8_fu_2518_p3;
wire   [0:0] icmp_ln594_8_fu_2491_p2;
wire   [0:0] xor_ln591_8_fu_2588_p2;
wire   [0:0] and_ln594_16_fu_2594_p2;
wire   [0:0] and_ln594_17_fu_2600_p2;
wire   [31:0] trunc_ln595_8_fu_2535_p1;
wire   [31:0] select_ln590_16_fu_2580_p3;
wire   [31:0] select_ln594_8_fu_2605_p3;
wire  signed [11:0] sh_amt_9_fu_2620_p3;
wire   [6:0] tmp_27_fu_2635_p4;
wire  signed [31:0] sext_ln590_9_fu_2625_p1;
wire   [0:0] icmp_ln612_9_fu_2645_p2;
wire   [31:0] shl_ln613_9_fu_2651_p2;
wire   [53:0] zext_ln595_9_fu_2664_p1;
wire   [53:0] ashr_ln595_9_fu_2668_p2;
wire   [0:0] tmp_28_fu_2677_p3;
wire   [0:0] xor_ln580_9_fu_2692_p2;
wire   [0:0] and_ln591_9_fu_2697_p2;
wire   [31:0] select_ln597_9_fu_2684_p3;
wire   [0:0] or_ln591_9_fu_2709_p2;
wire   [0:0] or_ln590_9_fu_2713_p2;
wire   [31:0] select_ln591_9_fu_2702_p3;
wire   [31:0] select_ln612_9_fu_2656_p3;
wire   [0:0] icmp_ln594_9_fu_2629_p2;
wire   [0:0] xor_ln591_9_fu_2726_p2;
wire   [0:0] and_ln594_18_fu_2732_p2;
wire   [0:0] and_ln594_19_fu_2738_p2;
wire   [31:0] trunc_ln595_9_fu_2673_p1;
wire   [31:0] select_ln590_18_fu_2718_p3;
wire   [31:0] select_ln594_9_fu_2743_p3;
reg   [31:0] p_Result_23_fu_2781_p4;
reg   [31:0] l_fu_2791_p3;
wire   [31:0] lsb_index_fu_2805_p2;
wire   [30:0] tmp_30_fu_2811_p4;
wire   [5:0] trunc_ln1000_fu_2827_p1;
wire   [5:0] sub_ln1000_fu_2831_p2;
wire   [31:0] zext_ln1000_fu_2837_p1;
wire   [31:0] lshr_ln1000_fu_2841_p2;
wire   [31:0] shl_ln1002_fu_2847_p2;
wire   [31:0] or_ln1002_1_fu_2853_p2;
wire   [31:0] and_ln1002_fu_2859_p2;
wire   [0:0] tmp_31_fu_2871_p3;
wire   [0:0] p_Result_24_fu_2885_p3;
wire   [0:0] xor_ln1002_fu_2879_p2;
wire   [0:0] icmp_ln999_fu_2821_p2;
wire   [0:0] icmp_ln1002_fu_2865_p2;
wire   [0:0] select_ln999_fu_2905_p3;
wire   [0:0] and_ln1002_1_fu_2899_p2;
wire   [31:0] sub_ln1012_fu_2928_p2;
wire   [63:0] zext_ln1010_fu_2925_p1;
wire   [63:0] zext_ln1012_fu_2933_p1;
wire   [31:0] add_ln1011_fu_2943_p2;
wire   [63:0] zext_ln1011_fu_2948_p1;
wire   [63:0] lshr_ln1011_fu_2952_p2;
wire   [63:0] shl_ln1012_fu_2937_p2;
wire   [63:0] m_fu_2958_p3;
wire   [63:0] zext_ln1014_fu_2965_p1;
wire   [63:0] m_2_fu_2968_p2;
wire   [62:0] m_5_fu_2974_p4;
wire   [0:0] p_Result_s_fu_2988_p3;
wire   [7:0] sub_ln1017_fu_3004_p2;
wire   [7:0] select_ln996_fu_2996_p3;
wire   [7:0] add_ln1017_fu_3009_p2;
wire   [63:0] zext_ln1015_fu_2984_p1;
wire   [8:0] tmp_s_fu_3015_p3;
wire   [63:0] p_Result_25_fu_3022_p5;
wire   [31:0] LD_10_fu_3034_p1;
wire   [31:0] select_ln304_fu_3038_p3;
reg    grp_fu_196_ce;
reg    grp_fu_199_ce;
reg    grp_fu_202_ce;
reg    grp_fu_205_ce;
reg    grp_fu_208_ce;
reg    grp_fu_211_ce;
reg    grp_fu_214_ce;
reg    grp_fu_217_ce;
reg    grp_fu_220_ce;
reg    grp_fu_223_ce;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    regslice_both_out_r_V_data_V_U_apdone_blk;
reg    ap_block_state8;
wire    regslice_both_in_r_V_data_V_U_apdone_blk;
wire   [319:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_V_data_V_U_ack_in;
wire    regslice_both_in_r_V_keep_V_U_apdone_blk;
wire   [39:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_r_V_keep_V_U_vld_out;
wire    regslice_both_in_r_V_keep_V_U_ack_in;
wire    regslice_both_in_r_V_strb_V_U_apdone_blk;
wire   [39:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_r_V_strb_V_U_vld_out;
wire    regslice_both_in_r_V_strb_V_U_ack_in;
wire    regslice_both_in_r_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_r_V_last_V_U_vld_out;
wire    regslice_both_in_r_V_last_V_U_ack_in;
wire   [319:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_V_data_V_U_vld_out;
wire    regslice_both_out_r_V_keep_V_U_apdone_blk;
wire    regslice_both_out_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_keep_V_U_vld_out;
wire    regslice_both_out_r_V_strb_V_U_apdone_blk;
wire    regslice_both_out_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_strb_V_U_vld_out;
wire    regslice_both_out_r_V_last_V_U_apdone_blk;
wire    regslice_both_out_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

myproject_axi_myproject out_local_V_myproject_fu_182(
    .ap_ready(out_local_V_myproject_fu_182_ap_ready),
    .p_read(in_local_V_reg_3529),
    .p_read1(in_local_V_1_reg_3534),
    .p_read2(in_local_V_2_reg_3539),
    .p_read3(in_local_V_3_reg_3544),
    .p_read4(in_local_V_4_reg_3549),
    .p_read5(in_local_V_5_reg_3554),
    .p_read6(in_local_V_6_reg_3559),
    .p_read7(in_local_V_7_reg_3564),
    .p_read8(in_local_V_8_reg_3569),
    .p_read9(in_local_V_9_reg_3574),
    .ap_return(out_local_V_myproject_fu_182_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_196_p0),
    .ce(grp_fu_196_ce),
    .dout(grp_fu_196_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_199_p0),
    .ce(grp_fu_199_ce),
    .dout(grp_fu_199_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_202_p0),
    .ce(grp_fu_202_ce),
    .dout(grp_fu_202_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_205_p0),
    .ce(grp_fu_205_ce),
    .dout(grp_fu_205_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_208_p0),
    .ce(grp_fu_208_ce),
    .dout(grp_fu_208_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_211_p0),
    .ce(grp_fu_211_ce),
    .dout(grp_fu_211_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_214_p0),
    .ce(grp_fu_214_ce),
    .dout(grp_fu_214_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_217_p0),
    .ce(grp_fu_217_ce),
    .dout(grp_fu_217_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_220_p0),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_223_p0),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 320 ))
regslice_both_in_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 40 ))
regslice_both_in_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_r_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 40 ))
regslice_both_in_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_r_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_r_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 320 ))
regslice_both_out_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 40 ))
regslice_both_out_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(40'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_r_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 40 ))
regslice_both_out_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(40'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_r_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_3064),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_r_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln590_1_reg_3179 <= add_ln590_1_fu_556_p2;
        add_ln590_2_reg_3220 <= add_ln590_2_fu_656_p2;
        add_ln590_3_reg_3261 <= add_ln590_3_fu_756_p2;
        add_ln590_4_reg_3302 <= add_ln590_4_fu_856_p2;
        add_ln590_5_reg_3343 <= add_ln590_5_fu_956_p2;
        add_ln590_6_reg_3384 <= add_ln590_6_fu_1056_p2;
        add_ln590_7_reg_3425 <= add_ln590_7_fu_1156_p2;
        add_ln590_8_reg_3466 <= add_ln590_8_fu_1256_p2;
        add_ln590_9_reg_3507 <= add_ln590_9_fu_1356_p2;
        add_ln590_reg_3138 <= add_ln590_fu_456_p2;
        icmp_ln580_1_reg_3165 <= icmp_ln580_1_fu_538_p2;
        icmp_ln580_2_reg_3206 <= icmp_ln580_2_fu_638_p2;
        icmp_ln580_3_reg_3247 <= icmp_ln580_3_fu_738_p2;
        icmp_ln580_4_reg_3288 <= icmp_ln580_4_fu_838_p2;
        icmp_ln580_5_reg_3329 <= icmp_ln580_5_fu_938_p2;
        icmp_ln580_6_reg_3370 <= icmp_ln580_6_fu_1038_p2;
        icmp_ln580_7_reg_3411 <= icmp_ln580_7_fu_1138_p2;
        icmp_ln580_8_reg_3452 <= icmp_ln580_8_fu_1238_p2;
        icmp_ln580_9_reg_3493 <= icmp_ln580_9_fu_1338_p2;
        icmp_ln580_reg_3124 <= icmp_ln580_fu_438_p2;
        icmp_ln590_1_reg_3172 <= icmp_ln590_1_fu_550_p2;
        icmp_ln590_2_reg_3213 <= icmp_ln590_2_fu_650_p2;
        icmp_ln590_3_reg_3254 <= icmp_ln590_3_fu_750_p2;
        icmp_ln590_4_reg_3295 <= icmp_ln590_4_fu_850_p2;
        icmp_ln590_5_reg_3336 <= icmp_ln590_5_fu_950_p2;
        icmp_ln590_6_reg_3377 <= icmp_ln590_6_fu_1050_p2;
        icmp_ln590_7_reg_3418 <= icmp_ln590_7_fu_1150_p2;
        icmp_ln590_8_reg_3459 <= icmp_ln590_8_fu_1250_p2;
        icmp_ln590_9_reg_3500 <= icmp_ln590_9_fu_1350_p2;
        icmp_ln590_reg_3131 <= icmp_ln590_fu_450_p2;
        icmp_ln591_1_reg_3189 <= icmp_ln591_1_fu_568_p2;
        icmp_ln591_2_reg_3230 <= icmp_ln591_2_fu_668_p2;
        icmp_ln591_3_reg_3271 <= icmp_ln591_3_fu_768_p2;
        icmp_ln591_4_reg_3312 <= icmp_ln591_4_fu_868_p2;
        icmp_ln591_5_reg_3353 <= icmp_ln591_5_fu_968_p2;
        icmp_ln591_6_reg_3394 <= icmp_ln591_6_fu_1068_p2;
        icmp_ln591_7_reg_3435 <= icmp_ln591_7_fu_1168_p2;
        icmp_ln591_8_reg_3476 <= icmp_ln591_8_fu_1268_p2;
        icmp_ln591_9_reg_3517 <= icmp_ln591_9_fu_1368_p2;
        icmp_ln591_reg_3148 <= icmp_ln591_fu_468_p2;
        man_V_11_reg_3242 <= man_V_11_fu_730_p3;
        man_V_14_reg_3283 <= man_V_14_fu_830_p3;
        man_V_17_reg_3324 <= man_V_17_fu_930_p3;
        man_V_20_reg_3365 <= man_V_20_fu_1030_p3;
        man_V_23_reg_3406 <= man_V_23_fu_1130_p3;
        man_V_26_reg_3447 <= man_V_26_fu_1230_p3;
        man_V_29_reg_3488 <= man_V_29_fu_1330_p3;
        man_V_2_reg_3119 <= man_V_2_fu_430_p3;
        man_V_5_reg_3160 <= man_V_5_fu_530_p3;
        man_V_8_reg_3201 <= man_V_8_fu_630_p3;
        sub_ln590_1_reg_3184 <= sub_ln590_1_fu_562_p2;
        sub_ln590_2_reg_3225 <= sub_ln590_2_fu_662_p2;
        sub_ln590_3_reg_3266 <= sub_ln590_3_fu_762_p2;
        sub_ln590_4_reg_3307 <= sub_ln590_4_fu_862_p2;
        sub_ln590_5_reg_3348 <= sub_ln590_5_fu_962_p2;
        sub_ln590_6_reg_3389 <= sub_ln590_6_fu_1062_p2;
        sub_ln590_7_reg_3430 <= sub_ln590_7_fu_1162_p2;
        sub_ln590_8_reg_3471 <= sub_ln590_8_fu_1262_p2;
        sub_ln590_9_reg_3512 <= sub_ln590_9_fu_1362_p2;
        sub_ln590_reg_3143 <= sub_ln590_fu_462_p2;
        trunc_ln592_1_reg_3195 <= trunc_ln592_1_fu_574_p1;
        trunc_ln592_2_reg_3236 <= trunc_ln592_2_fu_674_p1;
        trunc_ln592_3_reg_3277 <= trunc_ln592_3_fu_774_p1;
        trunc_ln592_4_reg_3318 <= trunc_ln592_4_fu_874_p1;
        trunc_ln592_5_reg_3359 <= trunc_ln592_5_fu_974_p1;
        trunc_ln592_6_reg_3400 <= trunc_ln592_6_fu_1074_p1;
        trunc_ln592_7_reg_3441 <= trunc_ln592_7_fu_1174_p1;
        trunc_ln592_8_reg_3482 <= trunc_ln592_8_fu_1274_p1;
        trunc_ln592_9_reg_3523 <= trunc_ln592_9_fu_1374_p1;
        trunc_ln592_reg_3154 <= trunc_ln592_fu_474_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1011_reg_3613 <= icmp_ln1011_fu_2893_p2;
        icmp_ln988_reg_3597 <= icmp_ln988_fu_2771_p2;
        select_ln1011_reg_3618 <= select_ln1011_fu_2913_p3;
        sub_ln997_reg_3607 <= sub_ln997_fu_2799_p2;
        tmp_V_3_reg_3602 <= tmp_V_3_fu_2776_p3;
        trunc_ln996_reg_3623 <= trunc_ln996_fu_2921_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_local_V_1_reg_3534 <= in_local_V_1_fu_1647_p3;
        in_local_V_2_reg_3539 <= in_local_V_2_fu_1785_p3;
        in_local_V_3_reg_3544 <= in_local_V_3_fu_1923_p3;
        in_local_V_4_reg_3549 <= in_local_V_4_fu_2061_p3;
        in_local_V_5_reg_3554 <= in_local_V_5_fu_2199_p3;
        in_local_V_6_reg_3559 <= in_local_V_6_fu_2337_p3;
        in_local_V_7_reg_3564 <= in_local_V_7_fu_2475_p3;
        in_local_V_8_reg_3569 <= in_local_V_8_fu_2613_p3;
        in_local_V_9_reg_3574 <= in_local_V_9_fu_2751_p3;
        in_local_V_reg_3529 <= in_local_V_fu_1509_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_local_V_reg_3579 <= out_local_V_myproject_fu_182_ap_return;
        p_Result_22_reg_3586 <= out_local_V_myproject_fu_182_ap_return[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_0_reg_3050 <= in_r_TDATA_int_regslice;
        tmp_last_V_reg_3064 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (p_Result_22_reg_3586 == 1'd1))) begin
        tmp_V_reg_3592 <= tmp_V_fu_2766_p2;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_196_ce = 1'b1;
    end else begin
        grp_fu_196_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_199_ce = 1'b1;
    end else begin
        grp_fu_199_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_202_ce = 1'b1;
    end else begin
        grp_fu_202_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_205_ce = 1'b1;
    end else begin
        grp_fu_205_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_208_ce = 1'b1;
    end else begin
        grp_fu_208_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_211_ce = 1'b1;
    end else begin
        grp_fu_211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_214_ce = 1'b1;
    end else begin
        grp_fu_214_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_217_ce = 1'b1;
    end else begin
        grp_fu_217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (out_r_TREADY_int_regslice == 1'b1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_544_p2 = (12'd1075 - zext_ln501_1_fu_504_p1);

assign F2_2_fu_644_p2 = (12'd1075 - zext_ln501_2_fu_604_p1);

assign F2_3_fu_744_p2 = (12'd1075 - zext_ln501_3_fu_704_p1);

assign F2_4_fu_844_p2 = (12'd1075 - zext_ln501_4_fu_804_p1);

assign F2_5_fu_944_p2 = (12'd1075 - zext_ln501_5_fu_904_p1);

assign F2_6_fu_1044_p2 = (12'd1075 - zext_ln501_6_fu_1004_p1);

assign F2_7_fu_1144_p2 = (12'd1075 - zext_ln501_7_fu_1104_p1);

assign F2_8_fu_1244_p2 = (12'd1075 - zext_ln501_8_fu_1204_p1);

assign F2_9_fu_1344_p2 = (12'd1075 - zext_ln501_9_fu_1304_p1);

assign F2_fu_444_p2 = (12'd1075 - zext_ln501_fu_404_p1);

assign LD_10_fu_3034_p1 = p_Result_25_fu_3022_p5[31:0];

assign add_ln1011_fu_2943_p2 = ($signed(sub_ln997_reg_3607) + $signed(32'd4294967271));

assign add_ln1017_fu_3009_p2 = (sub_ln1017_fu_3004_p2 + select_ln996_fu_2996_p3);

assign add_ln590_1_fu_556_p2 = ($signed(F2_1_fu_544_p2) + $signed(12'd4080));

assign add_ln590_2_fu_656_p2 = ($signed(F2_2_fu_644_p2) + $signed(12'd4080));

assign add_ln590_3_fu_756_p2 = ($signed(F2_3_fu_744_p2) + $signed(12'd4080));

assign add_ln590_4_fu_856_p2 = ($signed(F2_4_fu_844_p2) + $signed(12'd4080));

assign add_ln590_5_fu_956_p2 = ($signed(F2_5_fu_944_p2) + $signed(12'd4080));

assign add_ln590_6_fu_1056_p2 = ($signed(F2_6_fu_1044_p2) + $signed(12'd4080));

assign add_ln590_7_fu_1156_p2 = ($signed(F2_7_fu_1144_p2) + $signed(12'd4080));

assign add_ln590_8_fu_1256_p2 = ($signed(F2_8_fu_1244_p2) + $signed(12'd4080));

assign add_ln590_9_fu_1356_p2 = ($signed(F2_9_fu_1344_p2) + $signed(12'd4080));

assign add_ln590_fu_456_p2 = ($signed(F2_fu_444_p2) + $signed(12'd4080));

assign and_ln1002_1_fu_2899_p2 = (xor_ln1002_fu_2879_p2 & p_Result_24_fu_2885_p3);

assign and_ln1002_fu_2859_p2 = (tmp_V_3_fu_2776_p3 & or_ln1002_1_fu_2853_p2);

assign and_ln591_1_fu_1593_p2 = (xor_ln580_1_fu_1588_p2 & icmp_ln591_1_reg_3189);

assign and_ln591_2_fu_1731_p2 = (xor_ln580_2_fu_1726_p2 & icmp_ln591_2_reg_3230);

assign and_ln591_3_fu_1869_p2 = (xor_ln580_3_fu_1864_p2 & icmp_ln591_3_reg_3271);

assign and_ln591_4_fu_2007_p2 = (xor_ln580_4_fu_2002_p2 & icmp_ln591_4_reg_3312);

assign and_ln591_5_fu_2145_p2 = (xor_ln580_5_fu_2140_p2 & icmp_ln591_5_reg_3353);

assign and_ln591_6_fu_2283_p2 = (xor_ln580_6_fu_2278_p2 & icmp_ln591_6_reg_3394);

assign and_ln591_7_fu_2421_p2 = (xor_ln580_7_fu_2416_p2 & icmp_ln591_7_reg_3435);

assign and_ln591_8_fu_2559_p2 = (xor_ln580_8_fu_2554_p2 & icmp_ln591_8_reg_3476);

assign and_ln591_9_fu_2697_p2 = (xor_ln580_9_fu_2692_p2 & icmp_ln591_9_reg_3517);

assign and_ln591_fu_1455_p2 = (xor_ln580_fu_1450_p2 & icmp_ln591_reg_3148);

assign and_ln594_10_fu_2180_p2 = (xor_ln591_5_fu_2174_p2 & icmp_ln594_5_fu_2077_p2);

assign and_ln594_11_fu_2186_p2 = (icmp_ln590_5_reg_3336 & and_ln594_10_fu_2180_p2);

assign and_ln594_12_fu_2318_p2 = (xor_ln591_6_fu_2312_p2 & icmp_ln594_6_fu_2215_p2);

assign and_ln594_13_fu_2324_p2 = (icmp_ln590_6_reg_3377 & and_ln594_12_fu_2318_p2);

assign and_ln594_14_fu_2456_p2 = (xor_ln591_7_fu_2450_p2 & icmp_ln594_7_fu_2353_p2);

assign and_ln594_15_fu_2462_p2 = (icmp_ln590_7_reg_3418 & and_ln594_14_fu_2456_p2);

assign and_ln594_16_fu_2594_p2 = (xor_ln591_8_fu_2588_p2 & icmp_ln594_8_fu_2491_p2);

assign and_ln594_17_fu_2600_p2 = (icmp_ln590_8_reg_3459 & and_ln594_16_fu_2594_p2);

assign and_ln594_18_fu_2732_p2 = (xor_ln591_9_fu_2726_p2 & icmp_ln594_9_fu_2629_p2);

assign and_ln594_19_fu_2738_p2 = (icmp_ln590_9_reg_3500 & and_ln594_18_fu_2732_p2);

assign and_ln594_1_fu_1496_p2 = (icmp_ln590_reg_3131 & and_ln594_fu_1490_p2);

assign and_ln594_2_fu_1628_p2 = (xor_ln591_1_fu_1622_p2 & icmp_ln594_1_fu_1525_p2);

assign and_ln594_3_fu_1634_p2 = (icmp_ln590_1_reg_3172 & and_ln594_2_fu_1628_p2);

assign and_ln594_4_fu_1766_p2 = (xor_ln591_2_fu_1760_p2 & icmp_ln594_2_fu_1663_p2);

assign and_ln594_5_fu_1772_p2 = (icmp_ln590_2_reg_3213 & and_ln594_4_fu_1766_p2);

assign and_ln594_6_fu_1904_p2 = (xor_ln591_3_fu_1898_p2 & icmp_ln594_3_fu_1801_p2);

assign and_ln594_7_fu_1910_p2 = (icmp_ln590_3_reg_3254 & and_ln594_6_fu_1904_p2);

assign and_ln594_8_fu_2042_p2 = (xor_ln591_4_fu_2036_p2 & icmp_ln594_4_fu_1939_p2);

assign and_ln594_9_fu_2048_p2 = (icmp_ln590_4_reg_3295 & and_ln594_8_fu_2042_p2);

assign and_ln594_fu_1490_p2 = (xor_ln591_fu_1484_p2 & icmp_ln594_fu_1387_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state8 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln595_1_fu_1564_p2 = $signed(man_V_5_reg_3160) >>> zext_ln595_1_fu_1560_p1;

assign ashr_ln595_2_fu_1702_p2 = $signed(man_V_8_reg_3201) >>> zext_ln595_2_fu_1698_p1;

assign ashr_ln595_3_fu_1840_p2 = $signed(man_V_11_reg_3242) >>> zext_ln595_3_fu_1836_p1;

assign ashr_ln595_4_fu_1978_p2 = $signed(man_V_14_reg_3283) >>> zext_ln595_4_fu_1974_p1;

assign ashr_ln595_5_fu_2116_p2 = $signed(man_V_17_reg_3324) >>> zext_ln595_5_fu_2112_p1;

assign ashr_ln595_6_fu_2254_p2 = $signed(man_V_20_reg_3365) >>> zext_ln595_6_fu_2250_p1;

assign ashr_ln595_7_fu_2392_p2 = $signed(man_V_23_reg_3406) >>> zext_ln595_7_fu_2388_p1;

assign ashr_ln595_8_fu_2530_p2 = $signed(man_V_26_reg_3447) >>> zext_ln595_8_fu_2526_p1;

assign ashr_ln595_9_fu_2668_p2 = $signed(man_V_29_reg_3488) >>> zext_ln595_9_fu_2664_p1;

assign ashr_ln595_fu_1426_p2 = $signed(man_V_2_reg_3119) >>> zext_ln595_fu_1422_p1;

assign exp_tmp_1_fu_494_p4 = {{ireg_1_fu_478_p1[62:52]}};

assign exp_tmp_2_fu_594_p4 = {{ireg_2_fu_578_p1[62:52]}};

assign exp_tmp_3_fu_694_p4 = {{ireg_3_fu_678_p1[62:52]}};

assign exp_tmp_4_fu_794_p4 = {{ireg_4_fu_778_p1[62:52]}};

assign exp_tmp_5_fu_894_p4 = {{ireg_5_fu_878_p1[62:52]}};

assign exp_tmp_6_fu_994_p4 = {{ireg_6_fu_978_p1[62:52]}};

assign exp_tmp_7_fu_1094_p4 = {{ireg_7_fu_1078_p1[62:52]}};

assign exp_tmp_8_fu_1194_p4 = {{ireg_8_fu_1178_p1[62:52]}};

assign exp_tmp_9_fu_1294_p4 = {{ireg_9_fu_1278_p1[62:52]}};

assign exp_tmp_fu_394_p4 = {{ireg_fu_378_p1[62:52]}};

assign grp_fu_196_p0 = trunc_ln293_fu_234_p1;

assign grp_fu_199_p0 = trunc_ln293_1_fu_243_p4;

assign grp_fu_202_p0 = trunc_ln293_2_fu_258_p4;

assign grp_fu_205_p0 = trunc_ln293_3_fu_273_p4;

assign grp_fu_208_p0 = trunc_ln293_4_fu_288_p4;

assign grp_fu_211_p0 = trunc_ln293_5_fu_303_p4;

assign grp_fu_214_p0 = trunc_ln293_6_fu_318_p4;

assign grp_fu_217_p0 = trunc_ln293_7_fu_333_p4;

assign grp_fu_220_p0 = trunc_ln293_8_fu_348_p4;

assign grp_fu_223_p0 = trunc_ln293_9_fu_363_p4;

assign icmp_ln1002_fu_2865_p2 = ((and_ln1002_fu_2859_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1011_fu_2893_p2 = (($signed(lsb_index_fu_2805_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_538_p2 = ((trunc_ln564_1_fu_482_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_638_p2 = ((trunc_ln564_2_fu_582_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_3_fu_738_p2 = ((trunc_ln564_3_fu_682_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_4_fu_838_p2 = ((trunc_ln564_4_fu_782_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_5_fu_938_p2 = ((trunc_ln564_5_fu_882_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_6_fu_1038_p2 = ((trunc_ln564_6_fu_982_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_7_fu_1138_p2 = ((trunc_ln564_7_fu_1082_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_8_fu_1238_p2 = ((trunc_ln564_8_fu_1182_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_9_fu_1338_p2 = ((trunc_ln564_9_fu_1282_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_438_p2 = ((trunc_ln564_fu_382_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_550_p2 = (($signed(F2_1_fu_544_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_2_fu_650_p2 = (($signed(F2_2_fu_644_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_3_fu_750_p2 = (($signed(F2_3_fu_744_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_4_fu_850_p2 = (($signed(F2_4_fu_844_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_5_fu_950_p2 = (($signed(F2_5_fu_944_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_6_fu_1050_p2 = (($signed(F2_6_fu_1044_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_7_fu_1150_p2 = (($signed(F2_7_fu_1144_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_8_fu_1250_p2 = (($signed(F2_8_fu_1244_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_9_fu_1350_p2 = (($signed(F2_9_fu_1344_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_450_p2 = (($signed(F2_fu_444_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_568_p2 = ((F2_1_fu_544_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_668_p2 = ((F2_2_fu_644_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_3_fu_768_p2 = ((F2_3_fu_744_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_4_fu_868_p2 = ((F2_4_fu_844_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_5_fu_968_p2 = ((F2_5_fu_944_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_6_fu_1068_p2 = ((F2_6_fu_1044_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_7_fu_1168_p2 = ((F2_7_fu_1144_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_8_fu_1268_p2 = ((F2_8_fu_1244_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_9_fu_1368_p2 = ((F2_9_fu_1344_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_468_p2 = ((F2_fu_444_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_1525_p2 = ((sh_amt_1_fu_1516_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_2_fu_1663_p2 = ((sh_amt_2_fu_1654_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_3_fu_1801_p2 = ((sh_amt_3_fu_1792_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_4_fu_1939_p2 = ((sh_amt_4_fu_1930_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_5_fu_2077_p2 = ((sh_amt_5_fu_2068_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_6_fu_2215_p2 = ((sh_amt_6_fu_2206_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_7_fu_2353_p2 = ((sh_amt_7_fu_2344_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_8_fu_2491_p2 = ((sh_amt_8_fu_2482_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_9_fu_2629_p2 = ((sh_amt_9_fu_2620_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_1387_p2 = ((sh_amt_fu_1378_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_1541_p2 = ((tmp_3_fu_1531_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_2_fu_1679_p2 = ((tmp_6_fu_1669_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_3_fu_1817_p2 = ((tmp_9_fu_1807_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_4_fu_1955_p2 = ((tmp_12_fu_1945_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_5_fu_2093_p2 = ((tmp_15_fu_2083_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_6_fu_2231_p2 = ((tmp_18_fu_2221_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_7_fu_2369_p2 = ((tmp_21_fu_2359_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_8_fu_2507_p2 = ((tmp_24_fu_2497_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_9_fu_2645_p2 = ((tmp_27_fu_2635_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_1403_p2 = ((tmp_fu_1393_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln988_fu_2771_p2 = ((out_local_V_reg_3579 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln999_fu_2821_p2 = (($signed(tmp_30_fu_2811_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_1647_p3 = ((icmp_ln580_1_reg_3165[0:0] == 1'b1) ? 32'd0 : select_ln594_1_fu_1639_p3);

assign in_local_V_2_fu_1785_p3 = ((icmp_ln580_2_reg_3206[0:0] == 1'b1) ? 32'd0 : select_ln594_2_fu_1777_p3);

assign in_local_V_3_fu_1923_p3 = ((icmp_ln580_3_reg_3247[0:0] == 1'b1) ? 32'd0 : select_ln594_3_fu_1915_p3);

assign in_local_V_4_fu_2061_p3 = ((icmp_ln580_4_reg_3288[0:0] == 1'b1) ? 32'd0 : select_ln594_4_fu_2053_p3);

assign in_local_V_5_fu_2199_p3 = ((icmp_ln580_5_reg_3329[0:0] == 1'b1) ? 32'd0 : select_ln594_5_fu_2191_p3);

assign in_local_V_6_fu_2337_p3 = ((icmp_ln580_6_reg_3370[0:0] == 1'b1) ? 32'd0 : select_ln594_6_fu_2329_p3);

assign in_local_V_7_fu_2475_p3 = ((icmp_ln580_7_reg_3411[0:0] == 1'b1) ? 32'd0 : select_ln594_7_fu_2467_p3);

assign in_local_V_8_fu_2613_p3 = ((icmp_ln580_8_reg_3452[0:0] == 1'b1) ? 32'd0 : select_ln594_8_fu_2605_p3);

assign in_local_V_9_fu_2751_p3 = ((icmp_ln580_9_reg_3493[0:0] == 1'b1) ? 32'd0 : select_ln594_9_fu_2743_p3);

assign in_local_V_fu_1509_p3 = ((icmp_ln580_reg_3124[0:0] == 1'b1) ? 32'd0 : select_ln594_fu_1501_p3);

assign in_r_TREADY = regslice_both_in_r_V_data_V_U_ack_in;

assign ireg_1_fu_478_p1 = grp_fu_199_p1;

assign ireg_2_fu_578_p1 = grp_fu_202_p1;

assign ireg_3_fu_678_p1 = grp_fu_205_p1;

assign ireg_4_fu_778_p1 = grp_fu_208_p1;

assign ireg_5_fu_878_p1 = grp_fu_211_p1;

assign ireg_6_fu_978_p1 = grp_fu_214_p1;

assign ireg_7_fu_1078_p1 = grp_fu_217_p1;

assign ireg_8_fu_1178_p1 = grp_fu_220_p1;

assign ireg_9_fu_1278_p1 = grp_fu_223_p1;

assign ireg_fu_378_p1 = grp_fu_196_p1;


always @ (p_Result_23_fu_2781_p4) begin
    if (p_Result_23_fu_2781_p4[0] == 1'b1) begin
        l_fu_2791_p3 = 32'd0;
    end else if (p_Result_23_fu_2781_p4[1] == 1'b1) begin
        l_fu_2791_p3 = 32'd1;
    end else if (p_Result_23_fu_2781_p4[2] == 1'b1) begin
        l_fu_2791_p3 = 32'd2;
    end else if (p_Result_23_fu_2781_p4[3] == 1'b1) begin
        l_fu_2791_p3 = 32'd3;
    end else if (p_Result_23_fu_2781_p4[4] == 1'b1) begin
        l_fu_2791_p3 = 32'd4;
    end else if (p_Result_23_fu_2781_p4[5] == 1'b1) begin
        l_fu_2791_p3 = 32'd5;
    end else if (p_Result_23_fu_2781_p4[6] == 1'b1) begin
        l_fu_2791_p3 = 32'd6;
    end else if (p_Result_23_fu_2781_p4[7] == 1'b1) begin
        l_fu_2791_p3 = 32'd7;
    end else if (p_Result_23_fu_2781_p4[8] == 1'b1) begin
        l_fu_2791_p3 = 32'd8;
    end else if (p_Result_23_fu_2781_p4[9] == 1'b1) begin
        l_fu_2791_p3 = 32'd9;
    end else if (p_Result_23_fu_2781_p4[10] == 1'b1) begin
        l_fu_2791_p3 = 32'd10;
    end else if (p_Result_23_fu_2781_p4[11] == 1'b1) begin
        l_fu_2791_p3 = 32'd11;
    end else if (p_Result_23_fu_2781_p4[12] == 1'b1) begin
        l_fu_2791_p3 = 32'd12;
    end else if (p_Result_23_fu_2781_p4[13] == 1'b1) begin
        l_fu_2791_p3 = 32'd13;
    end else if (p_Result_23_fu_2781_p4[14] == 1'b1) begin
        l_fu_2791_p3 = 32'd14;
    end else if (p_Result_23_fu_2781_p4[15] == 1'b1) begin
        l_fu_2791_p3 = 32'd15;
    end else if (p_Result_23_fu_2781_p4[16] == 1'b1) begin
        l_fu_2791_p3 = 32'd16;
    end else if (p_Result_23_fu_2781_p4[17] == 1'b1) begin
        l_fu_2791_p3 = 32'd17;
    end else if (p_Result_23_fu_2781_p4[18] == 1'b1) begin
        l_fu_2791_p3 = 32'd18;
    end else if (p_Result_23_fu_2781_p4[19] == 1'b1) begin
        l_fu_2791_p3 = 32'd19;
    end else if (p_Result_23_fu_2781_p4[20] == 1'b1) begin
        l_fu_2791_p3 = 32'd20;
    end else if (p_Result_23_fu_2781_p4[21] == 1'b1) begin
        l_fu_2791_p3 = 32'd21;
    end else if (p_Result_23_fu_2781_p4[22] == 1'b1) begin
        l_fu_2791_p3 = 32'd22;
    end else if (p_Result_23_fu_2781_p4[23] == 1'b1) begin
        l_fu_2791_p3 = 32'd23;
    end else if (p_Result_23_fu_2781_p4[24] == 1'b1) begin
        l_fu_2791_p3 = 32'd24;
    end else if (p_Result_23_fu_2781_p4[25] == 1'b1) begin
        l_fu_2791_p3 = 32'd25;
    end else if (p_Result_23_fu_2781_p4[26] == 1'b1) begin
        l_fu_2791_p3 = 32'd26;
    end else if (p_Result_23_fu_2781_p4[27] == 1'b1) begin
        l_fu_2791_p3 = 32'd27;
    end else if (p_Result_23_fu_2781_p4[28] == 1'b1) begin
        l_fu_2791_p3 = 32'd28;
    end else if (p_Result_23_fu_2781_p4[29] == 1'b1) begin
        l_fu_2791_p3 = 32'd29;
    end else if (p_Result_23_fu_2781_p4[30] == 1'b1) begin
        l_fu_2791_p3 = 32'd30;
    end else if (p_Result_23_fu_2781_p4[31] == 1'b1) begin
        l_fu_2791_p3 = 32'd31;
    end else begin
        l_fu_2791_p3 = 32'd32;
    end
end

assign lsb_index_fu_2805_p2 = ($signed(sub_ln997_fu_2799_p2) + $signed(32'd4294967272));

assign lshr_ln1000_fu_2841_p2 = 32'd4294967295 >> zext_ln1000_fu_2837_p1;

assign lshr_ln1011_fu_2952_p2 = zext_ln1010_fu_2925_p1 >> zext_ln1011_fu_2948_p1;

assign m_2_fu_2968_p2 = (m_fu_2958_p3 + zext_ln1014_fu_2965_p1);

assign m_5_fu_2974_p4 = {{m_2_fu_2968_p2[63:1]}};

assign m_fu_2958_p3 = ((icmp_ln1011_reg_3613[0:0] == 1'b1) ? lshr_ln1011_fu_2952_p2 : shl_ln1012_fu_2937_p2);

assign man_V_10_fu_724_p2 = (54'd0 - zext_ln578_3_fu_720_p1);

assign man_V_11_fu_730_p3 = ((p_Result_8_fu_686_p3[0:0] == 1'b1) ? man_V_10_fu_724_p2 : zext_ln578_3_fu_720_p1);

assign man_V_13_fu_824_p2 = (54'd0 - zext_ln578_4_fu_820_p1);

assign man_V_14_fu_830_p3 = ((p_Result_10_fu_786_p3[0:0] == 1'b1) ? man_V_13_fu_824_p2 : zext_ln578_4_fu_820_p1);

assign man_V_16_fu_924_p2 = (54'd0 - zext_ln578_5_fu_920_p1);

assign man_V_17_fu_930_p3 = ((p_Result_12_fu_886_p3[0:0] == 1'b1) ? man_V_16_fu_924_p2 : zext_ln578_5_fu_920_p1);

assign man_V_19_fu_1024_p2 = (54'd0 - zext_ln578_6_fu_1020_p1);

assign man_V_1_fu_424_p2 = (54'd0 - zext_ln578_fu_420_p1);

assign man_V_20_fu_1030_p3 = ((p_Result_14_fu_986_p3[0:0] == 1'b1) ? man_V_19_fu_1024_p2 : zext_ln578_6_fu_1020_p1);

assign man_V_22_fu_1124_p2 = (54'd0 - zext_ln578_7_fu_1120_p1);

assign man_V_23_fu_1130_p3 = ((p_Result_16_fu_1086_p3[0:0] == 1'b1) ? man_V_22_fu_1124_p2 : zext_ln578_7_fu_1120_p1);

assign man_V_25_fu_1224_p2 = (54'd0 - zext_ln578_8_fu_1220_p1);

assign man_V_26_fu_1230_p3 = ((p_Result_18_fu_1186_p3[0:0] == 1'b1) ? man_V_25_fu_1224_p2 : zext_ln578_8_fu_1220_p1);

assign man_V_28_fu_1324_p2 = (54'd0 - zext_ln578_9_fu_1320_p1);

assign man_V_29_fu_1330_p3 = ((p_Result_20_fu_1286_p3[0:0] == 1'b1) ? man_V_28_fu_1324_p2 : zext_ln578_9_fu_1320_p1);

assign man_V_2_fu_430_p3 = ((p_Result_2_fu_386_p3[0:0] == 1'b1) ? man_V_1_fu_424_p2 : zext_ln578_fu_420_p1);

assign man_V_4_fu_524_p2 = (54'd0 - zext_ln578_1_fu_520_p1);

assign man_V_5_fu_530_p3 = ((p_Result_4_fu_486_p3[0:0] == 1'b1) ? man_V_4_fu_524_p2 : zext_ln578_1_fu_520_p1);

assign man_V_7_fu_624_p2 = (54'd0 - zext_ln578_2_fu_620_p1);

assign man_V_8_fu_630_p3 = ((p_Result_6_fu_586_p3[0:0] == 1'b1) ? man_V_7_fu_624_p2 : zext_ln578_2_fu_620_p1);

assign or_ln1002_1_fu_2853_p2 = (shl_ln1002_fu_2847_p2 | lshr_ln1000_fu_2841_p2);

assign or_ln590_1_fu_1609_p2 = (or_ln591_1_fu_1605_p2 | icmp_ln590_1_reg_3172);

assign or_ln590_2_fu_1747_p2 = (or_ln591_2_fu_1743_p2 | icmp_ln590_2_reg_3213);

assign or_ln590_3_fu_1885_p2 = (or_ln591_3_fu_1881_p2 | icmp_ln590_3_reg_3254);

assign or_ln590_4_fu_2023_p2 = (or_ln591_4_fu_2019_p2 | icmp_ln590_4_reg_3295);

assign or_ln590_5_fu_2161_p2 = (or_ln591_5_fu_2157_p2 | icmp_ln590_5_reg_3336);

assign or_ln590_6_fu_2299_p2 = (or_ln591_6_fu_2295_p2 | icmp_ln590_6_reg_3377);

assign or_ln590_7_fu_2437_p2 = (or_ln591_7_fu_2433_p2 | icmp_ln590_7_reg_3418);

assign or_ln590_8_fu_2575_p2 = (or_ln591_8_fu_2571_p2 | icmp_ln590_8_reg_3459);

assign or_ln590_9_fu_2713_p2 = (or_ln591_9_fu_2709_p2 | icmp_ln590_9_reg_3500);

assign or_ln590_fu_1471_p2 = (or_ln591_fu_1467_p2 | icmp_ln590_reg_3131);

assign or_ln591_1_fu_1605_p2 = (icmp_ln591_1_reg_3189 | icmp_ln580_1_reg_3165);

assign or_ln591_2_fu_1743_p2 = (icmp_ln591_2_reg_3230 | icmp_ln580_2_reg_3206);

assign or_ln591_3_fu_1881_p2 = (icmp_ln591_3_reg_3271 | icmp_ln580_3_reg_3247);

assign or_ln591_4_fu_2019_p2 = (icmp_ln591_4_reg_3312 | icmp_ln580_4_reg_3288);

assign or_ln591_5_fu_2157_p2 = (icmp_ln591_5_reg_3353 | icmp_ln580_5_reg_3329);

assign or_ln591_6_fu_2295_p2 = (icmp_ln591_6_reg_3394 | icmp_ln580_6_reg_3370);

assign or_ln591_7_fu_2433_p2 = (icmp_ln591_7_reg_3435 | icmp_ln580_7_reg_3411);

assign or_ln591_8_fu_2571_p2 = (icmp_ln591_8_reg_3476 | icmp_ln580_8_reg_3452);

assign or_ln591_9_fu_2709_p2 = (icmp_ln591_9_reg_3517 | icmp_ln580_9_reg_3493);

assign or_ln591_fu_1467_p2 = (icmp_ln591_reg_3148 | icmp_ln580_reg_3124);

assign out_r_TDATA_int_regslice = select_ln304_fu_3038_p3;

assign out_r_TVALID = regslice_both_out_r_V_data_V_U_vld_out;

assign p_Result_10_fu_786_p3 = ireg_4_fu_778_p1[32'd63];

assign p_Result_11_fu_812_p3 = {{1'd1}, {trunc_ln574_4_fu_808_p1}};

assign p_Result_12_fu_886_p3 = ireg_5_fu_878_p1[32'd63];

assign p_Result_13_fu_912_p3 = {{1'd1}, {trunc_ln574_5_fu_908_p1}};

assign p_Result_14_fu_986_p3 = ireg_6_fu_978_p1[32'd63];

assign p_Result_15_fu_1012_p3 = {{1'd1}, {trunc_ln574_6_fu_1008_p1}};

assign p_Result_16_fu_1086_p3 = ireg_7_fu_1078_p1[32'd63];

assign p_Result_17_fu_1112_p3 = {{1'd1}, {trunc_ln574_7_fu_1108_p1}};

assign p_Result_18_fu_1186_p3 = ireg_8_fu_1178_p1[32'd63];

assign p_Result_19_fu_1212_p3 = {{1'd1}, {trunc_ln574_8_fu_1208_p1}};

assign p_Result_20_fu_1286_p3 = ireg_9_fu_1278_p1[32'd63];

assign p_Result_21_fu_1312_p3 = {{1'd1}, {trunc_ln574_9_fu_1308_p1}};

integer ap_tvar_int_0;

always @ (tmp_V_3_fu_2776_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_23_fu_2781_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_2781_p4[ap_tvar_int_0] = tmp_V_3_fu_2776_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_24_fu_2885_p3 = tmp_V_3_fu_2776_p3[lsb_index_fu_2805_p2];

assign p_Result_25_fu_3022_p5 = {{zext_ln1015_fu_2984_p1[63:32]}, {tmp_s_fu_3015_p3}, {zext_ln1015_fu_2984_p1[22:0]}};

assign p_Result_2_fu_386_p3 = ireg_fu_378_p1[32'd63];

assign p_Result_3_fu_412_p3 = {{1'd1}, {trunc_ln574_fu_408_p1}};

assign p_Result_4_fu_486_p3 = ireg_1_fu_478_p1[32'd63];

assign p_Result_5_fu_512_p3 = {{1'd1}, {trunc_ln574_1_fu_508_p1}};

assign p_Result_6_fu_586_p3 = ireg_2_fu_578_p1[32'd63];

assign p_Result_7_fu_612_p3 = {{1'd1}, {trunc_ln574_2_fu_608_p1}};

assign p_Result_8_fu_686_p3 = ireg_3_fu_678_p1[32'd63];

assign p_Result_9_fu_712_p3 = {{1'd1}, {trunc_ln574_3_fu_708_p1}};

assign p_Result_s_fu_2988_p3 = m_2_fu_2968_p2[32'd25];

assign select_ln1011_fu_2913_p3 = ((icmp_ln1011_fu_2893_p2[0:0] == 1'b1) ? select_ln999_fu_2905_p3 : and_ln1002_1_fu_2899_p2);

assign select_ln304_fu_3038_p3 = ((icmp_ln988_reg_3597[0:0] == 1'b1) ? 32'd0 : LD_10_fu_3034_p1);

assign select_ln590_10_fu_2166_p3 = ((or_ln590_5_fu_2161_p2[0:0] == 1'b1) ? select_ln591_5_fu_2150_p3 : select_ln612_5_fu_2104_p3);

assign select_ln590_12_fu_2304_p3 = ((or_ln590_6_fu_2299_p2[0:0] == 1'b1) ? select_ln591_6_fu_2288_p3 : select_ln612_6_fu_2242_p3);

assign select_ln590_14_fu_2442_p3 = ((or_ln590_7_fu_2437_p2[0:0] == 1'b1) ? select_ln591_7_fu_2426_p3 : select_ln612_7_fu_2380_p3);

assign select_ln590_16_fu_2580_p3 = ((or_ln590_8_fu_2575_p2[0:0] == 1'b1) ? select_ln591_8_fu_2564_p3 : select_ln612_8_fu_2518_p3);

assign select_ln590_18_fu_2718_p3 = ((or_ln590_9_fu_2713_p2[0:0] == 1'b1) ? select_ln591_9_fu_2702_p3 : select_ln612_9_fu_2656_p3);

assign select_ln590_2_fu_1614_p3 = ((or_ln590_1_fu_1609_p2[0:0] == 1'b1) ? select_ln591_1_fu_1598_p3 : select_ln612_1_fu_1552_p3);

assign select_ln590_4_fu_1752_p3 = ((or_ln590_2_fu_1747_p2[0:0] == 1'b1) ? select_ln591_2_fu_1736_p3 : select_ln612_2_fu_1690_p3);

assign select_ln590_6_fu_1890_p3 = ((or_ln590_3_fu_1885_p2[0:0] == 1'b1) ? select_ln591_3_fu_1874_p3 : select_ln612_3_fu_1828_p3);

assign select_ln590_8_fu_2028_p3 = ((or_ln590_4_fu_2023_p2[0:0] == 1'b1) ? select_ln591_4_fu_2012_p3 : select_ln612_4_fu_1966_p3);

assign select_ln590_fu_1476_p3 = ((or_ln590_fu_1471_p2[0:0] == 1'b1) ? select_ln591_fu_1460_p3 : select_ln612_fu_1414_p3);

assign select_ln591_1_fu_1598_p3 = ((and_ln591_1_fu_1593_p2[0:0] == 1'b1) ? trunc_ln592_1_reg_3195 : select_ln597_1_fu_1580_p3);

assign select_ln591_2_fu_1736_p3 = ((and_ln591_2_fu_1731_p2[0:0] == 1'b1) ? trunc_ln592_2_reg_3236 : select_ln597_2_fu_1718_p3);

assign select_ln591_3_fu_1874_p3 = ((and_ln591_3_fu_1869_p2[0:0] == 1'b1) ? trunc_ln592_3_reg_3277 : select_ln597_3_fu_1856_p3);

assign select_ln591_4_fu_2012_p3 = ((and_ln591_4_fu_2007_p2[0:0] == 1'b1) ? trunc_ln592_4_reg_3318 : select_ln597_4_fu_1994_p3);

assign select_ln591_5_fu_2150_p3 = ((and_ln591_5_fu_2145_p2[0:0] == 1'b1) ? trunc_ln592_5_reg_3359 : select_ln597_5_fu_2132_p3);

assign select_ln591_6_fu_2288_p3 = ((and_ln591_6_fu_2283_p2[0:0] == 1'b1) ? trunc_ln592_6_reg_3400 : select_ln597_6_fu_2270_p3);

assign select_ln591_7_fu_2426_p3 = ((and_ln591_7_fu_2421_p2[0:0] == 1'b1) ? trunc_ln592_7_reg_3441 : select_ln597_7_fu_2408_p3);

assign select_ln591_8_fu_2564_p3 = ((and_ln591_8_fu_2559_p2[0:0] == 1'b1) ? trunc_ln592_8_reg_3482 : select_ln597_8_fu_2546_p3);

assign select_ln591_9_fu_2702_p3 = ((and_ln591_9_fu_2697_p2[0:0] == 1'b1) ? trunc_ln592_9_reg_3523 : select_ln597_9_fu_2684_p3);

assign select_ln591_fu_1460_p3 = ((and_ln591_fu_1455_p2[0:0] == 1'b1) ? trunc_ln592_reg_3154 : select_ln597_fu_1442_p3);

assign select_ln594_1_fu_1639_p3 = ((and_ln594_3_fu_1634_p2[0:0] == 1'b1) ? trunc_ln595_1_fu_1569_p1 : select_ln590_2_fu_1614_p3);

assign select_ln594_2_fu_1777_p3 = ((and_ln594_5_fu_1772_p2[0:0] == 1'b1) ? trunc_ln595_2_fu_1707_p1 : select_ln590_4_fu_1752_p3);

assign select_ln594_3_fu_1915_p3 = ((and_ln594_7_fu_1910_p2[0:0] == 1'b1) ? trunc_ln595_3_fu_1845_p1 : select_ln590_6_fu_1890_p3);

assign select_ln594_4_fu_2053_p3 = ((and_ln594_9_fu_2048_p2[0:0] == 1'b1) ? trunc_ln595_4_fu_1983_p1 : select_ln590_8_fu_2028_p3);

assign select_ln594_5_fu_2191_p3 = ((and_ln594_11_fu_2186_p2[0:0] == 1'b1) ? trunc_ln595_5_fu_2121_p1 : select_ln590_10_fu_2166_p3);

assign select_ln594_6_fu_2329_p3 = ((and_ln594_13_fu_2324_p2[0:0] == 1'b1) ? trunc_ln595_6_fu_2259_p1 : select_ln590_12_fu_2304_p3);

assign select_ln594_7_fu_2467_p3 = ((and_ln594_15_fu_2462_p2[0:0] == 1'b1) ? trunc_ln595_7_fu_2397_p1 : select_ln590_14_fu_2442_p3);

assign select_ln594_8_fu_2605_p3 = ((and_ln594_17_fu_2600_p2[0:0] == 1'b1) ? trunc_ln595_8_fu_2535_p1 : select_ln590_16_fu_2580_p3);

assign select_ln594_9_fu_2743_p3 = ((and_ln594_19_fu_2738_p2[0:0] == 1'b1) ? trunc_ln595_9_fu_2673_p1 : select_ln590_18_fu_2718_p3);

assign select_ln594_fu_1501_p3 = ((and_ln594_1_fu_1496_p2[0:0] == 1'b1) ? trunc_ln595_fu_1431_p1 : select_ln590_fu_1476_p3);

assign select_ln597_1_fu_1580_p3 = ((tmp_4_fu_1573_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_2_fu_1718_p3 = ((tmp_7_fu_1711_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_3_fu_1856_p3 = ((tmp_10_fu_1849_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_4_fu_1994_p3 = ((tmp_13_fu_1987_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_5_fu_2132_p3 = ((tmp_16_fu_2125_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_6_fu_2270_p3 = ((tmp_19_fu_2263_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_7_fu_2408_p3 = ((tmp_22_fu_2401_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_8_fu_2546_p3 = ((tmp_25_fu_2539_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_9_fu_2684_p3 = ((tmp_28_fu_2677_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_fu_1442_p3 = ((tmp_1_fu_1435_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_1_fu_1552_p3 = ((icmp_ln612_1_fu_1541_p2[0:0] == 1'b1) ? shl_ln613_1_fu_1547_p2 : 32'd0);

assign select_ln612_2_fu_1690_p3 = ((icmp_ln612_2_fu_1679_p2[0:0] == 1'b1) ? shl_ln613_2_fu_1685_p2 : 32'd0);

assign select_ln612_3_fu_1828_p3 = ((icmp_ln612_3_fu_1817_p2[0:0] == 1'b1) ? shl_ln613_3_fu_1823_p2 : 32'd0);

assign select_ln612_4_fu_1966_p3 = ((icmp_ln612_4_fu_1955_p2[0:0] == 1'b1) ? shl_ln613_4_fu_1961_p2 : 32'd0);

assign select_ln612_5_fu_2104_p3 = ((icmp_ln612_5_fu_2093_p2[0:0] == 1'b1) ? shl_ln613_5_fu_2099_p2 : 32'd0);

assign select_ln612_6_fu_2242_p3 = ((icmp_ln612_6_fu_2231_p2[0:0] == 1'b1) ? shl_ln613_6_fu_2237_p2 : 32'd0);

assign select_ln612_7_fu_2380_p3 = ((icmp_ln612_7_fu_2369_p2[0:0] == 1'b1) ? shl_ln613_7_fu_2375_p2 : 32'd0);

assign select_ln612_8_fu_2518_p3 = ((icmp_ln612_8_fu_2507_p2[0:0] == 1'b1) ? shl_ln613_8_fu_2513_p2 : 32'd0);

assign select_ln612_9_fu_2656_p3 = ((icmp_ln612_9_fu_2645_p2[0:0] == 1'b1) ? shl_ln613_9_fu_2651_p2 : 32'd0);

assign select_ln612_fu_1414_p3 = ((icmp_ln612_fu_1403_p2[0:0] == 1'b1) ? shl_ln613_fu_1409_p2 : 32'd0);

assign select_ln996_fu_2996_p3 = ((p_Result_s_fu_2988_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln999_fu_2905_p3 = ((icmp_ln999_fu_2821_p2[0:0] == 1'b1) ? icmp_ln1002_fu_2865_p2 : p_Result_24_fu_2885_p3);

assign sext_ln590_1_fu_1521_p1 = sh_amt_1_fu_1516_p3;

assign sext_ln590_2_fu_1659_p1 = sh_amt_2_fu_1654_p3;

assign sext_ln590_3_fu_1797_p1 = sh_amt_3_fu_1792_p3;

assign sext_ln590_4_fu_1935_p1 = sh_amt_4_fu_1930_p3;

assign sext_ln590_5_fu_2073_p1 = sh_amt_5_fu_2068_p3;

assign sext_ln590_6_fu_2211_p1 = sh_amt_6_fu_2206_p3;

assign sext_ln590_7_fu_2349_p1 = sh_amt_7_fu_2344_p3;

assign sext_ln590_8_fu_2487_p1 = sh_amt_8_fu_2482_p3;

assign sext_ln590_9_fu_2625_p1 = sh_amt_9_fu_2620_p3;

assign sext_ln590_fu_1383_p1 = sh_amt_fu_1378_p3;

assign sh_amt_1_fu_1516_p3 = ((icmp_ln590_1_reg_3172[0:0] == 1'b1) ? add_ln590_1_reg_3179 : sub_ln590_1_reg_3184);

assign sh_amt_2_fu_1654_p3 = ((icmp_ln590_2_reg_3213[0:0] == 1'b1) ? add_ln590_2_reg_3220 : sub_ln590_2_reg_3225);

assign sh_amt_3_fu_1792_p3 = ((icmp_ln590_3_reg_3254[0:0] == 1'b1) ? add_ln590_3_reg_3261 : sub_ln590_3_reg_3266);

assign sh_amt_4_fu_1930_p3 = ((icmp_ln590_4_reg_3295[0:0] == 1'b1) ? add_ln590_4_reg_3302 : sub_ln590_4_reg_3307);

assign sh_amt_5_fu_2068_p3 = ((icmp_ln590_5_reg_3336[0:0] == 1'b1) ? add_ln590_5_reg_3343 : sub_ln590_5_reg_3348);

assign sh_amt_6_fu_2206_p3 = ((icmp_ln590_6_reg_3377[0:0] == 1'b1) ? add_ln590_6_reg_3384 : sub_ln590_6_reg_3389);

assign sh_amt_7_fu_2344_p3 = ((icmp_ln590_7_reg_3418[0:0] == 1'b1) ? add_ln590_7_reg_3425 : sub_ln590_7_reg_3430);

assign sh_amt_8_fu_2482_p3 = ((icmp_ln590_8_reg_3459[0:0] == 1'b1) ? add_ln590_8_reg_3466 : sub_ln590_8_reg_3471);

assign sh_amt_9_fu_2620_p3 = ((icmp_ln590_9_reg_3500[0:0] == 1'b1) ? add_ln590_9_reg_3507 : sub_ln590_9_reg_3512);

assign sh_amt_fu_1378_p3 = ((icmp_ln590_reg_3131[0:0] == 1'b1) ? add_ln590_reg_3138 : sub_ln590_reg_3143);

assign shl_ln1002_fu_2847_p2 = 32'd1 << lsb_index_fu_2805_p2;

assign shl_ln1012_fu_2937_p2 = zext_ln1010_fu_2925_p1 << zext_ln1012_fu_2933_p1;

assign shl_ln613_1_fu_1547_p2 = trunc_ln592_1_reg_3195 << sext_ln590_1_fu_1521_p1;

assign shl_ln613_2_fu_1685_p2 = trunc_ln592_2_reg_3236 << sext_ln590_2_fu_1659_p1;

assign shl_ln613_3_fu_1823_p2 = trunc_ln592_3_reg_3277 << sext_ln590_3_fu_1797_p1;

assign shl_ln613_4_fu_1961_p2 = trunc_ln592_4_reg_3318 << sext_ln590_4_fu_1935_p1;

assign shl_ln613_5_fu_2099_p2 = trunc_ln592_5_reg_3359 << sext_ln590_5_fu_2073_p1;

assign shl_ln613_6_fu_2237_p2 = trunc_ln592_6_reg_3400 << sext_ln590_6_fu_2211_p1;

assign shl_ln613_7_fu_2375_p2 = trunc_ln592_7_reg_3441 << sext_ln590_7_fu_2349_p1;

assign shl_ln613_8_fu_2513_p2 = trunc_ln592_8_reg_3482 << sext_ln590_8_fu_2487_p1;

assign shl_ln613_9_fu_2651_p2 = trunc_ln592_9_reg_3523 << sext_ln590_9_fu_2625_p1;

assign shl_ln613_fu_1409_p2 = trunc_ln592_reg_3154 << sext_ln590_fu_1383_p1;

assign sub_ln1000_fu_2831_p2 = ($signed(6'd57) - $signed(trunc_ln1000_fu_2827_p1));

assign sub_ln1012_fu_2928_p2 = (32'd25 - sub_ln997_reg_3607);

assign sub_ln1017_fu_3004_p2 = (8'd16 - trunc_ln996_reg_3623);

assign sub_ln590_1_fu_562_p2 = (12'd16 - F2_1_fu_544_p2);

assign sub_ln590_2_fu_662_p2 = (12'd16 - F2_2_fu_644_p2);

assign sub_ln590_3_fu_762_p2 = (12'd16 - F2_3_fu_744_p2);

assign sub_ln590_4_fu_862_p2 = (12'd16 - F2_4_fu_844_p2);

assign sub_ln590_5_fu_962_p2 = (12'd16 - F2_5_fu_944_p2);

assign sub_ln590_6_fu_1062_p2 = (12'd16 - F2_6_fu_1044_p2);

assign sub_ln590_7_fu_1162_p2 = (12'd16 - F2_7_fu_1144_p2);

assign sub_ln590_8_fu_1262_p2 = (12'd16 - F2_8_fu_1244_p2);

assign sub_ln590_9_fu_1362_p2 = (12'd16 - F2_9_fu_1344_p2);

assign sub_ln590_fu_462_p2 = (12'd16 - F2_fu_444_p2);

assign sub_ln997_fu_2799_p2 = (32'd32 - l_fu_2791_p3);

assign tmp_10_fu_1849_p3 = p_0_reg_3050[32'd127];

assign tmp_12_fu_1945_p4 = {{sh_amt_4_fu_1930_p3[11:5]}};

assign tmp_13_fu_1987_p3 = p_0_reg_3050[32'd159];

assign tmp_15_fu_2083_p4 = {{sh_amt_5_fu_2068_p3[11:5]}};

assign tmp_16_fu_2125_p3 = p_0_reg_3050[32'd191];

assign tmp_18_fu_2221_p4 = {{sh_amt_6_fu_2206_p3[11:5]}};

assign tmp_19_fu_2263_p3 = p_0_reg_3050[32'd223];

assign tmp_1_fu_1435_p3 = p_0_reg_3050[32'd31];

assign tmp_21_fu_2359_p4 = {{sh_amt_7_fu_2344_p3[11:5]}};

assign tmp_22_fu_2401_p3 = p_0_reg_3050[32'd255];

assign tmp_24_fu_2497_p4 = {{sh_amt_8_fu_2482_p3[11:5]}};

assign tmp_25_fu_2539_p3 = p_0_reg_3050[32'd287];

assign tmp_27_fu_2635_p4 = {{sh_amt_9_fu_2620_p3[11:5]}};

assign tmp_28_fu_2677_p3 = p_0_reg_3050[32'd319];

assign tmp_30_fu_2811_p4 = {{lsb_index_fu_2805_p2[31:1]}};

assign tmp_31_fu_2871_p3 = lsb_index_fu_2805_p2[32'd31];

assign tmp_3_fu_1531_p4 = {{sh_amt_1_fu_1516_p3[11:5]}};

assign tmp_4_fu_1573_p3 = p_0_reg_3050[32'd63];

assign tmp_6_fu_1669_p4 = {{sh_amt_2_fu_1654_p3[11:5]}};

assign tmp_7_fu_1711_p3 = p_0_reg_3050[32'd95];

assign tmp_9_fu_1807_p4 = {{sh_amt_3_fu_1792_p3[11:5]}};

assign tmp_V_3_fu_2776_p3 = ((p_Result_22_reg_3586[0:0] == 1'b1) ? tmp_V_reg_3592 : out_local_V_reg_3579);

assign tmp_V_fu_2766_p2 = (32'd0 - out_local_V_reg_3579);

assign tmp_fu_1393_p4 = {{sh_amt_fu_1378_p3[11:5]}};

assign tmp_s_fu_3015_p3 = {{p_Result_22_reg_3586}, {add_ln1017_fu_3009_p2}};

assign trunc_ln1000_fu_2827_p1 = sub_ln997_fu_2799_p2[5:0];

assign trunc_ln293_1_fu_243_p4 = {{in_r_TDATA_int_regslice[63:32]}};

assign trunc_ln293_2_fu_258_p4 = {{in_r_TDATA_int_regslice[95:64]}};

assign trunc_ln293_3_fu_273_p4 = {{in_r_TDATA_int_regslice[127:96]}};

assign trunc_ln293_4_fu_288_p4 = {{in_r_TDATA_int_regslice[159:128]}};

assign trunc_ln293_5_fu_303_p4 = {{in_r_TDATA_int_regslice[191:160]}};

assign trunc_ln293_6_fu_318_p4 = {{in_r_TDATA_int_regslice[223:192]}};

assign trunc_ln293_7_fu_333_p4 = {{in_r_TDATA_int_regslice[255:224]}};

assign trunc_ln293_8_fu_348_p4 = {{in_r_TDATA_int_regslice[287:256]}};

assign trunc_ln293_9_fu_363_p4 = {{in_r_TDATA_int_regslice[319:288]}};

assign trunc_ln293_fu_234_p1 = in_r_TDATA_int_regslice[31:0];

assign trunc_ln564_1_fu_482_p1 = ireg_1_fu_478_p1[62:0];

assign trunc_ln564_2_fu_582_p1 = ireg_2_fu_578_p1[62:0];

assign trunc_ln564_3_fu_682_p1 = ireg_3_fu_678_p1[62:0];

assign trunc_ln564_4_fu_782_p1 = ireg_4_fu_778_p1[62:0];

assign trunc_ln564_5_fu_882_p1 = ireg_5_fu_878_p1[62:0];

assign trunc_ln564_6_fu_982_p1 = ireg_6_fu_978_p1[62:0];

assign trunc_ln564_7_fu_1082_p1 = ireg_7_fu_1078_p1[62:0];

assign trunc_ln564_8_fu_1182_p1 = ireg_8_fu_1178_p1[62:0];

assign trunc_ln564_9_fu_1282_p1 = ireg_9_fu_1278_p1[62:0];

assign trunc_ln564_fu_382_p1 = ireg_fu_378_p1[62:0];

assign trunc_ln574_1_fu_508_p1 = ireg_1_fu_478_p1[51:0];

assign trunc_ln574_2_fu_608_p1 = ireg_2_fu_578_p1[51:0];

assign trunc_ln574_3_fu_708_p1 = ireg_3_fu_678_p1[51:0];

assign trunc_ln574_4_fu_808_p1 = ireg_4_fu_778_p1[51:0];

assign trunc_ln574_5_fu_908_p1 = ireg_5_fu_878_p1[51:0];

assign trunc_ln574_6_fu_1008_p1 = ireg_6_fu_978_p1[51:0];

assign trunc_ln574_7_fu_1108_p1 = ireg_7_fu_1078_p1[51:0];

assign trunc_ln574_8_fu_1208_p1 = ireg_8_fu_1178_p1[51:0];

assign trunc_ln574_9_fu_1308_p1 = ireg_9_fu_1278_p1[51:0];

assign trunc_ln574_fu_408_p1 = ireg_fu_378_p1[51:0];

assign trunc_ln592_1_fu_574_p1 = man_V_5_fu_530_p3[31:0];

assign trunc_ln592_2_fu_674_p1 = man_V_8_fu_630_p3[31:0];

assign trunc_ln592_3_fu_774_p1 = man_V_11_fu_730_p3[31:0];

assign trunc_ln592_4_fu_874_p1 = man_V_14_fu_830_p3[31:0];

assign trunc_ln592_5_fu_974_p1 = man_V_17_fu_930_p3[31:0];

assign trunc_ln592_6_fu_1074_p1 = man_V_20_fu_1030_p3[31:0];

assign trunc_ln592_7_fu_1174_p1 = man_V_23_fu_1130_p3[31:0];

assign trunc_ln592_8_fu_1274_p1 = man_V_26_fu_1230_p3[31:0];

assign trunc_ln592_9_fu_1374_p1 = man_V_29_fu_1330_p3[31:0];

assign trunc_ln592_fu_474_p1 = man_V_2_fu_430_p3[31:0];

assign trunc_ln595_1_fu_1569_p1 = ashr_ln595_1_fu_1564_p2[31:0];

assign trunc_ln595_2_fu_1707_p1 = ashr_ln595_2_fu_1702_p2[31:0];

assign trunc_ln595_3_fu_1845_p1 = ashr_ln595_3_fu_1840_p2[31:0];

assign trunc_ln595_4_fu_1983_p1 = ashr_ln595_4_fu_1978_p2[31:0];

assign trunc_ln595_5_fu_2121_p1 = ashr_ln595_5_fu_2116_p2[31:0];

assign trunc_ln595_6_fu_2259_p1 = ashr_ln595_6_fu_2254_p2[31:0];

assign trunc_ln595_7_fu_2397_p1 = ashr_ln595_7_fu_2392_p2[31:0];

assign trunc_ln595_8_fu_2535_p1 = ashr_ln595_8_fu_2530_p2[31:0];

assign trunc_ln595_9_fu_2673_p1 = ashr_ln595_9_fu_2668_p2[31:0];

assign trunc_ln595_fu_1431_p1 = ashr_ln595_fu_1426_p2[31:0];

assign trunc_ln996_fu_2921_p1 = l_fu_2791_p3[7:0];

assign xor_ln1002_fu_2879_p2 = (tmp_31_fu_2871_p3 ^ 1'd1);

assign xor_ln580_1_fu_1588_p2 = (icmp_ln580_1_reg_3165 ^ 1'd1);

assign xor_ln580_2_fu_1726_p2 = (icmp_ln580_2_reg_3206 ^ 1'd1);

assign xor_ln580_3_fu_1864_p2 = (icmp_ln580_3_reg_3247 ^ 1'd1);

assign xor_ln580_4_fu_2002_p2 = (icmp_ln580_4_reg_3288 ^ 1'd1);

assign xor_ln580_5_fu_2140_p2 = (icmp_ln580_5_reg_3329 ^ 1'd1);

assign xor_ln580_6_fu_2278_p2 = (icmp_ln580_6_reg_3370 ^ 1'd1);

assign xor_ln580_7_fu_2416_p2 = (icmp_ln580_7_reg_3411 ^ 1'd1);

assign xor_ln580_8_fu_2554_p2 = (icmp_ln580_8_reg_3452 ^ 1'd1);

assign xor_ln580_9_fu_2692_p2 = (icmp_ln580_9_reg_3493 ^ 1'd1);

assign xor_ln580_fu_1450_p2 = (icmp_ln580_reg_3124 ^ 1'd1);

assign xor_ln591_1_fu_1622_p2 = (or_ln591_1_fu_1605_p2 ^ 1'd1);

assign xor_ln591_2_fu_1760_p2 = (or_ln591_2_fu_1743_p2 ^ 1'd1);

assign xor_ln591_3_fu_1898_p2 = (or_ln591_3_fu_1881_p2 ^ 1'd1);

assign xor_ln591_4_fu_2036_p2 = (or_ln591_4_fu_2019_p2 ^ 1'd1);

assign xor_ln591_5_fu_2174_p2 = (or_ln591_5_fu_2157_p2 ^ 1'd1);

assign xor_ln591_6_fu_2312_p2 = (or_ln591_6_fu_2295_p2 ^ 1'd1);

assign xor_ln591_7_fu_2450_p2 = (or_ln591_7_fu_2433_p2 ^ 1'd1);

assign xor_ln591_8_fu_2588_p2 = (or_ln591_8_fu_2571_p2 ^ 1'd1);

assign xor_ln591_9_fu_2726_p2 = (or_ln591_9_fu_2709_p2 ^ 1'd1);

assign xor_ln591_fu_1484_p2 = (or_ln591_fu_1467_p2 ^ 1'd1);

assign zext_ln1000_fu_2837_p1 = sub_ln1000_fu_2831_p2;

assign zext_ln1010_fu_2925_p1 = tmp_V_3_reg_3602;

assign zext_ln1011_fu_2948_p1 = add_ln1011_fu_2943_p2;

assign zext_ln1012_fu_2933_p1 = sub_ln1012_fu_2928_p2;

assign zext_ln1014_fu_2965_p1 = select_ln1011_reg_3618;

assign zext_ln1015_fu_2984_p1 = m_5_fu_2974_p4;

assign zext_ln501_1_fu_504_p1 = exp_tmp_1_fu_494_p4;

assign zext_ln501_2_fu_604_p1 = exp_tmp_2_fu_594_p4;

assign zext_ln501_3_fu_704_p1 = exp_tmp_3_fu_694_p4;

assign zext_ln501_4_fu_804_p1 = exp_tmp_4_fu_794_p4;

assign zext_ln501_5_fu_904_p1 = exp_tmp_5_fu_894_p4;

assign zext_ln501_6_fu_1004_p1 = exp_tmp_6_fu_994_p4;

assign zext_ln501_7_fu_1104_p1 = exp_tmp_7_fu_1094_p4;

assign zext_ln501_8_fu_1204_p1 = exp_tmp_8_fu_1194_p4;

assign zext_ln501_9_fu_1304_p1 = exp_tmp_9_fu_1294_p4;

assign zext_ln501_fu_404_p1 = exp_tmp_fu_394_p4;

assign zext_ln578_1_fu_520_p1 = p_Result_5_fu_512_p3;

assign zext_ln578_2_fu_620_p1 = p_Result_7_fu_612_p3;

assign zext_ln578_3_fu_720_p1 = p_Result_9_fu_712_p3;

assign zext_ln578_4_fu_820_p1 = p_Result_11_fu_812_p3;

assign zext_ln578_5_fu_920_p1 = p_Result_13_fu_912_p3;

assign zext_ln578_6_fu_1020_p1 = p_Result_15_fu_1012_p3;

assign zext_ln578_7_fu_1120_p1 = p_Result_17_fu_1112_p3;

assign zext_ln578_8_fu_1220_p1 = p_Result_19_fu_1212_p3;

assign zext_ln578_9_fu_1320_p1 = p_Result_21_fu_1312_p3;

assign zext_ln578_fu_420_p1 = p_Result_3_fu_412_p3;

assign zext_ln595_1_fu_1560_p1 = $unsigned(sext_ln590_1_fu_1521_p1);

assign zext_ln595_2_fu_1698_p1 = $unsigned(sext_ln590_2_fu_1659_p1);

assign zext_ln595_3_fu_1836_p1 = $unsigned(sext_ln590_3_fu_1797_p1);

assign zext_ln595_4_fu_1974_p1 = $unsigned(sext_ln590_4_fu_1935_p1);

assign zext_ln595_5_fu_2112_p1 = $unsigned(sext_ln590_5_fu_2073_p1);

assign zext_ln595_6_fu_2250_p1 = $unsigned(sext_ln590_6_fu_2211_p1);

assign zext_ln595_7_fu_2388_p1 = $unsigned(sext_ln590_7_fu_2349_p1);

assign zext_ln595_8_fu_2526_p1 = $unsigned(sext_ln590_8_fu_2487_p1);

assign zext_ln595_9_fu_2664_p1 = $unsigned(sext_ln590_9_fu_2625_p1);

assign zext_ln595_fu_1422_p1 = $unsigned(sext_ln590_fu_1383_p1);

endmodule //myproject_axi
