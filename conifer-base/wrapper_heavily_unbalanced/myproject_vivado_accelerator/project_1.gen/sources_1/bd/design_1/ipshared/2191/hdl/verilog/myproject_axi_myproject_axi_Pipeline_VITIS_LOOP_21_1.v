// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_21_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_TVALID,
        in_r_TDATA,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TUSER,
        in_r_TLAST,
        in_r_TID,
        in_r_TDEST,
        in_local_V_9_out,
        in_local_V_9_out_ap_vld,
        in_local_V_8_out,
        in_local_V_8_out_ap_vld,
        in_local_V_7_out,
        in_local_V_7_out_ap_vld,
        in_local_V_6_out,
        in_local_V_6_out_ap_vld,
        in_local_V_5_out,
        in_local_V_5_out_ap_vld,
        in_local_V_4_out,
        in_local_V_4_out_ap_vld,
        in_local_V_3_out,
        in_local_V_3_out_ap_vld,
        in_local_V_2_out,
        in_local_V_2_out_ap_vld,
        in_local_V_1_out,
        in_local_V_1_out_ap_vld,
        in_local_V_out,
        in_local_V_out_ap_vld,
        tmp_last_V_1_out,
        tmp_last_V_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_r_TVALID;
input  [31:0] in_r_TDATA;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
input  [0:0] in_r_TID;
input  [0:0] in_r_TDEST;
output  [31:0] in_local_V_9_out;
output   in_local_V_9_out_ap_vld;
output  [31:0] in_local_V_8_out;
output   in_local_V_8_out_ap_vld;
output  [31:0] in_local_V_7_out;
output   in_local_V_7_out_ap_vld;
output  [31:0] in_local_V_6_out;
output   in_local_V_6_out_ap_vld;
output  [31:0] in_local_V_5_out;
output   in_local_V_5_out_ap_vld;
output  [31:0] in_local_V_4_out;
output   in_local_V_4_out_ap_vld;
output  [31:0] in_local_V_3_out;
output   in_local_V_3_out_ap_vld;
output  [31:0] in_local_V_2_out;
output   in_local_V_2_out_ap_vld;
output  [31:0] in_local_V_1_out;
output   in_local_V_1_out_ap_vld;
output  [31:0] in_local_V_out;
output   in_local_V_out_ap_vld;
output  [0:0] tmp_last_V_1_out;
output   tmp_last_V_1_out_ap_vld;

reg ap_idle;
reg in_r_TREADY;
reg in_local_V_9_out_ap_vld;
reg in_local_V_8_out_ap_vld;
reg in_local_V_7_out_ap_vld;
reg in_local_V_6_out_ap_vld;
reg in_local_V_5_out_ap_vld;
reg in_local_V_4_out_ap_vld;
reg in_local_V_3_out_ap_vld;
reg in_local_V_2_out_ap_vld;
reg in_local_V_1_out_ap_vld;
reg in_local_V_out_ap_vld;
reg tmp_last_V_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln21_fu_278_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] i_1_reg_1224;
reg   [3:0] i_1_reg_1224_pp0_iter1_reg;
reg   [3:0] i_1_reg_1224_pp0_iter2_reg;
reg   [0:0] icmp_ln21_reg_1237;
reg   [0:0] icmp_ln21_reg_1237_pp0_iter1_reg;
reg   [31:0] p_0_reg_1241;
reg   [31:0] p_0_reg_1241_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_1251;
wire   [51:0] trunc_ln574_fu_343_p1;
reg   [51:0] trunc_ln574_reg_1256;
wire   [0:0] icmp_ln580_fu_347_p2;
reg   [0:0] icmp_ln580_reg_1261;
reg   [0:0] icmp_ln580_reg_1261_pp0_iter2_reg;
wire   [0:0] icmp_ln590_fu_359_p2;
reg   [0:0] icmp_ln590_reg_1268;
wire   [11:0] add_ln590_fu_365_p2;
reg   [11:0] add_ln590_reg_1274;
wire   [11:0] sub_ln590_fu_371_p2;
reg   [11:0] sub_ln590_reg_1279;
wire   [0:0] icmp_ln591_fu_377_p2;
reg   [0:0] icmp_ln591_reg_1284;
wire   [31:0] select_ln590_fu_526_p3;
reg   [31:0] select_ln590_reg_1290;
reg   [0:0] in_struct_last_V_fu_124;
reg   [3:0] i_fu_128;
wire   [3:0] add_ln21_fu_284_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_1;
reg   [31:0] in_local_V_fu_132;
wire   [31:0] select_ln24_53_fu_1039_p3;
reg   [31:0] in_local_V_1_fu_136;
wire   [31:0] select_ln24_44_fu_967_p3;
reg   [31:0] in_local_V_2_fu_140;
wire   [31:0] select_ln24_36_fu_903_p3;
reg   [31:0] in_local_V_3_fu_144;
wire   [31:0] select_ln24_29_fu_847_p3;
reg   [31:0] in_local_V_4_fu_148;
wire   [31:0] select_ln24_23_fu_799_p3;
reg   [31:0] in_local_V_5_fu_152;
wire   [31:0] select_ln24_18_fu_759_p3;
reg   [31:0] in_local_V_6_fu_156;
wire   [31:0] select_ln24_14_fu_727_p3;
reg   [31:0] in_local_V_7_fu_160;
wire   [31:0] select_ln24_11_fu_703_p3;
reg   [31:0] in_local_V_8_fu_164;
wire   [31:0] select_ln24_9_fu_687_p3;
reg   [31:0] in_local_V_9_fu_168;
wire   [31:0] select_ln24_8_fu_679_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_267_p0;
wire   [63:0] grp_fu_267_p1;
wire   [63:0] ireg_fu_313_p1;
wire   [10:0] exp_tmp_fu_329_p4;
wire   [62:0] trunc_ln564_fu_317_p1;
wire   [11:0] zext_ln501_fu_339_p1;
wire   [11:0] F2_fu_353_p2;
wire   [52:0] p_Result_1_fu_383_p3;
wire   [53:0] zext_ln578_fu_390_p1;
wire   [53:0] man_V_1_fu_394_p2;
wire  signed [11:0] sh_amt_fu_407_p3;
wire   [53:0] man_V_2_fu_400_p3;
wire  signed [31:0] sext_ln590_fu_412_p1;
wire   [53:0] zext_ln595_fu_426_p1;
wire   [53:0] ashr_ln595_fu_430_p2;
wire   [0:0] tmp_fu_440_p3;
wire   [0:0] icmp_ln594_fu_420_p2;
wire   [31:0] trunc_ln595_fu_436_p1;
wire   [31:0] select_ln597_fu_447_p3;
wire   [6:0] tmp_1_fu_463_p4;
wire   [31:0] trunc_ln592_fu_416_p1;
wire   [0:0] icmp_ln612_fu_473_p2;
wire   [31:0] shl_ln613_fu_479_p2;
wire   [0:0] xor_ln580_fu_493_p2;
wire   [0:0] and_ln591_fu_498_p2;
wire   [31:0] select_ln612_fu_485_p3;
wire   [0:0] or_ln591_fu_511_p2;
wire   [0:0] xor_ln591_fu_515_p2;
wire   [0:0] and_ln590_fu_521_p2;
wire   [31:0] select_ln594_fu_455_p3;
wire   [31:0] select_ln591_fu_503_p3;
wire   [0:0] icmp_ln24_fu_570_p2;
wire   [31:0] select_ln580_fu_564_p3;
wire   [0:0] icmp_ln24_1_fu_583_p2;
wire   [31:0] select_ln24_fu_575_p3;
wire   [0:0] icmp_ln24_2_fu_596_p2;
wire   [31:0] select_ln24_1_fu_588_p3;
wire   [0:0] icmp_ln24_3_fu_609_p2;
wire   [31:0] select_ln24_2_fu_601_p3;
wire   [0:0] icmp_ln24_4_fu_622_p2;
wire   [31:0] select_ln24_3_fu_614_p3;
wire   [0:0] icmp_ln24_5_fu_635_p2;
wire   [31:0] select_ln24_4_fu_627_p3;
wire   [0:0] icmp_ln24_6_fu_648_p2;
wire   [31:0] select_ln24_5_fu_640_p3;
wire   [0:0] icmp_ln24_7_fu_661_p2;
wire   [31:0] select_ln24_6_fu_653_p3;
wire   [0:0] icmp_ln24_8_fu_674_p2;
wire   [31:0] select_ln24_7_fu_666_p3;
wire   [31:0] select_ln24_10_fu_695_p3;
wire   [31:0] select_ln24_12_fu_711_p3;
wire   [31:0] select_ln24_13_fu_719_p3;
wire   [31:0] select_ln24_15_fu_735_p3;
wire   [31:0] select_ln24_16_fu_743_p3;
wire   [31:0] select_ln24_17_fu_751_p3;
wire   [31:0] select_ln24_19_fu_767_p3;
wire   [31:0] select_ln24_20_fu_775_p3;
wire   [31:0] select_ln24_21_fu_783_p3;
wire   [31:0] select_ln24_22_fu_791_p3;
wire   [31:0] select_ln24_24_fu_807_p3;
wire   [31:0] select_ln24_25_fu_815_p3;
wire   [31:0] select_ln24_26_fu_823_p3;
wire   [31:0] select_ln24_27_fu_831_p3;
wire   [31:0] select_ln24_28_fu_839_p3;
wire   [31:0] select_ln24_30_fu_855_p3;
wire   [31:0] select_ln24_31_fu_863_p3;
wire   [31:0] select_ln24_32_fu_871_p3;
wire   [31:0] select_ln24_33_fu_879_p3;
wire   [31:0] select_ln24_34_fu_887_p3;
wire   [31:0] select_ln24_35_fu_895_p3;
wire   [31:0] select_ln24_37_fu_911_p3;
wire   [31:0] select_ln24_38_fu_919_p3;
wire   [31:0] select_ln24_39_fu_927_p3;
wire   [31:0] select_ln24_40_fu_935_p3;
wire   [31:0] select_ln24_41_fu_943_p3;
wire   [31:0] select_ln24_42_fu_951_p3;
wire   [31:0] select_ln24_43_fu_959_p3;
wire   [31:0] select_ln24_45_fu_975_p3;
wire   [31:0] select_ln24_46_fu_983_p3;
wire   [31:0] select_ln24_47_fu_991_p3;
wire   [31:0] select_ln24_48_fu_999_p3;
wire   [31:0] select_ln24_49_fu_1007_p3;
wire   [31:0] select_ln24_50_fu_1015_p3;
wire   [31:0] select_ln24_51_fu_1023_p3;
wire   [31:0] select_ln24_52_fu_1031_p3;
reg    grp_fu_267_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .ce(grp_fu_267_ce),
    .dout(grp_fu_267_p1)
);

myproject_axi_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln21_fu_278_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_fu_128 <= add_ln21_fu_284_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_128 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln590_reg_1274 <= add_ln590_fu_365_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_1224 <= ap_sig_allocacmp_i_1;
        i_1_reg_1224_pp0_iter1_reg <= i_1_reg_1224;
        icmp_ln21_reg_1237 <= icmp_ln21_fu_278_p2;
        icmp_ln21_reg_1237_pp0_iter1_reg <= icmp_ln21_reg_1237;
        icmp_ln580_reg_1261 <= icmp_ln580_fu_347_p2;
        icmp_ln590_reg_1268 <= icmp_ln590_fu_359_p2;
        icmp_ln591_reg_1284 <= icmp_ln591_fu_377_p2;
        p_0_reg_1241_pp0_iter1_reg <= p_0_reg_1241;
        p_Result_s_reg_1251 <= ireg_fu_313_p1[32'd63];
        sub_ln590_reg_1279 <= sub_ln590_fu_371_p2;
        trunc_ln574_reg_1256 <= trunc_ln574_fu_343_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_1_reg_1224_pp0_iter2_reg <= i_1_reg_1224_pp0_iter1_reg;
        icmp_ln580_reg_1261_pp0_iter2_reg <= icmp_ln580_reg_1261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_local_V_1_fu_136 <= select_ln24_44_fu_967_p3;
        in_local_V_2_fu_140 <= select_ln24_36_fu_903_p3;
        in_local_V_3_fu_144 <= select_ln24_29_fu_847_p3;
        in_local_V_4_fu_148 <= select_ln24_23_fu_799_p3;
        in_local_V_5_fu_152 <= select_ln24_18_fu_759_p3;
        in_local_V_6_fu_156 <= select_ln24_14_fu_727_p3;
        in_local_V_7_fu_160 <= select_ln24_11_fu_703_p3;
        in_local_V_8_fu_164 <= select_ln24_9_fu_687_p3;
        in_local_V_9_fu_168 <= select_ln24_8_fu_679_p3;
        in_local_V_fu_132 <= select_ln24_53_fu_1039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_fu_278_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_struct_last_V_fu_124 <= in_r_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_reg_1241 <= in_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln580_reg_1261 == 1'd0))) begin
        select_ln590_reg_1290 <= select_ln590_fu_526_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln21_fu_278_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_267_ce = 1'b1;
    end else begin
        grp_fu_267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_1_out_ap_vld = 1'b1;
    end else begin
        in_local_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_2_out_ap_vld = 1'b1;
    end else begin
        in_local_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_3_out_ap_vld = 1'b1;
    end else begin
        in_local_V_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_4_out_ap_vld = 1'b1;
    end else begin
        in_local_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_5_out_ap_vld = 1'b1;
    end else begin
        in_local_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_6_out_ap_vld = 1'b1;
    end else begin
        in_local_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_7_out_ap_vld = 1'b1;
    end else begin
        in_local_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_8_out_ap_vld = 1'b1;
    end else begin
        in_local_V_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_9_out_ap_vld = 1'b1;
    end else begin
        in_local_V_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        in_local_V_out_ap_vld = 1'b1;
    end else begin
        in_local_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln21_fu_278_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_fu_278_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_reg_1237_pp0_iter1_reg == 1'd1))) begin
        tmp_last_V_1_out_ap_vld = 1'b1;
    end else begin
        tmp_last_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_353_p2 = (12'd1075 - zext_ln501_fu_339_p1);

assign add_ln21_fu_284_p2 = (ap_sig_allocacmp_i_1 + 4'd1);

assign add_ln590_fu_365_p2 = ($signed(F2_fu_353_p2) + $signed(12'd4080));

assign and_ln590_fu_521_p2 = (xor_ln591_fu_515_p2 & icmp_ln590_reg_1268);

assign and_ln591_fu_498_p2 = (xor_ln580_fu_493_p2 & icmp_ln591_reg_1284);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln21_fu_278_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln21_fu_278_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln21_fu_278_p2 == 1'd0) & (in_r_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((icmp_ln21_fu_278_p2 == 1'd0) & (in_r_TVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln595_fu_430_p2 = $signed(man_V_2_fu_400_p3) >>> zext_ln595_fu_426_p1;

assign exp_tmp_fu_329_p4 = {{ireg_fu_313_p1[62:52]}};

assign grp_fu_267_p0 = in_r_TDATA;

assign icmp_ln21_fu_278_p2 = ((ap_sig_allocacmp_i_1 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_583_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln24_2_fu_596_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln24_3_fu_609_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln24_4_fu_622_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln24_5_fu_635_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln24_6_fu_648_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln24_7_fu_661_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln24_8_fu_674_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_570_p2 = ((i_1_reg_1224_pp0_iter2_reg == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_347_p2 = ((trunc_ln564_fu_317_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_359_p2 = (($signed(F2_fu_353_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_377_p2 = ((F2_fu_353_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_420_p2 = ((sh_amt_fu_407_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_473_p2 = ((tmp_1_fu_463_p4 == 7'd0) ? 1'b1 : 1'b0);

assign in_local_V_1_out = in_local_V_1_fu_136;

assign in_local_V_2_out = in_local_V_2_fu_140;

assign in_local_V_3_out = in_local_V_3_fu_144;

assign in_local_V_4_out = in_local_V_4_fu_148;

assign in_local_V_5_out = in_local_V_5_fu_152;

assign in_local_V_6_out = in_local_V_6_fu_156;

assign in_local_V_7_out = in_local_V_7_fu_160;

assign in_local_V_8_out = in_local_V_8_fu_164;

assign in_local_V_9_out = in_local_V_9_fu_168;

assign in_local_V_out = in_local_V_fu_132;

assign ireg_fu_313_p1 = grp_fu_267_p1;

assign man_V_1_fu_394_p2 = (54'd0 - zext_ln578_fu_390_p1);

assign man_V_2_fu_400_p3 = ((p_Result_s_reg_1251[0:0] == 1'b1) ? man_V_1_fu_394_p2 : zext_ln578_fu_390_p1);

assign or_ln591_fu_511_p2 = (icmp_ln591_reg_1284 | icmp_ln580_reg_1261);

assign p_Result_1_fu_383_p3 = {{1'd1}, {trunc_ln574_reg_1256}};

assign select_ln24_10_fu_695_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_7_fu_160);

assign select_ln24_11_fu_703_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_7_fu_160 : select_ln24_10_fu_695_p3);

assign select_ln24_12_fu_711_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_6_fu_156);

assign select_ln24_13_fu_719_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_6_fu_156 : select_ln24_12_fu_711_p3);

assign select_ln24_14_fu_727_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_6_fu_156 : select_ln24_13_fu_719_p3);

assign select_ln24_15_fu_735_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_5_fu_152);

assign select_ln24_16_fu_743_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_5_fu_152 : select_ln24_15_fu_735_p3);

assign select_ln24_17_fu_751_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_5_fu_152 : select_ln24_16_fu_743_p3);

assign select_ln24_18_fu_759_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_5_fu_152 : select_ln24_17_fu_751_p3);

assign select_ln24_19_fu_767_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_4_fu_148);

assign select_ln24_1_fu_588_p3 = ((icmp_ln24_1_fu_583_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_fu_575_p3);

assign select_ln24_20_fu_775_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_4_fu_148 : select_ln24_19_fu_767_p3);

assign select_ln24_21_fu_783_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_4_fu_148 : select_ln24_20_fu_775_p3);

assign select_ln24_22_fu_791_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_4_fu_148 : select_ln24_21_fu_783_p3);

assign select_ln24_23_fu_799_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_4_fu_148 : select_ln24_22_fu_791_p3);

assign select_ln24_24_fu_807_p3 = ((icmp_ln24_3_fu_609_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_3_fu_144);

assign select_ln24_25_fu_815_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? in_local_V_3_fu_144 : select_ln24_24_fu_807_p3);

assign select_ln24_26_fu_823_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_3_fu_144 : select_ln24_25_fu_815_p3);

assign select_ln24_27_fu_831_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_3_fu_144 : select_ln24_26_fu_823_p3);

assign select_ln24_28_fu_839_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_3_fu_144 : select_ln24_27_fu_831_p3);

assign select_ln24_29_fu_847_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_3_fu_144 : select_ln24_28_fu_839_p3);

assign select_ln24_2_fu_601_p3 = ((icmp_ln24_2_fu_596_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_1_fu_588_p3);

assign select_ln24_30_fu_855_p3 = ((icmp_ln24_2_fu_596_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_2_fu_140);

assign select_ln24_31_fu_863_p3 = ((icmp_ln24_3_fu_609_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_30_fu_855_p3);

assign select_ln24_32_fu_871_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_31_fu_863_p3);

assign select_ln24_33_fu_879_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_32_fu_871_p3);

assign select_ln24_34_fu_887_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_33_fu_879_p3);

assign select_ln24_35_fu_895_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_34_fu_887_p3);

assign select_ln24_36_fu_903_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_2_fu_140 : select_ln24_35_fu_895_p3);

assign select_ln24_37_fu_911_p3 = ((icmp_ln24_1_fu_583_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_1_fu_136);

assign select_ln24_38_fu_919_p3 = ((icmp_ln24_2_fu_596_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_37_fu_911_p3);

assign select_ln24_39_fu_927_p3 = ((icmp_ln24_3_fu_609_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_38_fu_919_p3);

assign select_ln24_3_fu_614_p3 = ((icmp_ln24_3_fu_609_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_2_fu_601_p3);

assign select_ln24_40_fu_935_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_39_fu_927_p3);

assign select_ln24_41_fu_943_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_40_fu_935_p3);

assign select_ln24_42_fu_951_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_41_fu_943_p3);

assign select_ln24_43_fu_959_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_42_fu_951_p3);

assign select_ln24_44_fu_967_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_1_fu_136 : select_ln24_43_fu_959_p3);

assign select_ln24_45_fu_975_p3 = ((icmp_ln24_fu_570_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_fu_132);

assign select_ln24_46_fu_983_p3 = ((icmp_ln24_1_fu_583_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_45_fu_975_p3);

assign select_ln24_47_fu_991_p3 = ((icmp_ln24_2_fu_596_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_46_fu_983_p3);

assign select_ln24_48_fu_999_p3 = ((icmp_ln24_3_fu_609_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_47_fu_991_p3);

assign select_ln24_49_fu_1007_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_48_fu_999_p3);

assign select_ln24_4_fu_627_p3 = ((icmp_ln24_4_fu_622_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_3_fu_614_p3);

assign select_ln24_50_fu_1015_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_49_fu_1007_p3);

assign select_ln24_51_fu_1023_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_50_fu_1015_p3);

assign select_ln24_52_fu_1031_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_51_fu_1023_p3);

assign select_ln24_53_fu_1039_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_fu_132 : select_ln24_52_fu_1031_p3);

assign select_ln24_5_fu_640_p3 = ((icmp_ln24_5_fu_635_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_4_fu_627_p3);

assign select_ln24_6_fu_653_p3 = ((icmp_ln24_6_fu_648_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_5_fu_640_p3);

assign select_ln24_7_fu_666_p3 = ((icmp_ln24_7_fu_661_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_6_fu_653_p3);

assign select_ln24_8_fu_679_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln24_7_fu_666_p3);

assign select_ln24_9_fu_687_p3 = ((icmp_ln24_8_fu_674_p2[0:0] == 1'b1) ? select_ln580_fu_564_p3 : in_local_V_8_fu_164);

assign select_ln24_fu_575_p3 = ((icmp_ln24_fu_570_p2[0:0] == 1'b1) ? in_local_V_9_fu_168 : select_ln580_fu_564_p3);

assign select_ln580_fu_564_p3 = ((icmp_ln580_reg_1261_pp0_iter2_reg[0:0] == 1'b1) ? 32'd0 : select_ln590_reg_1290);

assign select_ln590_fu_526_p3 = ((and_ln590_fu_521_p2[0:0] == 1'b1) ? select_ln594_fu_455_p3 : select_ln591_fu_503_p3);

assign select_ln591_fu_503_p3 = ((and_ln591_fu_498_p2[0:0] == 1'b1) ? trunc_ln592_fu_416_p1 : select_ln612_fu_485_p3);

assign select_ln594_fu_455_p3 = ((icmp_ln594_fu_420_p2[0:0] == 1'b1) ? trunc_ln595_fu_436_p1 : select_ln597_fu_447_p3);

assign select_ln597_fu_447_p3 = ((tmp_fu_440_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_fu_485_p3 = ((icmp_ln612_fu_473_p2[0:0] == 1'b1) ? shl_ln613_fu_479_p2 : 32'd0);

assign sext_ln590_fu_412_p1 = sh_amt_fu_407_p3;

assign sh_amt_fu_407_p3 = ((icmp_ln590_reg_1268[0:0] == 1'b1) ? add_ln590_reg_1274 : sub_ln590_reg_1279);

assign shl_ln613_fu_479_p2 = trunc_ln592_fu_416_p1 << sext_ln590_fu_412_p1;

assign sub_ln590_fu_371_p2 = (12'd16 - F2_fu_353_p2);

assign tmp_1_fu_463_p4 = {{sh_amt_fu_407_p3[11:5]}};

assign tmp_fu_440_p3 = p_0_reg_1241_pp0_iter1_reg[32'd31];

assign tmp_last_V_1_out = in_struct_last_V_fu_124;

assign trunc_ln564_fu_317_p1 = ireg_fu_313_p1[62:0];

assign trunc_ln574_fu_343_p1 = ireg_fu_313_p1[51:0];

assign trunc_ln592_fu_416_p1 = man_V_2_fu_400_p3[31:0];

assign trunc_ln595_fu_436_p1 = ashr_ln595_fu_430_p2[31:0];

assign xor_ln580_fu_493_p2 = (icmp_ln580_reg_1261 ^ 1'd1);

assign xor_ln591_fu_515_p2 = (or_ln591_fu_511_p2 ^ 1'd1);

assign zext_ln501_fu_339_p1 = exp_tmp_fu_329_p4;

assign zext_ln578_fu_390_p1 = p_Result_1_fu_383_p3;

assign zext_ln595_fu_426_p1 = $unsigned(sext_ln590_fu_412_p1);

endmodule //myproject_axi_myproject_axi_Pipeline_VITIS_LOOP_21_1
