// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi_myproject_axi,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.083000,HLS_SYN_LAT=19,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3037,HLS_SYN_LUT=11592,HLS_VERSION=2021_2}" *)

module myproject_axi (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TUSER,
        in_r_TLAST,
        in_r_TID,
        in_r_TDEST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TUSER,
        out_r_TLAST,
        out_r_TID,
        out_r_TDEST
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
input  [0:0] in_r_TID;
input  [0:0] in_r_TDEST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TUSER;
output  [0:0] out_r_TLAST;
output  [0:0] out_r_TID;
output  [0:0] out_r_TDEST;

 reg    ap_rst_n_inv;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg   [31:0] p_0_reg_2940;
reg   [31:0] p_s_reg_2946;
reg   [31:0] p_1_reg_2952;
reg   [31:0] p_2_reg_2958;
reg   [31:0] p_3_reg_2964;
reg   [31:0] p_4_reg_2970;
reg   [31:0] p_5_reg_2976;
reg   [31:0] p_6_reg_2982;
reg   [31:0] p_7_reg_2988;
reg   [31:0] p_8_reg_3039;
reg   [0:0] tmp_last_V_reg_3044;
wire   [53:0] man_V_2_fu_323_p3;
reg   [53:0] man_V_2_reg_3054;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln580_fu_331_p2;
reg   [0:0] icmp_ln580_reg_3059;
wire   [0:0] icmp_ln590_fu_343_p2;
reg   [0:0] icmp_ln590_reg_3066;
wire   [11:0] add_ln590_fu_349_p2;
reg   [11:0] add_ln590_reg_3073;
wire   [11:0] sub_ln590_fu_355_p2;
reg   [11:0] sub_ln590_reg_3078;
wire   [0:0] icmp_ln591_fu_361_p2;
reg   [0:0] icmp_ln591_reg_3083;
wire   [31:0] trunc_ln592_fu_367_p1;
reg   [31:0] trunc_ln592_reg_3089;
wire   [53:0] man_V_5_fu_423_p3;
reg   [53:0] man_V_5_reg_3095;
wire   [0:0] icmp_ln580_1_fu_431_p2;
reg   [0:0] icmp_ln580_1_reg_3100;
wire   [0:0] icmp_ln590_1_fu_443_p2;
reg   [0:0] icmp_ln590_1_reg_3107;
wire   [11:0] add_ln590_1_fu_449_p2;
reg   [11:0] add_ln590_1_reg_3114;
wire   [11:0] sub_ln590_1_fu_455_p2;
reg   [11:0] sub_ln590_1_reg_3119;
wire   [0:0] icmp_ln591_1_fu_461_p2;
reg   [0:0] icmp_ln591_1_reg_3124;
wire   [31:0] trunc_ln592_1_fu_467_p1;
reg   [31:0] trunc_ln592_1_reg_3130;
wire   [53:0] man_V_8_fu_523_p3;
reg   [53:0] man_V_8_reg_3136;
wire   [0:0] icmp_ln580_2_fu_531_p2;
reg   [0:0] icmp_ln580_2_reg_3141;
wire   [0:0] icmp_ln590_2_fu_543_p2;
reg   [0:0] icmp_ln590_2_reg_3148;
wire   [11:0] add_ln590_2_fu_549_p2;
reg   [11:0] add_ln590_2_reg_3155;
wire   [11:0] sub_ln590_2_fu_555_p2;
reg   [11:0] sub_ln590_2_reg_3160;
wire   [0:0] icmp_ln591_2_fu_561_p2;
reg   [0:0] icmp_ln591_2_reg_3165;
wire   [31:0] trunc_ln592_2_fu_567_p1;
reg   [31:0] trunc_ln592_2_reg_3171;
wire   [53:0] man_V_11_fu_623_p3;
reg   [53:0] man_V_11_reg_3177;
wire   [0:0] icmp_ln580_3_fu_631_p2;
reg   [0:0] icmp_ln580_3_reg_3182;
wire   [0:0] icmp_ln590_3_fu_643_p2;
reg   [0:0] icmp_ln590_3_reg_3189;
wire   [11:0] add_ln590_3_fu_649_p2;
reg   [11:0] add_ln590_3_reg_3196;
wire   [11:0] sub_ln590_3_fu_655_p2;
reg   [11:0] sub_ln590_3_reg_3201;
wire   [0:0] icmp_ln591_3_fu_661_p2;
reg   [0:0] icmp_ln591_3_reg_3206;
wire   [31:0] trunc_ln592_3_fu_667_p1;
reg   [31:0] trunc_ln592_3_reg_3212;
wire   [53:0] man_V_14_fu_723_p3;
reg   [53:0] man_V_14_reg_3218;
wire   [0:0] icmp_ln580_4_fu_731_p2;
reg   [0:0] icmp_ln580_4_reg_3223;
wire   [0:0] icmp_ln590_4_fu_743_p2;
reg   [0:0] icmp_ln590_4_reg_3230;
wire   [11:0] add_ln590_4_fu_749_p2;
reg   [11:0] add_ln590_4_reg_3237;
wire   [11:0] sub_ln590_4_fu_755_p2;
reg   [11:0] sub_ln590_4_reg_3242;
wire   [0:0] icmp_ln591_4_fu_761_p2;
reg   [0:0] icmp_ln591_4_reg_3247;
wire   [31:0] trunc_ln592_4_fu_767_p1;
reg   [31:0] trunc_ln592_4_reg_3253;
wire   [53:0] man_V_17_fu_823_p3;
reg   [53:0] man_V_17_reg_3259;
wire   [0:0] icmp_ln580_5_fu_831_p2;
reg   [0:0] icmp_ln580_5_reg_3264;
wire   [0:0] icmp_ln590_5_fu_843_p2;
reg   [0:0] icmp_ln590_5_reg_3271;
wire   [11:0] add_ln590_5_fu_849_p2;
reg   [11:0] add_ln590_5_reg_3278;
wire   [11:0] sub_ln590_5_fu_855_p2;
reg   [11:0] sub_ln590_5_reg_3283;
wire   [0:0] icmp_ln591_5_fu_861_p2;
reg   [0:0] icmp_ln591_5_reg_3288;
wire   [31:0] trunc_ln592_5_fu_867_p1;
reg   [31:0] trunc_ln592_5_reg_3294;
wire   [53:0] man_V_20_fu_923_p3;
reg   [53:0] man_V_20_reg_3300;
wire   [0:0] icmp_ln580_6_fu_931_p2;
reg   [0:0] icmp_ln580_6_reg_3305;
wire   [0:0] icmp_ln590_6_fu_943_p2;
reg   [0:0] icmp_ln590_6_reg_3312;
wire   [11:0] add_ln590_6_fu_949_p2;
reg   [11:0] add_ln590_6_reg_3319;
wire   [11:0] sub_ln590_6_fu_955_p2;
reg   [11:0] sub_ln590_6_reg_3324;
wire   [0:0] icmp_ln591_6_fu_961_p2;
reg   [0:0] icmp_ln591_6_reg_3329;
wire   [31:0] trunc_ln592_6_fu_967_p1;
reg   [31:0] trunc_ln592_6_reg_3335;
wire   [53:0] man_V_23_fu_1023_p3;
reg   [53:0] man_V_23_reg_3341;
wire   [0:0] icmp_ln580_7_fu_1031_p2;
reg   [0:0] icmp_ln580_7_reg_3346;
wire   [0:0] icmp_ln590_7_fu_1043_p2;
reg   [0:0] icmp_ln590_7_reg_3353;
wire   [11:0] add_ln590_7_fu_1049_p2;
reg   [11:0] add_ln590_7_reg_3360;
wire   [11:0] sub_ln590_7_fu_1055_p2;
reg   [11:0] sub_ln590_7_reg_3365;
wire   [0:0] icmp_ln591_7_fu_1061_p2;
reg   [0:0] icmp_ln591_7_reg_3370;
wire   [31:0] trunc_ln592_7_fu_1067_p1;
reg   [31:0] trunc_ln592_7_reg_3376;
wire   [53:0] man_V_26_fu_1123_p3;
reg   [53:0] man_V_26_reg_3382;
wire   [0:0] icmp_ln580_8_fu_1131_p2;
reg   [0:0] icmp_ln580_8_reg_3387;
wire   [0:0] icmp_ln590_8_fu_1143_p2;
reg   [0:0] icmp_ln590_8_reg_3394;
wire   [11:0] add_ln590_8_fu_1149_p2;
reg   [11:0] add_ln590_8_reg_3401;
wire   [11:0] sub_ln590_8_fu_1155_p2;
reg   [11:0] sub_ln590_8_reg_3406;
wire   [0:0] icmp_ln591_8_fu_1161_p2;
reg   [0:0] icmp_ln591_8_reg_3411;
wire   [31:0] trunc_ln592_8_fu_1167_p1;
reg   [31:0] trunc_ln592_8_reg_3417;
wire   [53:0] man_V_29_fu_1223_p3;
reg   [53:0] man_V_29_reg_3423;
wire   [0:0] icmp_ln580_9_fu_1231_p2;
reg   [0:0] icmp_ln580_9_reg_3428;
wire   [0:0] icmp_ln590_9_fu_1243_p2;
reg   [0:0] icmp_ln590_9_reg_3435;
wire   [11:0] add_ln590_9_fu_1249_p2;
reg   [11:0] add_ln590_9_reg_3442;
wire   [11:0] sub_ln590_9_fu_1255_p2;
reg   [11:0] sub_ln590_9_reg_3447;
wire   [0:0] icmp_ln591_9_fu_1261_p2;
reg   [0:0] icmp_ln591_9_reg_3452;
wire   [31:0] trunc_ln592_9_fu_1267_p1;
reg   [31:0] trunc_ln592_9_reg_3458;
wire   [31:0] in_local_V_fu_1402_p3;
reg   [31:0] in_local_V_reg_3464;
wire    ap_CS_fsm_state12;
wire   [31:0] in_local_V_1_fu_1540_p3;
reg   [31:0] in_local_V_1_reg_3469;
wire   [31:0] in_local_V_2_fu_1678_p3;
reg   [31:0] in_local_V_2_reg_3474;
wire   [31:0] in_local_V_3_fu_1816_p3;
reg   [31:0] in_local_V_3_reg_3479;
wire   [31:0] in_local_V_4_fu_1954_p3;
reg   [31:0] in_local_V_4_reg_3484;
wire   [31:0] in_local_V_5_fu_2092_p3;
reg   [31:0] in_local_V_5_reg_3489;
wire   [31:0] in_local_V_6_fu_2230_p3;
reg   [31:0] in_local_V_6_reg_3494;
wire   [31:0] in_local_V_7_fu_2368_p3;
reg   [31:0] in_local_V_7_reg_3499;
wire   [31:0] in_local_V_8_fu_2506_p3;
reg   [31:0] in_local_V_8_reg_3504;
wire   [31:0] in_local_V_9_fu_2644_p3;
reg   [31:0] in_local_V_9_reg_3509;
wire   [31:0] grp_myproject_fu_178_ap_return;
reg   [31:0] out_local_V_reg_3514;
wire    ap_CS_fsm_state17;
reg   [0:0] p_Result_22_reg_3520;
wire   [31:0] tmp_V_fu_2659_p2;
reg   [31:0] tmp_V_reg_3526;
wire   [0:0] icmp_ln988_fu_2665_p2;
reg   [0:0] icmp_ln988_reg_3531;
wire    ap_CS_fsm_state18;
wire   [31:0] tmp_V_3_fu_2670_p3;
reg   [31:0] tmp_V_3_reg_3536;
wire   [31:0] sub_ln997_fu_2693_p2;
reg   [31:0] sub_ln997_reg_3541;
wire   [0:0] icmp_ln1011_fu_2787_p2;
reg   [0:0] icmp_ln1011_reg_3547;
wire   [0:0] select_ln1011_fu_2807_p3;
reg   [0:0] select_ln1011_reg_3552;
wire   [7:0] trunc_ln996_fu_2815_p1;
reg   [7:0] trunc_ln996_reg_3557;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_192_p0;
wire   [31:0] grp_fu_195_p0;
wire   [31:0] grp_fu_198_p0;
wire   [31:0] grp_fu_201_p0;
wire   [31:0] grp_fu_204_p0;
wire   [31:0] grp_fu_207_p0;
wire   [31:0] grp_fu_210_p0;
wire   [31:0] grp_fu_213_p0;
wire   [31:0] grp_fu_216_p0;
wire   [31:0] grp_fu_219_p0;
wire   [63:0] grp_fu_192_p1;
wire   [63:0] ireg_fu_271_p1;
wire   [10:0] exp_tmp_fu_287_p4;
wire   [51:0] trunc_ln574_fu_301_p1;
wire   [52:0] p_Result_3_fu_305_p3;
wire   [53:0] zext_ln578_fu_313_p1;
wire   [0:0] p_Result_2_fu_279_p3;
wire   [53:0] man_V_1_fu_317_p2;
wire   [62:0] trunc_ln564_fu_275_p1;
wire   [11:0] zext_ln501_fu_297_p1;
wire   [11:0] F2_fu_337_p2;
wire   [63:0] grp_fu_195_p1;
wire   [63:0] ireg_1_fu_371_p1;
wire   [10:0] exp_tmp_1_fu_387_p4;
wire   [51:0] trunc_ln574_1_fu_401_p1;
wire   [52:0] p_Result_5_fu_405_p3;
wire   [53:0] zext_ln578_1_fu_413_p1;
wire   [0:0] p_Result_4_fu_379_p3;
wire   [53:0] man_V_4_fu_417_p2;
wire   [62:0] trunc_ln564_1_fu_375_p1;
wire   [11:0] zext_ln501_1_fu_397_p1;
wire   [11:0] F2_1_fu_437_p2;
wire   [63:0] grp_fu_198_p1;
wire   [63:0] ireg_2_fu_471_p1;
wire   [10:0] exp_tmp_2_fu_487_p4;
wire   [51:0] trunc_ln574_2_fu_501_p1;
wire   [52:0] p_Result_7_fu_505_p3;
wire   [53:0] zext_ln578_2_fu_513_p1;
wire   [0:0] p_Result_6_fu_479_p3;
wire   [53:0] man_V_7_fu_517_p2;
wire   [62:0] trunc_ln564_2_fu_475_p1;
wire   [11:0] zext_ln501_2_fu_497_p1;
wire   [11:0] F2_2_fu_537_p2;
wire   [63:0] grp_fu_201_p1;
wire   [63:0] ireg_3_fu_571_p1;
wire   [10:0] exp_tmp_3_fu_587_p4;
wire   [51:0] trunc_ln574_3_fu_601_p1;
wire   [52:0] p_Result_9_fu_605_p3;
wire   [53:0] zext_ln578_3_fu_613_p1;
wire   [0:0] p_Result_8_fu_579_p3;
wire   [53:0] man_V_10_fu_617_p2;
wire   [62:0] trunc_ln564_3_fu_575_p1;
wire   [11:0] zext_ln501_3_fu_597_p1;
wire   [11:0] F2_3_fu_637_p2;
wire   [63:0] grp_fu_204_p1;
wire   [63:0] ireg_4_fu_671_p1;
wire   [10:0] exp_tmp_4_fu_687_p4;
wire   [51:0] trunc_ln574_4_fu_701_p1;
wire   [52:0] p_Result_11_fu_705_p3;
wire   [53:0] zext_ln578_4_fu_713_p1;
wire   [0:0] p_Result_10_fu_679_p3;
wire   [53:0] man_V_13_fu_717_p2;
wire   [62:0] trunc_ln564_4_fu_675_p1;
wire   [11:0] zext_ln501_4_fu_697_p1;
wire   [11:0] F2_4_fu_737_p2;
wire   [63:0] grp_fu_207_p1;
wire   [63:0] ireg_5_fu_771_p1;
wire   [10:0] exp_tmp_5_fu_787_p4;
wire   [51:0] trunc_ln574_5_fu_801_p1;
wire   [52:0] p_Result_13_fu_805_p3;
wire   [53:0] zext_ln578_5_fu_813_p1;
wire   [0:0] p_Result_12_fu_779_p3;
wire   [53:0] man_V_16_fu_817_p2;
wire   [62:0] trunc_ln564_5_fu_775_p1;
wire   [11:0] zext_ln501_5_fu_797_p1;
wire   [11:0] F2_5_fu_837_p2;
wire   [63:0] grp_fu_210_p1;
wire   [63:0] ireg_6_fu_871_p1;
wire   [10:0] exp_tmp_6_fu_887_p4;
wire   [51:0] trunc_ln574_6_fu_901_p1;
wire   [52:0] p_Result_15_fu_905_p3;
wire   [53:0] zext_ln578_6_fu_913_p1;
wire   [0:0] p_Result_14_fu_879_p3;
wire   [53:0] man_V_19_fu_917_p2;
wire   [62:0] trunc_ln564_6_fu_875_p1;
wire   [11:0] zext_ln501_6_fu_897_p1;
wire   [11:0] F2_6_fu_937_p2;
wire   [63:0] grp_fu_213_p1;
wire   [63:0] ireg_7_fu_971_p1;
wire   [10:0] exp_tmp_7_fu_987_p4;
wire   [51:0] trunc_ln574_7_fu_1001_p1;
wire   [52:0] p_Result_17_fu_1005_p3;
wire   [53:0] zext_ln578_7_fu_1013_p1;
wire   [0:0] p_Result_16_fu_979_p3;
wire   [53:0] man_V_22_fu_1017_p2;
wire   [62:0] trunc_ln564_7_fu_975_p1;
wire   [11:0] zext_ln501_7_fu_997_p1;
wire   [11:0] F2_7_fu_1037_p2;
wire   [63:0] grp_fu_216_p1;
wire   [63:0] ireg_8_fu_1071_p1;
wire   [10:0] exp_tmp_8_fu_1087_p4;
wire   [51:0] trunc_ln574_8_fu_1101_p1;
wire   [52:0] p_Result_19_fu_1105_p3;
wire   [53:0] zext_ln578_8_fu_1113_p1;
wire   [0:0] p_Result_18_fu_1079_p3;
wire   [53:0] man_V_25_fu_1117_p2;
wire   [62:0] trunc_ln564_8_fu_1075_p1;
wire   [11:0] zext_ln501_8_fu_1097_p1;
wire   [11:0] F2_8_fu_1137_p2;
wire   [63:0] grp_fu_219_p1;
wire   [63:0] ireg_9_fu_1171_p1;
wire   [10:0] exp_tmp_9_fu_1187_p4;
wire   [51:0] trunc_ln574_9_fu_1201_p1;
wire   [52:0] p_Result_21_fu_1205_p3;
wire   [53:0] zext_ln578_9_fu_1213_p1;
wire   [0:0] p_Result_20_fu_1179_p3;
wire   [53:0] man_V_28_fu_1217_p2;
wire   [62:0] trunc_ln564_9_fu_1175_p1;
wire   [11:0] zext_ln501_9_fu_1197_p1;
wire   [11:0] F2_9_fu_1237_p2;
wire  signed [11:0] sh_amt_fu_1271_p3;
wire   [6:0] tmp_fu_1286_p4;
wire  signed [31:0] sext_ln590_fu_1276_p1;
wire   [0:0] icmp_ln612_fu_1296_p2;
wire   [31:0] shl_ln613_fu_1302_p2;
wire   [53:0] zext_ln595_fu_1315_p1;
wire   [53:0] ashr_ln595_fu_1319_p2;
wire   [0:0] tmp_1_fu_1328_p3;
wire   [0:0] xor_ln580_fu_1343_p2;
wire   [0:0] and_ln591_fu_1348_p2;
wire   [31:0] select_ln597_fu_1335_p3;
wire   [0:0] or_ln591_fu_1360_p2;
wire   [0:0] or_ln590_fu_1364_p2;
wire   [31:0] select_ln591_fu_1353_p3;
wire   [31:0] select_ln612_fu_1307_p3;
wire   [0:0] icmp_ln594_fu_1280_p2;
wire   [0:0] xor_ln591_fu_1377_p2;
wire   [0:0] and_ln594_fu_1383_p2;
wire   [0:0] and_ln594_1_fu_1389_p2;
wire   [31:0] trunc_ln595_fu_1324_p1;
wire   [31:0] select_ln590_fu_1369_p3;
wire   [31:0] select_ln594_fu_1394_p3;
wire  signed [11:0] sh_amt_1_fu_1409_p3;
wire   [6:0] tmp_3_fu_1424_p4;
wire  signed [31:0] sext_ln590_1_fu_1414_p1;
wire   [0:0] icmp_ln612_1_fu_1434_p2;
wire   [31:0] shl_ln613_1_fu_1440_p2;
wire   [53:0] zext_ln595_1_fu_1453_p1;
wire   [53:0] ashr_ln595_1_fu_1457_p2;
wire   [0:0] tmp_4_fu_1466_p3;
wire   [0:0] xor_ln580_1_fu_1481_p2;
wire   [0:0] and_ln591_1_fu_1486_p2;
wire   [31:0] select_ln597_1_fu_1473_p3;
wire   [0:0] or_ln591_1_fu_1498_p2;
wire   [0:0] or_ln590_1_fu_1502_p2;
wire   [31:0] select_ln591_1_fu_1491_p3;
wire   [31:0] select_ln612_1_fu_1445_p3;
wire   [0:0] icmp_ln594_1_fu_1418_p2;
wire   [0:0] xor_ln591_1_fu_1515_p2;
wire   [0:0] and_ln594_2_fu_1521_p2;
wire   [0:0] and_ln594_3_fu_1527_p2;
wire   [31:0] trunc_ln595_1_fu_1462_p1;
wire   [31:0] select_ln590_2_fu_1507_p3;
wire   [31:0] select_ln594_1_fu_1532_p3;
wire  signed [11:0] sh_amt_2_fu_1547_p3;
wire   [6:0] tmp_6_fu_1562_p4;
wire  signed [31:0] sext_ln590_2_fu_1552_p1;
wire   [0:0] icmp_ln612_2_fu_1572_p2;
wire   [31:0] shl_ln613_2_fu_1578_p2;
wire   [53:0] zext_ln595_2_fu_1591_p1;
wire   [53:0] ashr_ln595_2_fu_1595_p2;
wire   [0:0] tmp_7_fu_1604_p3;
wire   [0:0] xor_ln580_2_fu_1619_p2;
wire   [0:0] and_ln591_2_fu_1624_p2;
wire   [31:0] select_ln597_2_fu_1611_p3;
wire   [0:0] or_ln591_2_fu_1636_p2;
wire   [0:0] or_ln590_2_fu_1640_p2;
wire   [31:0] select_ln591_2_fu_1629_p3;
wire   [31:0] select_ln612_2_fu_1583_p3;
wire   [0:0] icmp_ln594_2_fu_1556_p2;
wire   [0:0] xor_ln591_2_fu_1653_p2;
wire   [0:0] and_ln594_4_fu_1659_p2;
wire   [0:0] and_ln594_5_fu_1665_p2;
wire   [31:0] trunc_ln595_2_fu_1600_p1;
wire   [31:0] select_ln590_4_fu_1645_p3;
wire   [31:0] select_ln594_2_fu_1670_p3;
wire  signed [11:0] sh_amt_3_fu_1685_p3;
wire   [6:0] tmp_9_fu_1700_p4;
wire  signed [31:0] sext_ln590_3_fu_1690_p1;
wire   [0:0] icmp_ln612_3_fu_1710_p2;
wire   [31:0] shl_ln613_3_fu_1716_p2;
wire   [53:0] zext_ln595_3_fu_1729_p1;
wire   [53:0] ashr_ln595_3_fu_1733_p2;
wire   [0:0] tmp_10_fu_1742_p3;
wire   [0:0] xor_ln580_3_fu_1757_p2;
wire   [0:0] and_ln591_3_fu_1762_p2;
wire   [31:0] select_ln597_3_fu_1749_p3;
wire   [0:0] or_ln591_3_fu_1774_p2;
wire   [0:0] or_ln590_3_fu_1778_p2;
wire   [31:0] select_ln591_3_fu_1767_p3;
wire   [31:0] select_ln612_3_fu_1721_p3;
wire   [0:0] icmp_ln594_3_fu_1694_p2;
wire   [0:0] xor_ln591_3_fu_1791_p2;
wire   [0:0] and_ln594_6_fu_1797_p2;
wire   [0:0] and_ln594_7_fu_1803_p2;
wire   [31:0] trunc_ln595_3_fu_1738_p1;
wire   [31:0] select_ln590_6_fu_1783_p3;
wire   [31:0] select_ln594_3_fu_1808_p3;
wire  signed [11:0] sh_amt_4_fu_1823_p3;
wire   [6:0] tmp_12_fu_1838_p4;
wire  signed [31:0] sext_ln590_4_fu_1828_p1;
wire   [0:0] icmp_ln612_4_fu_1848_p2;
wire   [31:0] shl_ln613_4_fu_1854_p2;
wire   [53:0] zext_ln595_4_fu_1867_p1;
wire   [53:0] ashr_ln595_4_fu_1871_p2;
wire   [0:0] tmp_13_fu_1880_p3;
wire   [0:0] xor_ln580_4_fu_1895_p2;
wire   [0:0] and_ln591_4_fu_1900_p2;
wire   [31:0] select_ln597_4_fu_1887_p3;
wire   [0:0] or_ln591_4_fu_1912_p2;
wire   [0:0] or_ln590_4_fu_1916_p2;
wire   [31:0] select_ln591_4_fu_1905_p3;
wire   [31:0] select_ln612_4_fu_1859_p3;
wire   [0:0] icmp_ln594_4_fu_1832_p2;
wire   [0:0] xor_ln591_4_fu_1929_p2;
wire   [0:0] and_ln594_8_fu_1935_p2;
wire   [0:0] and_ln594_9_fu_1941_p2;
wire   [31:0] trunc_ln595_4_fu_1876_p1;
wire   [31:0] select_ln590_8_fu_1921_p3;
wire   [31:0] select_ln594_4_fu_1946_p3;
wire  signed [11:0] sh_amt_5_fu_1961_p3;
wire   [6:0] tmp_15_fu_1976_p4;
wire  signed [31:0] sext_ln590_5_fu_1966_p1;
wire   [0:0] icmp_ln612_5_fu_1986_p2;
wire   [31:0] shl_ln613_5_fu_1992_p2;
wire   [53:0] zext_ln595_5_fu_2005_p1;
wire   [53:0] ashr_ln595_5_fu_2009_p2;
wire   [0:0] tmp_16_fu_2018_p3;
wire   [0:0] xor_ln580_5_fu_2033_p2;
wire   [0:0] and_ln591_5_fu_2038_p2;
wire   [31:0] select_ln597_5_fu_2025_p3;
wire   [0:0] or_ln591_5_fu_2050_p2;
wire   [0:0] or_ln590_5_fu_2054_p2;
wire   [31:0] select_ln591_5_fu_2043_p3;
wire   [31:0] select_ln612_5_fu_1997_p3;
wire   [0:0] icmp_ln594_5_fu_1970_p2;
wire   [0:0] xor_ln591_5_fu_2067_p2;
wire   [0:0] and_ln594_10_fu_2073_p2;
wire   [0:0] and_ln594_11_fu_2079_p2;
wire   [31:0] trunc_ln595_5_fu_2014_p1;
wire   [31:0] select_ln590_10_fu_2059_p3;
wire   [31:0] select_ln594_5_fu_2084_p3;
wire  signed [11:0] sh_amt_6_fu_2099_p3;
wire   [6:0] tmp_18_fu_2114_p4;
wire  signed [31:0] sext_ln590_6_fu_2104_p1;
wire   [0:0] icmp_ln612_6_fu_2124_p2;
wire   [31:0] shl_ln613_6_fu_2130_p2;
wire   [53:0] zext_ln595_6_fu_2143_p1;
wire   [53:0] ashr_ln595_6_fu_2147_p2;
wire   [0:0] tmp_19_fu_2156_p3;
wire   [0:0] xor_ln580_6_fu_2171_p2;
wire   [0:0] and_ln591_6_fu_2176_p2;
wire   [31:0] select_ln597_6_fu_2163_p3;
wire   [0:0] or_ln591_6_fu_2188_p2;
wire   [0:0] or_ln590_6_fu_2192_p2;
wire   [31:0] select_ln591_6_fu_2181_p3;
wire   [31:0] select_ln612_6_fu_2135_p3;
wire   [0:0] icmp_ln594_6_fu_2108_p2;
wire   [0:0] xor_ln591_6_fu_2205_p2;
wire   [0:0] and_ln594_12_fu_2211_p2;
wire   [0:0] and_ln594_13_fu_2217_p2;
wire   [31:0] trunc_ln595_6_fu_2152_p1;
wire   [31:0] select_ln590_12_fu_2197_p3;
wire   [31:0] select_ln594_6_fu_2222_p3;
wire  signed [11:0] sh_amt_7_fu_2237_p3;
wire   [6:0] tmp_21_fu_2252_p4;
wire  signed [31:0] sext_ln590_7_fu_2242_p1;
wire   [0:0] icmp_ln612_7_fu_2262_p2;
wire   [31:0] shl_ln613_7_fu_2268_p2;
wire   [53:0] zext_ln595_7_fu_2281_p1;
wire   [53:0] ashr_ln595_7_fu_2285_p2;
wire   [0:0] tmp_22_fu_2294_p3;
wire   [0:0] xor_ln580_7_fu_2309_p2;
wire   [0:0] and_ln591_7_fu_2314_p2;
wire   [31:0] select_ln597_7_fu_2301_p3;
wire   [0:0] or_ln591_7_fu_2326_p2;
wire   [0:0] or_ln590_7_fu_2330_p2;
wire   [31:0] select_ln591_7_fu_2319_p3;
wire   [31:0] select_ln612_7_fu_2273_p3;
wire   [0:0] icmp_ln594_7_fu_2246_p2;
wire   [0:0] xor_ln591_7_fu_2343_p2;
wire   [0:0] and_ln594_14_fu_2349_p2;
wire   [0:0] and_ln594_15_fu_2355_p2;
wire   [31:0] trunc_ln595_7_fu_2290_p1;
wire   [31:0] select_ln590_14_fu_2335_p3;
wire   [31:0] select_ln594_7_fu_2360_p3;
wire  signed [11:0] sh_amt_8_fu_2375_p3;
wire   [6:0] tmp_24_fu_2390_p4;
wire  signed [31:0] sext_ln590_8_fu_2380_p1;
wire   [0:0] icmp_ln612_8_fu_2400_p2;
wire   [31:0] shl_ln613_8_fu_2406_p2;
wire   [53:0] zext_ln595_8_fu_2419_p1;
wire   [53:0] ashr_ln595_8_fu_2423_p2;
wire   [0:0] tmp_25_fu_2432_p3;
wire   [0:0] xor_ln580_8_fu_2447_p2;
wire   [0:0] and_ln591_8_fu_2452_p2;
wire   [31:0] select_ln597_8_fu_2439_p3;
wire   [0:0] or_ln591_8_fu_2464_p2;
wire   [0:0] or_ln590_8_fu_2468_p2;
wire   [31:0] select_ln591_8_fu_2457_p3;
wire   [31:0] select_ln612_8_fu_2411_p3;
wire   [0:0] icmp_ln594_8_fu_2384_p2;
wire   [0:0] xor_ln591_8_fu_2481_p2;
wire   [0:0] and_ln594_16_fu_2487_p2;
wire   [0:0] and_ln594_17_fu_2493_p2;
wire   [31:0] trunc_ln595_8_fu_2428_p1;
wire   [31:0] select_ln590_16_fu_2473_p3;
wire   [31:0] select_ln594_8_fu_2498_p3;
wire  signed [11:0] sh_amt_9_fu_2513_p3;
wire   [6:0] tmp_27_fu_2528_p4;
wire  signed [31:0] sext_ln590_9_fu_2518_p1;
wire   [0:0] icmp_ln612_9_fu_2538_p2;
wire   [31:0] shl_ln613_9_fu_2544_p2;
wire   [53:0] zext_ln595_9_fu_2557_p1;
wire   [53:0] ashr_ln595_9_fu_2561_p2;
wire   [0:0] tmp_28_fu_2570_p3;
wire   [0:0] xor_ln580_9_fu_2585_p2;
wire   [0:0] and_ln591_9_fu_2590_p2;
wire   [31:0] select_ln597_9_fu_2577_p3;
wire   [0:0] or_ln591_9_fu_2602_p2;
wire   [0:0] or_ln590_9_fu_2606_p2;
wire   [31:0] select_ln591_9_fu_2595_p3;
wire   [31:0] select_ln612_9_fu_2549_p3;
wire   [0:0] icmp_ln594_9_fu_2522_p2;
wire   [0:0] xor_ln591_9_fu_2619_p2;
wire   [0:0] and_ln594_18_fu_2625_p2;
wire   [0:0] and_ln594_19_fu_2631_p2;
wire   [31:0] trunc_ln595_9_fu_2566_p1;
wire   [31:0] select_ln590_18_fu_2611_p3;
wire   [31:0] select_ln594_9_fu_2636_p3;
reg   [31:0] p_Result_23_fu_2675_p4;
reg   [31:0] l_fu_2685_p3;
wire   [31:0] lsb_index_fu_2699_p2;
wire   [30:0] tmp_30_fu_2705_p4;
wire   [5:0] trunc_ln1000_fu_2721_p1;
wire   [5:0] sub_ln1000_fu_2725_p2;
wire   [31:0] zext_ln1000_fu_2731_p1;
wire   [31:0] lshr_ln1000_fu_2735_p2;
wire   [31:0] shl_ln1002_fu_2741_p2;
wire   [31:0] or_ln1002_1_fu_2747_p2;
wire   [31:0] and_ln1002_fu_2753_p2;
wire   [0:0] tmp_31_fu_2765_p3;
wire   [0:0] p_Result_24_fu_2779_p3;
wire   [0:0] xor_ln1002_fu_2773_p2;
wire   [0:0] icmp_ln999_fu_2715_p2;
wire   [0:0] icmp_ln1002_fu_2759_p2;
wire   [0:0] select_ln999_fu_2799_p3;
wire   [0:0] and_ln1002_1_fu_2793_p2;
wire   [31:0] sub_ln1012_fu_2822_p2;
wire   [63:0] zext_ln1010_fu_2819_p1;
wire   [63:0] zext_ln1012_fu_2827_p1;
wire   [31:0] add_ln1011_fu_2837_p2;
wire   [63:0] zext_ln1011_fu_2842_p1;
wire   [63:0] lshr_ln1011_fu_2846_p2;
wire   [63:0] shl_ln1012_fu_2831_p2;
wire   [63:0] m_fu_2852_p3;
wire   [63:0] zext_ln1014_fu_2859_p1;
wire   [63:0] m_2_fu_2862_p2;
wire   [62:0] m_5_fu_2868_p4;
wire   [0:0] p_Result_s_fu_2882_p3;
wire   [7:0] sub_ln1017_fu_2898_p2;
wire   [7:0] select_ln996_fu_2890_p3;
wire   [7:0] add_ln1017_fu_2903_p2;
wire   [63:0] zext_ln1015_fu_2878_p1;
wire   [8:0] tmp_s_fu_2909_p3;
wire   [63:0] p_Result_25_fu_2916_p5;
wire   [31:0] LD_10_fu_2928_p1;
reg    grp_fu_192_ce;
reg    grp_fu_195_ce;
reg    grp_fu_198_ce;
reg    grp_fu_201_ce;
reg    grp_fu_204_ce;
reg    grp_fu_207_ce;
reg    grp_fu_210_ce;
reg    grp_fu_213_ce;
reg    grp_fu_216_ce;
reg    grp_fu_219_ce;
reg   [19:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    regslice_both_out_r_V_data_V_U_apdone_blk;
reg    ap_block_state20;
wire    regslice_both_in_r_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_r_V_data_V_U_ack_in;
wire    regslice_both_in_r_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_r_V_keep_V_U_vld_out;
wire    regslice_both_in_r_V_keep_V_U_ack_in;
wire    regslice_both_in_r_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_r_V_strb_V_U_vld_out;
wire    regslice_both_in_r_V_strb_V_U_ack_in;
wire    regslice_both_in_r_V_user_V_U_apdone_blk;
wire   [0:0] in_r_TUSER_int_regslice;
wire    regslice_both_in_r_V_user_V_U_vld_out;
wire    regslice_both_in_r_V_user_V_U_ack_in;
wire    regslice_both_in_r_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_r_V_last_V_U_vld_out;
wire    regslice_both_in_r_V_last_V_U_ack_in;
wire    regslice_both_in_r_V_id_V_U_apdone_blk;
wire   [0:0] in_r_TID_int_regslice;
wire    regslice_both_in_r_V_id_V_U_vld_out;
wire    regslice_both_in_r_V_id_V_U_ack_in;
wire    regslice_both_in_r_V_dest_V_U_apdone_blk;
wire   [0:0] in_r_TDEST_int_regslice;
wire    regslice_both_in_r_V_dest_V_U_vld_out;
wire    regslice_both_in_r_V_dest_V_U_ack_in;
wire   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_r_V_data_V_U_vld_out;
wire    regslice_both_out_r_V_keep_V_U_apdone_blk;
wire    regslice_both_out_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_keep_V_U_vld_out;
wire    regslice_both_out_r_V_strb_V_U_apdone_blk;
wire    regslice_both_out_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_strb_V_U_vld_out;
wire    regslice_both_out_r_V_user_V_U_apdone_blk;
wire    regslice_both_out_r_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_user_V_U_vld_out;
wire    regslice_both_out_r_V_last_V_U_apdone_blk;
wire    regslice_both_out_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_last_V_U_vld_out;
wire    regslice_both_out_r_V_id_V_U_apdone_blk;
wire    regslice_both_out_r_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_id_V_U_vld_out;
wire    regslice_both_out_r_V_dest_V_U_apdone_blk;
wire    regslice_both_out_r_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_r_V_dest_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

myproject_axi_myproject grp_myproject_fu_178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_read(in_local_V_reg_3464),
    .p_read1(in_local_V_1_reg_3469),
    .p_read2(in_local_V_2_reg_3474),
    .p_read3(in_local_V_3_reg_3479),
    .p_read4(in_local_V_4_reg_3484),
    .p_read5(in_local_V_5_reg_3489),
    .p_read6(in_local_V_6_reg_3494),
    .p_read7(in_local_V_7_reg_3499),
    .p_read8(in_local_V_8_reg_3504),
    .p_read9(in_local_V_9_reg_3509),
    .ap_return(grp_myproject_fu_178_ap_return)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_192_p0),
    .ce(grp_fu_192_ce),
    .dout(grp_fu_192_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_195_p0),
    .ce(grp_fu_195_ce),
    .dout(grp_fu_195_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U69(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_198_p0),
    .ce(grp_fu_198_ce),
    .dout(grp_fu_198_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U70(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_201_p0),
    .ce(grp_fu_201_ce),
    .dout(grp_fu_201_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U71(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_204_p0),
    .ce(grp_fu_204_ce),
    .dout(grp_fu_204_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U72(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_207_p0),
    .ce(grp_fu_207_ce),
    .dout(grp_fu_207_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U73(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_210_p0),
    .ce(grp_fu_210_ce),
    .dout(grp_fu_210_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U74(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_213_p0),
    .ce(grp_fu_213_ce),
    .dout(grp_fu_213_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U75(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_216_p0),
    .ce(grp_fu_216_ce),
    .dout(grp_fu_216_p1)
);

myproject_axi_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U76(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_219_p0),
    .ce(grp_fu_219_ce),
    .dout(grp_fu_219_p1)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_r_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_r_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TUSER),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_user_V_U_ack_in),
    .data_out(in_r_TUSER_int_regslice),
    .vld_out(regslice_both_in_r_V_user_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_user_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_r_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TID),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_id_V_U_ack_in),
    .data_out(in_r_TID_int_regslice),
    .vld_out(regslice_both_in_r_V_id_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_id_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDEST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_r_V_dest_V_U_ack_in),
    .data_out(in_r_TDEST_int_regslice),
    .vld_out(regslice_both_in_r_V_dest_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_r_V_dest_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_r_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_data_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_r_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_keep_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_r_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_strb_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_user_V_U_ack_in_dummy),
    .data_out(out_r_TUSER),
    .vld_out(regslice_both_out_r_V_user_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_user_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_3044),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_r_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_last_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_id_V_U_ack_in_dummy),
    .data_out(out_r_TID),
    .vld_out(regslice_both_out_r_V_id_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_id_V_U_apdone_blk)
);

myproject_axi_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_r_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_r_V_dest_V_U_ack_in_dummy),
    .data_out(out_r_TDEST),
    .vld_out(regslice_both_out_r_V_dest_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_r_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln590_1_reg_3114 <= add_ln590_1_fu_449_p2;
        add_ln590_2_reg_3155 <= add_ln590_2_fu_549_p2;
        add_ln590_3_reg_3196 <= add_ln590_3_fu_649_p2;
        add_ln590_4_reg_3237 <= add_ln590_4_fu_749_p2;
        add_ln590_5_reg_3278 <= add_ln590_5_fu_849_p2;
        add_ln590_6_reg_3319 <= add_ln590_6_fu_949_p2;
        add_ln590_7_reg_3360 <= add_ln590_7_fu_1049_p2;
        add_ln590_8_reg_3401 <= add_ln590_8_fu_1149_p2;
        add_ln590_9_reg_3442 <= add_ln590_9_fu_1249_p2;
        add_ln590_reg_3073 <= add_ln590_fu_349_p2;
        icmp_ln580_1_reg_3100 <= icmp_ln580_1_fu_431_p2;
        icmp_ln580_2_reg_3141 <= icmp_ln580_2_fu_531_p2;
        icmp_ln580_3_reg_3182 <= icmp_ln580_3_fu_631_p2;
        icmp_ln580_4_reg_3223 <= icmp_ln580_4_fu_731_p2;
        icmp_ln580_5_reg_3264 <= icmp_ln580_5_fu_831_p2;
        icmp_ln580_6_reg_3305 <= icmp_ln580_6_fu_931_p2;
        icmp_ln580_7_reg_3346 <= icmp_ln580_7_fu_1031_p2;
        icmp_ln580_8_reg_3387 <= icmp_ln580_8_fu_1131_p2;
        icmp_ln580_9_reg_3428 <= icmp_ln580_9_fu_1231_p2;
        icmp_ln580_reg_3059 <= icmp_ln580_fu_331_p2;
        icmp_ln590_1_reg_3107 <= icmp_ln590_1_fu_443_p2;
        icmp_ln590_2_reg_3148 <= icmp_ln590_2_fu_543_p2;
        icmp_ln590_3_reg_3189 <= icmp_ln590_3_fu_643_p2;
        icmp_ln590_4_reg_3230 <= icmp_ln590_4_fu_743_p2;
        icmp_ln590_5_reg_3271 <= icmp_ln590_5_fu_843_p2;
        icmp_ln590_6_reg_3312 <= icmp_ln590_6_fu_943_p2;
        icmp_ln590_7_reg_3353 <= icmp_ln590_7_fu_1043_p2;
        icmp_ln590_8_reg_3394 <= icmp_ln590_8_fu_1143_p2;
        icmp_ln590_9_reg_3435 <= icmp_ln590_9_fu_1243_p2;
        icmp_ln590_reg_3066 <= icmp_ln590_fu_343_p2;
        icmp_ln591_1_reg_3124 <= icmp_ln591_1_fu_461_p2;
        icmp_ln591_2_reg_3165 <= icmp_ln591_2_fu_561_p2;
        icmp_ln591_3_reg_3206 <= icmp_ln591_3_fu_661_p2;
        icmp_ln591_4_reg_3247 <= icmp_ln591_4_fu_761_p2;
        icmp_ln591_5_reg_3288 <= icmp_ln591_5_fu_861_p2;
        icmp_ln591_6_reg_3329 <= icmp_ln591_6_fu_961_p2;
        icmp_ln591_7_reg_3370 <= icmp_ln591_7_fu_1061_p2;
        icmp_ln591_8_reg_3411 <= icmp_ln591_8_fu_1161_p2;
        icmp_ln591_9_reg_3452 <= icmp_ln591_9_fu_1261_p2;
        icmp_ln591_reg_3083 <= icmp_ln591_fu_361_p2;
        man_V_11_reg_3177 <= man_V_11_fu_623_p3;
        man_V_14_reg_3218 <= man_V_14_fu_723_p3;
        man_V_17_reg_3259 <= man_V_17_fu_823_p3;
        man_V_20_reg_3300 <= man_V_20_fu_923_p3;
        man_V_23_reg_3341 <= man_V_23_fu_1023_p3;
        man_V_26_reg_3382 <= man_V_26_fu_1123_p3;
        man_V_29_reg_3423 <= man_V_29_fu_1223_p3;
        man_V_2_reg_3054 <= man_V_2_fu_323_p3;
        man_V_5_reg_3095 <= man_V_5_fu_423_p3;
        man_V_8_reg_3136 <= man_V_8_fu_523_p3;
        sub_ln590_1_reg_3119 <= sub_ln590_1_fu_455_p2;
        sub_ln590_2_reg_3160 <= sub_ln590_2_fu_555_p2;
        sub_ln590_3_reg_3201 <= sub_ln590_3_fu_655_p2;
        sub_ln590_4_reg_3242 <= sub_ln590_4_fu_755_p2;
        sub_ln590_5_reg_3283 <= sub_ln590_5_fu_855_p2;
        sub_ln590_6_reg_3324 <= sub_ln590_6_fu_955_p2;
        sub_ln590_7_reg_3365 <= sub_ln590_7_fu_1055_p2;
        sub_ln590_8_reg_3406 <= sub_ln590_8_fu_1155_p2;
        sub_ln590_9_reg_3447 <= sub_ln590_9_fu_1255_p2;
        sub_ln590_reg_3078 <= sub_ln590_fu_355_p2;
        trunc_ln592_1_reg_3130 <= trunc_ln592_1_fu_467_p1;
        trunc_ln592_2_reg_3171 <= trunc_ln592_2_fu_567_p1;
        trunc_ln592_3_reg_3212 <= trunc_ln592_3_fu_667_p1;
        trunc_ln592_4_reg_3253 <= trunc_ln592_4_fu_767_p1;
        trunc_ln592_5_reg_3294 <= trunc_ln592_5_fu_867_p1;
        trunc_ln592_6_reg_3335 <= trunc_ln592_6_fu_967_p1;
        trunc_ln592_7_reg_3376 <= trunc_ln592_7_fu_1067_p1;
        trunc_ln592_8_reg_3417 <= trunc_ln592_8_fu_1167_p1;
        trunc_ln592_9_reg_3458 <= trunc_ln592_9_fu_1267_p1;
        trunc_ln592_reg_3089 <= trunc_ln592_fu_367_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        icmp_ln1011_reg_3547 <= icmp_ln1011_fu_2787_p2;
        icmp_ln988_reg_3531 <= icmp_ln988_fu_2665_p2;
        select_ln1011_reg_3552 <= select_ln1011_fu_2807_p3;
        sub_ln997_reg_3541 <= sub_ln997_fu_2693_p2;
        tmp_V_3_reg_3536 <= tmp_V_3_fu_2670_p3;
        trunc_ln996_reg_3557 <= trunc_ln996_fu_2815_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        in_local_V_1_reg_3469 <= in_local_V_1_fu_1540_p3;
        in_local_V_2_reg_3474 <= in_local_V_2_fu_1678_p3;
        in_local_V_3_reg_3479 <= in_local_V_3_fu_1816_p3;
        in_local_V_4_reg_3484 <= in_local_V_4_fu_1954_p3;
        in_local_V_5_reg_3489 <= in_local_V_5_fu_2092_p3;
        in_local_V_6_reg_3494 <= in_local_V_6_fu_2230_p3;
        in_local_V_7_reg_3499 <= in_local_V_7_fu_2368_p3;
        in_local_V_8_reg_3504 <= in_local_V_8_fu_2506_p3;
        in_local_V_9_reg_3509 <= in_local_V_9_fu_2644_p3;
        in_local_V_reg_3464 <= in_local_V_fu_1402_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        out_local_V_reg_3514 <= grp_myproject_fu_178_ap_return;
        p_Result_22_reg_3520 <= grp_myproject_fu_178_ap_return[32'd31];
        tmp_V_reg_3526 <= tmp_V_fu_2659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_0_reg_2940 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_1_reg_2952 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_2_reg_2958 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_3_reg_2964 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_4_reg_2970 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_5_reg_2976 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_6_reg_2982 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_7_reg_2988 <= in_r_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_8_reg_3039 <= in_r_TDATA_int_regslice;
        tmp_last_V_reg_3044 <= in_r_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_s_reg_2946 <= in_r_TDATA_int_regslice;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((out_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((in_r_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_192_ce = 1'b1;
    end else begin
        grp_fu_192_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_195_ce = 1'b1;
    end else begin
        grp_fu_195_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_198_ce = 1'b1;
    end else begin
        grp_fu_198_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_201_ce = 1'b1;
    end else begin
        grp_fu_201_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_204_ce = 1'b1;
    end else begin
        grp_fu_204_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_207_ce = 1'b1;
    end else begin
        grp_fu_207_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_210_ce = 1'b1;
    end else begin
        grp_fu_210_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_213_ce = 1'b1;
    end else begin
        grp_fu_213_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_216_ce = 1'b1;
    end else begin
        grp_fu_216_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        grp_fu_219_ce = 1'b1;
    end else begin
        grp_fu_219_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1)))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (in_r_TVALID_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (out_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_437_p2 = (12'd1075 - zext_ln501_1_fu_397_p1);

assign F2_2_fu_537_p2 = (12'd1075 - zext_ln501_2_fu_497_p1);

assign F2_3_fu_637_p2 = (12'd1075 - zext_ln501_3_fu_597_p1);

assign F2_4_fu_737_p2 = (12'd1075 - zext_ln501_4_fu_697_p1);

assign F2_5_fu_837_p2 = (12'd1075 - zext_ln501_5_fu_797_p1);

assign F2_6_fu_937_p2 = (12'd1075 - zext_ln501_6_fu_897_p1);

assign F2_7_fu_1037_p2 = (12'd1075 - zext_ln501_7_fu_997_p1);

assign F2_8_fu_1137_p2 = (12'd1075 - zext_ln501_8_fu_1097_p1);

assign F2_9_fu_1237_p2 = (12'd1075 - zext_ln501_9_fu_1197_p1);

assign F2_fu_337_p2 = (12'd1075 - zext_ln501_fu_297_p1);

assign LD_10_fu_2928_p1 = p_Result_25_fu_2916_p5[31:0];

assign add_ln1011_fu_2837_p2 = ($signed(sub_ln997_reg_3541) + $signed(32'd4294967271));

assign add_ln1017_fu_2903_p2 = (sub_ln1017_fu_2898_p2 + select_ln996_fu_2890_p3);

assign add_ln590_1_fu_449_p2 = ($signed(F2_1_fu_437_p2) + $signed(12'd4080));

assign add_ln590_2_fu_549_p2 = ($signed(F2_2_fu_537_p2) + $signed(12'd4080));

assign add_ln590_3_fu_649_p2 = ($signed(F2_3_fu_637_p2) + $signed(12'd4080));

assign add_ln590_4_fu_749_p2 = ($signed(F2_4_fu_737_p2) + $signed(12'd4080));

assign add_ln590_5_fu_849_p2 = ($signed(F2_5_fu_837_p2) + $signed(12'd4080));

assign add_ln590_6_fu_949_p2 = ($signed(F2_6_fu_937_p2) + $signed(12'd4080));

assign add_ln590_7_fu_1049_p2 = ($signed(F2_7_fu_1037_p2) + $signed(12'd4080));

assign add_ln590_8_fu_1149_p2 = ($signed(F2_8_fu_1137_p2) + $signed(12'd4080));

assign add_ln590_9_fu_1249_p2 = ($signed(F2_9_fu_1237_p2) + $signed(12'd4080));

assign add_ln590_fu_349_p2 = ($signed(F2_fu_337_p2) + $signed(12'd4080));

assign and_ln1002_1_fu_2793_p2 = (xor_ln1002_fu_2773_p2 & p_Result_24_fu_2779_p3);

assign and_ln1002_fu_2753_p2 = (tmp_V_3_fu_2670_p3 & or_ln1002_1_fu_2747_p2);

assign and_ln591_1_fu_1486_p2 = (xor_ln580_1_fu_1481_p2 & icmp_ln591_1_reg_3124);

assign and_ln591_2_fu_1624_p2 = (xor_ln580_2_fu_1619_p2 & icmp_ln591_2_reg_3165);

assign and_ln591_3_fu_1762_p2 = (xor_ln580_3_fu_1757_p2 & icmp_ln591_3_reg_3206);

assign and_ln591_4_fu_1900_p2 = (xor_ln580_4_fu_1895_p2 & icmp_ln591_4_reg_3247);

assign and_ln591_5_fu_2038_p2 = (xor_ln580_5_fu_2033_p2 & icmp_ln591_5_reg_3288);

assign and_ln591_6_fu_2176_p2 = (xor_ln580_6_fu_2171_p2 & icmp_ln591_6_reg_3329);

assign and_ln591_7_fu_2314_p2 = (xor_ln580_7_fu_2309_p2 & icmp_ln591_7_reg_3370);

assign and_ln591_8_fu_2452_p2 = (xor_ln580_8_fu_2447_p2 & icmp_ln591_8_reg_3411);

assign and_ln591_9_fu_2590_p2 = (xor_ln580_9_fu_2585_p2 & icmp_ln591_9_reg_3452);

assign and_ln591_fu_1348_p2 = (xor_ln580_fu_1343_p2 & icmp_ln591_reg_3083);

assign and_ln594_10_fu_2073_p2 = (xor_ln591_5_fu_2067_p2 & icmp_ln594_5_fu_1970_p2);

assign and_ln594_11_fu_2079_p2 = (icmp_ln590_5_reg_3271 & and_ln594_10_fu_2073_p2);

assign and_ln594_12_fu_2211_p2 = (xor_ln591_6_fu_2205_p2 & icmp_ln594_6_fu_2108_p2);

assign and_ln594_13_fu_2217_p2 = (icmp_ln590_6_reg_3312 & and_ln594_12_fu_2211_p2);

assign and_ln594_14_fu_2349_p2 = (xor_ln591_7_fu_2343_p2 & icmp_ln594_7_fu_2246_p2);

assign and_ln594_15_fu_2355_p2 = (icmp_ln590_7_reg_3353 & and_ln594_14_fu_2349_p2);

assign and_ln594_16_fu_2487_p2 = (xor_ln591_8_fu_2481_p2 & icmp_ln594_8_fu_2384_p2);

assign and_ln594_17_fu_2493_p2 = (icmp_ln590_8_reg_3394 & and_ln594_16_fu_2487_p2);

assign and_ln594_18_fu_2625_p2 = (xor_ln591_9_fu_2619_p2 & icmp_ln594_9_fu_2522_p2);

assign and_ln594_19_fu_2631_p2 = (icmp_ln590_9_reg_3435 & and_ln594_18_fu_2625_p2);

assign and_ln594_1_fu_1389_p2 = (icmp_ln590_reg_3066 & and_ln594_fu_1383_p2);

assign and_ln594_2_fu_1521_p2 = (xor_ln591_1_fu_1515_p2 & icmp_ln594_1_fu_1418_p2);

assign and_ln594_3_fu_1527_p2 = (icmp_ln590_1_reg_3107 & and_ln594_2_fu_1521_p2);

assign and_ln594_4_fu_1659_p2 = (xor_ln591_2_fu_1653_p2 & icmp_ln594_2_fu_1556_p2);

assign and_ln594_5_fu_1665_p2 = (icmp_ln590_2_reg_3148 & and_ln594_4_fu_1659_p2);

assign and_ln594_6_fu_1797_p2 = (xor_ln591_3_fu_1791_p2 & icmp_ln594_3_fu_1694_p2);

assign and_ln594_7_fu_1803_p2 = (icmp_ln590_3_reg_3189 & and_ln594_6_fu_1797_p2);

assign and_ln594_8_fu_1935_p2 = (xor_ln591_4_fu_1929_p2 & icmp_ln594_4_fu_1832_p2);

assign and_ln594_9_fu_1941_p2 = (icmp_ln590_4_reg_3230 & and_ln594_8_fu_1935_p2);

assign and_ln594_fu_1383_p2 = (xor_ln591_fu_1377_p2 & icmp_ln594_fu_1280_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state20 = ((out_r_TREADY_int_regslice == 1'b0) | (regslice_both_out_r_V_data_V_U_apdone_blk == 1'b1));
end


assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln595_1_fu_1457_p2 = $signed(man_V_5_reg_3095) >>> zext_ln595_1_fu_1453_p1;

assign ashr_ln595_2_fu_1595_p2 = $signed(man_V_8_reg_3136) >>> zext_ln595_2_fu_1591_p1;

assign ashr_ln595_3_fu_1733_p2 = $signed(man_V_11_reg_3177) >>> zext_ln595_3_fu_1729_p1;

assign ashr_ln595_4_fu_1871_p2 = $signed(man_V_14_reg_3218) >>> zext_ln595_4_fu_1867_p1;

assign ashr_ln595_5_fu_2009_p2 = $signed(man_V_17_reg_3259) >>> zext_ln595_5_fu_2005_p1;

assign ashr_ln595_6_fu_2147_p2 = $signed(man_V_20_reg_3300) >>> zext_ln595_6_fu_2143_p1;

assign ashr_ln595_7_fu_2285_p2 = $signed(man_V_23_reg_3341) >>> zext_ln595_7_fu_2281_p1;

assign ashr_ln595_8_fu_2423_p2 = $signed(man_V_26_reg_3382) >>> zext_ln595_8_fu_2419_p1;

assign ashr_ln595_9_fu_2561_p2 = $signed(man_V_29_reg_3423) >>> zext_ln595_9_fu_2557_p1;

assign ashr_ln595_fu_1319_p2 = $signed(man_V_2_reg_3054) >>> zext_ln595_fu_1315_p1;

assign exp_tmp_1_fu_387_p4 = {{ireg_1_fu_371_p1[62:52]}};

assign exp_tmp_2_fu_487_p4 = {{ireg_2_fu_471_p1[62:52]}};

assign exp_tmp_3_fu_587_p4 = {{ireg_3_fu_571_p1[62:52]}};

assign exp_tmp_4_fu_687_p4 = {{ireg_4_fu_671_p1[62:52]}};

assign exp_tmp_5_fu_787_p4 = {{ireg_5_fu_771_p1[62:52]}};

assign exp_tmp_6_fu_887_p4 = {{ireg_6_fu_871_p1[62:52]}};

assign exp_tmp_7_fu_987_p4 = {{ireg_7_fu_971_p1[62:52]}};

assign exp_tmp_8_fu_1087_p4 = {{ireg_8_fu_1071_p1[62:52]}};

assign exp_tmp_9_fu_1187_p4 = {{ireg_9_fu_1171_p1[62:52]}};

assign exp_tmp_fu_287_p4 = {{ireg_fu_271_p1[62:52]}};

assign grp_fu_192_p0 = p_0_reg_2940;

assign grp_fu_195_p0 = p_s_reg_2946;

assign grp_fu_198_p0 = p_1_reg_2952;

assign grp_fu_201_p0 = p_2_reg_2958;

assign grp_fu_204_p0 = p_3_reg_2964;

assign grp_fu_207_p0 = p_4_reg_2970;

assign grp_fu_210_p0 = p_5_reg_2976;

assign grp_fu_213_p0 = p_6_reg_2982;

assign grp_fu_216_p0 = p_7_reg_2988;

assign grp_fu_219_p0 = in_r_TDATA_int_regslice;

assign icmp_ln1002_fu_2759_p2 = ((and_ln1002_fu_2753_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1011_fu_2787_p2 = (($signed(lsb_index_fu_2699_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_431_p2 = ((trunc_ln564_1_fu_375_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_531_p2 = ((trunc_ln564_2_fu_475_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_3_fu_631_p2 = ((trunc_ln564_3_fu_575_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_4_fu_731_p2 = ((trunc_ln564_4_fu_675_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_5_fu_831_p2 = ((trunc_ln564_5_fu_775_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_6_fu_931_p2 = ((trunc_ln564_6_fu_875_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_7_fu_1031_p2 = ((trunc_ln564_7_fu_975_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_8_fu_1131_p2 = ((trunc_ln564_8_fu_1075_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_9_fu_1231_p2 = ((trunc_ln564_9_fu_1175_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_331_p2 = ((trunc_ln564_fu_275_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_443_p2 = (($signed(F2_1_fu_437_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_2_fu_543_p2 = (($signed(F2_2_fu_537_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_3_fu_643_p2 = (($signed(F2_3_fu_637_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_4_fu_743_p2 = (($signed(F2_4_fu_737_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_5_fu_843_p2 = (($signed(F2_5_fu_837_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_6_fu_943_p2 = (($signed(F2_6_fu_937_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_7_fu_1043_p2 = (($signed(F2_7_fu_1037_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_8_fu_1143_p2 = (($signed(F2_8_fu_1137_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_9_fu_1243_p2 = (($signed(F2_9_fu_1237_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_343_p2 = (($signed(F2_fu_337_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_461_p2 = ((F2_1_fu_437_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_2_fu_561_p2 = ((F2_2_fu_537_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_3_fu_661_p2 = ((F2_3_fu_637_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_4_fu_761_p2 = ((F2_4_fu_737_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_5_fu_861_p2 = ((F2_5_fu_837_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_6_fu_961_p2 = ((F2_6_fu_937_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_7_fu_1061_p2 = ((F2_7_fu_1037_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_8_fu_1161_p2 = ((F2_8_fu_1137_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_9_fu_1261_p2 = ((F2_9_fu_1237_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_361_p2 = ((F2_fu_337_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_1418_p2 = ((sh_amt_1_fu_1409_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_2_fu_1556_p2 = ((sh_amt_2_fu_1547_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_3_fu_1694_p2 = ((sh_amt_3_fu_1685_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_4_fu_1832_p2 = ((sh_amt_4_fu_1823_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_5_fu_1970_p2 = ((sh_amt_5_fu_1961_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_6_fu_2108_p2 = ((sh_amt_6_fu_2099_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_7_fu_2246_p2 = ((sh_amt_7_fu_2237_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_8_fu_2384_p2 = ((sh_amt_8_fu_2375_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_9_fu_2522_p2 = ((sh_amt_9_fu_2513_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_1280_p2 = ((sh_amt_fu_1271_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_1434_p2 = ((tmp_3_fu_1424_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_2_fu_1572_p2 = ((tmp_6_fu_1562_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_3_fu_1710_p2 = ((tmp_9_fu_1700_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_4_fu_1848_p2 = ((tmp_12_fu_1838_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_5_fu_1986_p2 = ((tmp_15_fu_1976_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_6_fu_2124_p2 = ((tmp_18_fu_2114_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_7_fu_2262_p2 = ((tmp_21_fu_2252_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_8_fu_2400_p2 = ((tmp_24_fu_2390_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_9_fu_2538_p2 = ((tmp_27_fu_2528_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_1296_p2 = ((tmp_fu_1286_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln988_fu_2665_p2 = ((out_local_V_reg_3514 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln999_fu_2715_p2 = (($signed(tmp_30_fu_2705_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_1540_p3 = ((icmp_ln580_1_reg_3100[0:0] == 1'b1) ? 32'd0 : select_ln594_1_fu_1532_p3);

assign in_local_V_2_fu_1678_p3 = ((icmp_ln580_2_reg_3141[0:0] == 1'b1) ? 32'd0 : select_ln594_2_fu_1670_p3);

assign in_local_V_3_fu_1816_p3 = ((icmp_ln580_3_reg_3182[0:0] == 1'b1) ? 32'd0 : select_ln594_3_fu_1808_p3);

assign in_local_V_4_fu_1954_p3 = ((icmp_ln580_4_reg_3223[0:0] == 1'b1) ? 32'd0 : select_ln594_4_fu_1946_p3);

assign in_local_V_5_fu_2092_p3 = ((icmp_ln580_5_reg_3264[0:0] == 1'b1) ? 32'd0 : select_ln594_5_fu_2084_p3);

assign in_local_V_6_fu_2230_p3 = ((icmp_ln580_6_reg_3305[0:0] == 1'b1) ? 32'd0 : select_ln594_6_fu_2222_p3);

assign in_local_V_7_fu_2368_p3 = ((icmp_ln580_7_reg_3346[0:0] == 1'b1) ? 32'd0 : select_ln594_7_fu_2360_p3);

assign in_local_V_8_fu_2506_p3 = ((icmp_ln580_8_reg_3387[0:0] == 1'b1) ? 32'd0 : select_ln594_8_fu_2498_p3);

assign in_local_V_9_fu_2644_p3 = ((icmp_ln580_9_reg_3428[0:0] == 1'b1) ? 32'd0 : select_ln594_9_fu_2636_p3);

assign in_local_V_fu_1402_p3 = ((icmp_ln580_reg_3059[0:0] == 1'b1) ? 32'd0 : select_ln594_fu_1394_p3);

assign in_r_TREADY = regslice_both_in_r_V_data_V_U_ack_in;

assign ireg_1_fu_371_p1 = grp_fu_195_p1;

assign ireg_2_fu_471_p1 = grp_fu_198_p1;

assign ireg_3_fu_571_p1 = grp_fu_201_p1;

assign ireg_4_fu_671_p1 = grp_fu_204_p1;

assign ireg_5_fu_771_p1 = grp_fu_207_p1;

assign ireg_6_fu_871_p1 = grp_fu_210_p1;

assign ireg_7_fu_971_p1 = grp_fu_213_p1;

assign ireg_8_fu_1071_p1 = grp_fu_216_p1;

assign ireg_9_fu_1171_p1 = grp_fu_219_p1;

assign ireg_fu_271_p1 = grp_fu_192_p1;


always @ (p_Result_23_fu_2675_p4) begin
    if (p_Result_23_fu_2675_p4[0] == 1'b1) begin
        l_fu_2685_p3 = 32'd0;
    end else if (p_Result_23_fu_2675_p4[1] == 1'b1) begin
        l_fu_2685_p3 = 32'd1;
    end else if (p_Result_23_fu_2675_p4[2] == 1'b1) begin
        l_fu_2685_p3 = 32'd2;
    end else if (p_Result_23_fu_2675_p4[3] == 1'b1) begin
        l_fu_2685_p3 = 32'd3;
    end else if (p_Result_23_fu_2675_p4[4] == 1'b1) begin
        l_fu_2685_p3 = 32'd4;
    end else if (p_Result_23_fu_2675_p4[5] == 1'b1) begin
        l_fu_2685_p3 = 32'd5;
    end else if (p_Result_23_fu_2675_p4[6] == 1'b1) begin
        l_fu_2685_p3 = 32'd6;
    end else if (p_Result_23_fu_2675_p4[7] == 1'b1) begin
        l_fu_2685_p3 = 32'd7;
    end else if (p_Result_23_fu_2675_p4[8] == 1'b1) begin
        l_fu_2685_p3 = 32'd8;
    end else if (p_Result_23_fu_2675_p4[9] == 1'b1) begin
        l_fu_2685_p3 = 32'd9;
    end else if (p_Result_23_fu_2675_p4[10] == 1'b1) begin
        l_fu_2685_p3 = 32'd10;
    end else if (p_Result_23_fu_2675_p4[11] == 1'b1) begin
        l_fu_2685_p3 = 32'd11;
    end else if (p_Result_23_fu_2675_p4[12] == 1'b1) begin
        l_fu_2685_p3 = 32'd12;
    end else if (p_Result_23_fu_2675_p4[13] == 1'b1) begin
        l_fu_2685_p3 = 32'd13;
    end else if (p_Result_23_fu_2675_p4[14] == 1'b1) begin
        l_fu_2685_p3 = 32'd14;
    end else if (p_Result_23_fu_2675_p4[15] == 1'b1) begin
        l_fu_2685_p3 = 32'd15;
    end else if (p_Result_23_fu_2675_p4[16] == 1'b1) begin
        l_fu_2685_p3 = 32'd16;
    end else if (p_Result_23_fu_2675_p4[17] == 1'b1) begin
        l_fu_2685_p3 = 32'd17;
    end else if (p_Result_23_fu_2675_p4[18] == 1'b1) begin
        l_fu_2685_p3 = 32'd18;
    end else if (p_Result_23_fu_2675_p4[19] == 1'b1) begin
        l_fu_2685_p3 = 32'd19;
    end else if (p_Result_23_fu_2675_p4[20] == 1'b1) begin
        l_fu_2685_p3 = 32'd20;
    end else if (p_Result_23_fu_2675_p4[21] == 1'b1) begin
        l_fu_2685_p3 = 32'd21;
    end else if (p_Result_23_fu_2675_p4[22] == 1'b1) begin
        l_fu_2685_p3 = 32'd22;
    end else if (p_Result_23_fu_2675_p4[23] == 1'b1) begin
        l_fu_2685_p3 = 32'd23;
    end else if (p_Result_23_fu_2675_p4[24] == 1'b1) begin
        l_fu_2685_p3 = 32'd24;
    end else if (p_Result_23_fu_2675_p4[25] == 1'b1) begin
        l_fu_2685_p3 = 32'd25;
    end else if (p_Result_23_fu_2675_p4[26] == 1'b1) begin
        l_fu_2685_p3 = 32'd26;
    end else if (p_Result_23_fu_2675_p4[27] == 1'b1) begin
        l_fu_2685_p3 = 32'd27;
    end else if (p_Result_23_fu_2675_p4[28] == 1'b1) begin
        l_fu_2685_p3 = 32'd28;
    end else if (p_Result_23_fu_2675_p4[29] == 1'b1) begin
        l_fu_2685_p3 = 32'd29;
    end else if (p_Result_23_fu_2675_p4[30] == 1'b1) begin
        l_fu_2685_p3 = 32'd30;
    end else if (p_Result_23_fu_2675_p4[31] == 1'b1) begin
        l_fu_2685_p3 = 32'd31;
    end else begin
        l_fu_2685_p3 = 32'd32;
    end
end

assign lsb_index_fu_2699_p2 = ($signed(sub_ln997_fu_2693_p2) + $signed(32'd4294967272));

assign lshr_ln1000_fu_2735_p2 = 32'd4294967295 >> zext_ln1000_fu_2731_p1;

assign lshr_ln1011_fu_2846_p2 = zext_ln1010_fu_2819_p1 >> zext_ln1011_fu_2842_p1;

assign m_2_fu_2862_p2 = (m_fu_2852_p3 + zext_ln1014_fu_2859_p1);

assign m_5_fu_2868_p4 = {{m_2_fu_2862_p2[63:1]}};

assign m_fu_2852_p3 = ((icmp_ln1011_reg_3547[0:0] == 1'b1) ? lshr_ln1011_fu_2846_p2 : shl_ln1012_fu_2831_p2);

assign man_V_10_fu_617_p2 = (54'd0 - zext_ln578_3_fu_613_p1);

assign man_V_11_fu_623_p3 = ((p_Result_8_fu_579_p3[0:0] == 1'b1) ? man_V_10_fu_617_p2 : zext_ln578_3_fu_613_p1);

assign man_V_13_fu_717_p2 = (54'd0 - zext_ln578_4_fu_713_p1);

assign man_V_14_fu_723_p3 = ((p_Result_10_fu_679_p3[0:0] == 1'b1) ? man_V_13_fu_717_p2 : zext_ln578_4_fu_713_p1);

assign man_V_16_fu_817_p2 = (54'd0 - zext_ln578_5_fu_813_p1);

assign man_V_17_fu_823_p3 = ((p_Result_12_fu_779_p3[0:0] == 1'b1) ? man_V_16_fu_817_p2 : zext_ln578_5_fu_813_p1);

assign man_V_19_fu_917_p2 = (54'd0 - zext_ln578_6_fu_913_p1);

assign man_V_1_fu_317_p2 = (54'd0 - zext_ln578_fu_313_p1);

assign man_V_20_fu_923_p3 = ((p_Result_14_fu_879_p3[0:0] == 1'b1) ? man_V_19_fu_917_p2 : zext_ln578_6_fu_913_p1);

assign man_V_22_fu_1017_p2 = (54'd0 - zext_ln578_7_fu_1013_p1);

assign man_V_23_fu_1023_p3 = ((p_Result_16_fu_979_p3[0:0] == 1'b1) ? man_V_22_fu_1017_p2 : zext_ln578_7_fu_1013_p1);

assign man_V_25_fu_1117_p2 = (54'd0 - zext_ln578_8_fu_1113_p1);

assign man_V_26_fu_1123_p3 = ((p_Result_18_fu_1079_p3[0:0] == 1'b1) ? man_V_25_fu_1117_p2 : zext_ln578_8_fu_1113_p1);

assign man_V_28_fu_1217_p2 = (54'd0 - zext_ln578_9_fu_1213_p1);

assign man_V_29_fu_1223_p3 = ((p_Result_20_fu_1179_p3[0:0] == 1'b1) ? man_V_28_fu_1217_p2 : zext_ln578_9_fu_1213_p1);

assign man_V_2_fu_323_p3 = ((p_Result_2_fu_279_p3[0:0] == 1'b1) ? man_V_1_fu_317_p2 : zext_ln578_fu_313_p1);

assign man_V_4_fu_417_p2 = (54'd0 - zext_ln578_1_fu_413_p1);

assign man_V_5_fu_423_p3 = ((p_Result_4_fu_379_p3[0:0] == 1'b1) ? man_V_4_fu_417_p2 : zext_ln578_1_fu_413_p1);

assign man_V_7_fu_517_p2 = (54'd0 - zext_ln578_2_fu_513_p1);

assign man_V_8_fu_523_p3 = ((p_Result_6_fu_479_p3[0:0] == 1'b1) ? man_V_7_fu_517_p2 : zext_ln578_2_fu_513_p1);

assign or_ln1002_1_fu_2747_p2 = (shl_ln1002_fu_2741_p2 | lshr_ln1000_fu_2735_p2);

assign or_ln590_1_fu_1502_p2 = (or_ln591_1_fu_1498_p2 | icmp_ln590_1_reg_3107);

assign or_ln590_2_fu_1640_p2 = (or_ln591_2_fu_1636_p2 | icmp_ln590_2_reg_3148);

assign or_ln590_3_fu_1778_p2 = (or_ln591_3_fu_1774_p2 | icmp_ln590_3_reg_3189);

assign or_ln590_4_fu_1916_p2 = (or_ln591_4_fu_1912_p2 | icmp_ln590_4_reg_3230);

assign or_ln590_5_fu_2054_p2 = (or_ln591_5_fu_2050_p2 | icmp_ln590_5_reg_3271);

assign or_ln590_6_fu_2192_p2 = (or_ln591_6_fu_2188_p2 | icmp_ln590_6_reg_3312);

assign or_ln590_7_fu_2330_p2 = (or_ln591_7_fu_2326_p2 | icmp_ln590_7_reg_3353);

assign or_ln590_8_fu_2468_p2 = (or_ln591_8_fu_2464_p2 | icmp_ln590_8_reg_3394);

assign or_ln590_9_fu_2606_p2 = (or_ln591_9_fu_2602_p2 | icmp_ln590_9_reg_3435);

assign or_ln590_fu_1364_p2 = (or_ln591_fu_1360_p2 | icmp_ln590_reg_3066);

assign or_ln591_1_fu_1498_p2 = (icmp_ln591_1_reg_3124 | icmp_ln580_1_reg_3100);

assign or_ln591_2_fu_1636_p2 = (icmp_ln591_2_reg_3165 | icmp_ln580_2_reg_3141);

assign or_ln591_3_fu_1774_p2 = (icmp_ln591_3_reg_3206 | icmp_ln580_3_reg_3182);

assign or_ln591_4_fu_1912_p2 = (icmp_ln591_4_reg_3247 | icmp_ln580_4_reg_3223);

assign or_ln591_5_fu_2050_p2 = (icmp_ln591_5_reg_3288 | icmp_ln580_5_reg_3264);

assign or_ln591_6_fu_2188_p2 = (icmp_ln591_6_reg_3329 | icmp_ln580_6_reg_3305);

assign or_ln591_7_fu_2326_p2 = (icmp_ln591_7_reg_3370 | icmp_ln580_7_reg_3346);

assign or_ln591_8_fu_2464_p2 = (icmp_ln591_8_reg_3411 | icmp_ln580_8_reg_3387);

assign or_ln591_9_fu_2602_p2 = (icmp_ln591_9_reg_3452 | icmp_ln580_9_reg_3428);

assign or_ln591_fu_1360_p2 = (icmp_ln591_reg_3083 | icmp_ln580_reg_3059);

assign out_r_TDATA_int_regslice = ((icmp_ln988_reg_3531[0:0] == 1'b1) ? 32'd0 : LD_10_fu_2928_p1);

assign out_r_TVALID = regslice_both_out_r_V_data_V_U_vld_out;

assign p_Result_10_fu_679_p3 = ireg_4_fu_671_p1[32'd63];

assign p_Result_11_fu_705_p3 = {{1'd1}, {trunc_ln574_4_fu_701_p1}};

assign p_Result_12_fu_779_p3 = ireg_5_fu_771_p1[32'd63];

assign p_Result_13_fu_805_p3 = {{1'd1}, {trunc_ln574_5_fu_801_p1}};

assign p_Result_14_fu_879_p3 = ireg_6_fu_871_p1[32'd63];

assign p_Result_15_fu_905_p3 = {{1'd1}, {trunc_ln574_6_fu_901_p1}};

assign p_Result_16_fu_979_p3 = ireg_7_fu_971_p1[32'd63];

assign p_Result_17_fu_1005_p3 = {{1'd1}, {trunc_ln574_7_fu_1001_p1}};

assign p_Result_18_fu_1079_p3 = ireg_8_fu_1071_p1[32'd63];

assign p_Result_19_fu_1105_p3 = {{1'd1}, {trunc_ln574_8_fu_1101_p1}};

assign p_Result_20_fu_1179_p3 = ireg_9_fu_1171_p1[32'd63];

assign p_Result_21_fu_1205_p3 = {{1'd1}, {trunc_ln574_9_fu_1201_p1}};

integer ap_tvar_int_0;

always @ (tmp_V_3_fu_2670_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_23_fu_2675_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_23_fu_2675_p4[ap_tvar_int_0] = tmp_V_3_fu_2670_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_24_fu_2779_p3 = tmp_V_3_fu_2670_p3[lsb_index_fu_2699_p2];

assign p_Result_25_fu_2916_p5 = {{zext_ln1015_fu_2878_p1[63:32]}, {tmp_s_fu_2909_p3}, {zext_ln1015_fu_2878_p1[22:0]}};

assign p_Result_2_fu_279_p3 = ireg_fu_271_p1[32'd63];

assign p_Result_3_fu_305_p3 = {{1'd1}, {trunc_ln574_fu_301_p1}};

assign p_Result_4_fu_379_p3 = ireg_1_fu_371_p1[32'd63];

assign p_Result_5_fu_405_p3 = {{1'd1}, {trunc_ln574_1_fu_401_p1}};

assign p_Result_6_fu_479_p3 = ireg_2_fu_471_p1[32'd63];

assign p_Result_7_fu_505_p3 = {{1'd1}, {trunc_ln574_2_fu_501_p1}};

assign p_Result_8_fu_579_p3 = ireg_3_fu_571_p1[32'd63];

assign p_Result_9_fu_605_p3 = {{1'd1}, {trunc_ln574_3_fu_601_p1}};

assign p_Result_s_fu_2882_p3 = m_2_fu_2862_p2[32'd25];

assign select_ln1011_fu_2807_p3 = ((icmp_ln1011_fu_2787_p2[0:0] == 1'b1) ? select_ln999_fu_2799_p3 : and_ln1002_1_fu_2793_p2);

assign select_ln590_10_fu_2059_p3 = ((or_ln590_5_fu_2054_p2[0:0] == 1'b1) ? select_ln591_5_fu_2043_p3 : select_ln612_5_fu_1997_p3);

assign select_ln590_12_fu_2197_p3 = ((or_ln590_6_fu_2192_p2[0:0] == 1'b1) ? select_ln591_6_fu_2181_p3 : select_ln612_6_fu_2135_p3);

assign select_ln590_14_fu_2335_p3 = ((or_ln590_7_fu_2330_p2[0:0] == 1'b1) ? select_ln591_7_fu_2319_p3 : select_ln612_7_fu_2273_p3);

assign select_ln590_16_fu_2473_p3 = ((or_ln590_8_fu_2468_p2[0:0] == 1'b1) ? select_ln591_8_fu_2457_p3 : select_ln612_8_fu_2411_p3);

assign select_ln590_18_fu_2611_p3 = ((or_ln590_9_fu_2606_p2[0:0] == 1'b1) ? select_ln591_9_fu_2595_p3 : select_ln612_9_fu_2549_p3);

assign select_ln590_2_fu_1507_p3 = ((or_ln590_1_fu_1502_p2[0:0] == 1'b1) ? select_ln591_1_fu_1491_p3 : select_ln612_1_fu_1445_p3);

assign select_ln590_4_fu_1645_p3 = ((or_ln590_2_fu_1640_p2[0:0] == 1'b1) ? select_ln591_2_fu_1629_p3 : select_ln612_2_fu_1583_p3);

assign select_ln590_6_fu_1783_p3 = ((or_ln590_3_fu_1778_p2[0:0] == 1'b1) ? select_ln591_3_fu_1767_p3 : select_ln612_3_fu_1721_p3);

assign select_ln590_8_fu_1921_p3 = ((or_ln590_4_fu_1916_p2[0:0] == 1'b1) ? select_ln591_4_fu_1905_p3 : select_ln612_4_fu_1859_p3);

assign select_ln590_fu_1369_p3 = ((or_ln590_fu_1364_p2[0:0] == 1'b1) ? select_ln591_fu_1353_p3 : select_ln612_fu_1307_p3);

assign select_ln591_1_fu_1491_p3 = ((and_ln591_1_fu_1486_p2[0:0] == 1'b1) ? trunc_ln592_1_reg_3130 : select_ln597_1_fu_1473_p3);

assign select_ln591_2_fu_1629_p3 = ((and_ln591_2_fu_1624_p2[0:0] == 1'b1) ? trunc_ln592_2_reg_3171 : select_ln597_2_fu_1611_p3);

assign select_ln591_3_fu_1767_p3 = ((and_ln591_3_fu_1762_p2[0:0] == 1'b1) ? trunc_ln592_3_reg_3212 : select_ln597_3_fu_1749_p3);

assign select_ln591_4_fu_1905_p3 = ((and_ln591_4_fu_1900_p2[0:0] == 1'b1) ? trunc_ln592_4_reg_3253 : select_ln597_4_fu_1887_p3);

assign select_ln591_5_fu_2043_p3 = ((and_ln591_5_fu_2038_p2[0:0] == 1'b1) ? trunc_ln592_5_reg_3294 : select_ln597_5_fu_2025_p3);

assign select_ln591_6_fu_2181_p3 = ((and_ln591_6_fu_2176_p2[0:0] == 1'b1) ? trunc_ln592_6_reg_3335 : select_ln597_6_fu_2163_p3);

assign select_ln591_7_fu_2319_p3 = ((and_ln591_7_fu_2314_p2[0:0] == 1'b1) ? trunc_ln592_7_reg_3376 : select_ln597_7_fu_2301_p3);

assign select_ln591_8_fu_2457_p3 = ((and_ln591_8_fu_2452_p2[0:0] == 1'b1) ? trunc_ln592_8_reg_3417 : select_ln597_8_fu_2439_p3);

assign select_ln591_9_fu_2595_p3 = ((and_ln591_9_fu_2590_p2[0:0] == 1'b1) ? trunc_ln592_9_reg_3458 : select_ln597_9_fu_2577_p3);

assign select_ln591_fu_1353_p3 = ((and_ln591_fu_1348_p2[0:0] == 1'b1) ? trunc_ln592_reg_3089 : select_ln597_fu_1335_p3);

assign select_ln594_1_fu_1532_p3 = ((and_ln594_3_fu_1527_p2[0:0] == 1'b1) ? trunc_ln595_1_fu_1462_p1 : select_ln590_2_fu_1507_p3);

assign select_ln594_2_fu_1670_p3 = ((and_ln594_5_fu_1665_p2[0:0] == 1'b1) ? trunc_ln595_2_fu_1600_p1 : select_ln590_4_fu_1645_p3);

assign select_ln594_3_fu_1808_p3 = ((and_ln594_7_fu_1803_p2[0:0] == 1'b1) ? trunc_ln595_3_fu_1738_p1 : select_ln590_6_fu_1783_p3);

assign select_ln594_4_fu_1946_p3 = ((and_ln594_9_fu_1941_p2[0:0] == 1'b1) ? trunc_ln595_4_fu_1876_p1 : select_ln590_8_fu_1921_p3);

assign select_ln594_5_fu_2084_p3 = ((and_ln594_11_fu_2079_p2[0:0] == 1'b1) ? trunc_ln595_5_fu_2014_p1 : select_ln590_10_fu_2059_p3);

assign select_ln594_6_fu_2222_p3 = ((and_ln594_13_fu_2217_p2[0:0] == 1'b1) ? trunc_ln595_6_fu_2152_p1 : select_ln590_12_fu_2197_p3);

assign select_ln594_7_fu_2360_p3 = ((and_ln594_15_fu_2355_p2[0:0] == 1'b1) ? trunc_ln595_7_fu_2290_p1 : select_ln590_14_fu_2335_p3);

assign select_ln594_8_fu_2498_p3 = ((and_ln594_17_fu_2493_p2[0:0] == 1'b1) ? trunc_ln595_8_fu_2428_p1 : select_ln590_16_fu_2473_p3);

assign select_ln594_9_fu_2636_p3 = ((and_ln594_19_fu_2631_p2[0:0] == 1'b1) ? trunc_ln595_9_fu_2566_p1 : select_ln590_18_fu_2611_p3);

assign select_ln594_fu_1394_p3 = ((and_ln594_1_fu_1389_p2[0:0] == 1'b1) ? trunc_ln595_fu_1324_p1 : select_ln590_fu_1369_p3);

assign select_ln597_1_fu_1473_p3 = ((tmp_4_fu_1466_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_2_fu_1611_p3 = ((tmp_7_fu_1604_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_3_fu_1749_p3 = ((tmp_10_fu_1742_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_4_fu_1887_p3 = ((tmp_13_fu_1880_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_5_fu_2025_p3 = ((tmp_16_fu_2018_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_6_fu_2163_p3 = ((tmp_19_fu_2156_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_7_fu_2301_p3 = ((tmp_22_fu_2294_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_8_fu_2439_p3 = ((tmp_25_fu_2432_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_9_fu_2577_p3 = ((tmp_28_fu_2570_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln597_fu_1335_p3 = ((tmp_1_fu_1328_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln612_1_fu_1445_p3 = ((icmp_ln612_1_fu_1434_p2[0:0] == 1'b1) ? shl_ln613_1_fu_1440_p2 : 32'd0);

assign select_ln612_2_fu_1583_p3 = ((icmp_ln612_2_fu_1572_p2[0:0] == 1'b1) ? shl_ln613_2_fu_1578_p2 : 32'd0);

assign select_ln612_3_fu_1721_p3 = ((icmp_ln612_3_fu_1710_p2[0:0] == 1'b1) ? shl_ln613_3_fu_1716_p2 : 32'd0);

assign select_ln612_4_fu_1859_p3 = ((icmp_ln612_4_fu_1848_p2[0:0] == 1'b1) ? shl_ln613_4_fu_1854_p2 : 32'd0);

assign select_ln612_5_fu_1997_p3 = ((icmp_ln612_5_fu_1986_p2[0:0] == 1'b1) ? shl_ln613_5_fu_1992_p2 : 32'd0);

assign select_ln612_6_fu_2135_p3 = ((icmp_ln612_6_fu_2124_p2[0:0] == 1'b1) ? shl_ln613_6_fu_2130_p2 : 32'd0);

assign select_ln612_7_fu_2273_p3 = ((icmp_ln612_7_fu_2262_p2[0:0] == 1'b1) ? shl_ln613_7_fu_2268_p2 : 32'd0);

assign select_ln612_8_fu_2411_p3 = ((icmp_ln612_8_fu_2400_p2[0:0] == 1'b1) ? shl_ln613_8_fu_2406_p2 : 32'd0);

assign select_ln612_9_fu_2549_p3 = ((icmp_ln612_9_fu_2538_p2[0:0] == 1'b1) ? shl_ln613_9_fu_2544_p2 : 32'd0);

assign select_ln612_fu_1307_p3 = ((icmp_ln612_fu_1296_p2[0:0] == 1'b1) ? shl_ln613_fu_1302_p2 : 32'd0);

assign select_ln996_fu_2890_p3 = ((p_Result_s_fu_2882_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln999_fu_2799_p3 = ((icmp_ln999_fu_2715_p2[0:0] == 1'b1) ? icmp_ln1002_fu_2759_p2 : p_Result_24_fu_2779_p3);

assign sext_ln590_1_fu_1414_p1 = sh_amt_1_fu_1409_p3;

assign sext_ln590_2_fu_1552_p1 = sh_amt_2_fu_1547_p3;

assign sext_ln590_3_fu_1690_p1 = sh_amt_3_fu_1685_p3;

assign sext_ln590_4_fu_1828_p1 = sh_amt_4_fu_1823_p3;

assign sext_ln590_5_fu_1966_p1 = sh_amt_5_fu_1961_p3;

assign sext_ln590_6_fu_2104_p1 = sh_amt_6_fu_2099_p3;

assign sext_ln590_7_fu_2242_p1 = sh_amt_7_fu_2237_p3;

assign sext_ln590_8_fu_2380_p1 = sh_amt_8_fu_2375_p3;

assign sext_ln590_9_fu_2518_p1 = sh_amt_9_fu_2513_p3;

assign sext_ln590_fu_1276_p1 = sh_amt_fu_1271_p3;

assign sh_amt_1_fu_1409_p3 = ((icmp_ln590_1_reg_3107[0:0] == 1'b1) ? add_ln590_1_reg_3114 : sub_ln590_1_reg_3119);

assign sh_amt_2_fu_1547_p3 = ((icmp_ln590_2_reg_3148[0:0] == 1'b1) ? add_ln590_2_reg_3155 : sub_ln590_2_reg_3160);

assign sh_amt_3_fu_1685_p3 = ((icmp_ln590_3_reg_3189[0:0] == 1'b1) ? add_ln590_3_reg_3196 : sub_ln590_3_reg_3201);

assign sh_amt_4_fu_1823_p3 = ((icmp_ln590_4_reg_3230[0:0] == 1'b1) ? add_ln590_4_reg_3237 : sub_ln590_4_reg_3242);

assign sh_amt_5_fu_1961_p3 = ((icmp_ln590_5_reg_3271[0:0] == 1'b1) ? add_ln590_5_reg_3278 : sub_ln590_5_reg_3283);

assign sh_amt_6_fu_2099_p3 = ((icmp_ln590_6_reg_3312[0:0] == 1'b1) ? add_ln590_6_reg_3319 : sub_ln590_6_reg_3324);

assign sh_amt_7_fu_2237_p3 = ((icmp_ln590_7_reg_3353[0:0] == 1'b1) ? add_ln590_7_reg_3360 : sub_ln590_7_reg_3365);

assign sh_amt_8_fu_2375_p3 = ((icmp_ln590_8_reg_3394[0:0] == 1'b1) ? add_ln590_8_reg_3401 : sub_ln590_8_reg_3406);

assign sh_amt_9_fu_2513_p3 = ((icmp_ln590_9_reg_3435[0:0] == 1'b1) ? add_ln590_9_reg_3442 : sub_ln590_9_reg_3447);

assign sh_amt_fu_1271_p3 = ((icmp_ln590_reg_3066[0:0] == 1'b1) ? add_ln590_reg_3073 : sub_ln590_reg_3078);

assign shl_ln1002_fu_2741_p2 = 32'd1 << lsb_index_fu_2699_p2;

assign shl_ln1012_fu_2831_p2 = zext_ln1010_fu_2819_p1 << zext_ln1012_fu_2827_p1;

assign shl_ln613_1_fu_1440_p2 = trunc_ln592_1_reg_3130 << sext_ln590_1_fu_1414_p1;

assign shl_ln613_2_fu_1578_p2 = trunc_ln592_2_reg_3171 << sext_ln590_2_fu_1552_p1;

assign shl_ln613_3_fu_1716_p2 = trunc_ln592_3_reg_3212 << sext_ln590_3_fu_1690_p1;

assign shl_ln613_4_fu_1854_p2 = trunc_ln592_4_reg_3253 << sext_ln590_4_fu_1828_p1;

assign shl_ln613_5_fu_1992_p2 = trunc_ln592_5_reg_3294 << sext_ln590_5_fu_1966_p1;

assign shl_ln613_6_fu_2130_p2 = trunc_ln592_6_reg_3335 << sext_ln590_6_fu_2104_p1;

assign shl_ln613_7_fu_2268_p2 = trunc_ln592_7_reg_3376 << sext_ln590_7_fu_2242_p1;

assign shl_ln613_8_fu_2406_p2 = trunc_ln592_8_reg_3417 << sext_ln590_8_fu_2380_p1;

assign shl_ln613_9_fu_2544_p2 = trunc_ln592_9_reg_3458 << sext_ln590_9_fu_2518_p1;

assign shl_ln613_fu_1302_p2 = trunc_ln592_reg_3089 << sext_ln590_fu_1276_p1;

assign sub_ln1000_fu_2725_p2 = ($signed(6'd57) - $signed(trunc_ln1000_fu_2721_p1));

assign sub_ln1012_fu_2822_p2 = (32'd25 - sub_ln997_reg_3541);

assign sub_ln1017_fu_2898_p2 = (8'd16 - trunc_ln996_reg_3557);

assign sub_ln590_1_fu_455_p2 = (12'd16 - F2_1_fu_437_p2);

assign sub_ln590_2_fu_555_p2 = (12'd16 - F2_2_fu_537_p2);

assign sub_ln590_3_fu_655_p2 = (12'd16 - F2_3_fu_637_p2);

assign sub_ln590_4_fu_755_p2 = (12'd16 - F2_4_fu_737_p2);

assign sub_ln590_5_fu_855_p2 = (12'd16 - F2_5_fu_837_p2);

assign sub_ln590_6_fu_955_p2 = (12'd16 - F2_6_fu_937_p2);

assign sub_ln590_7_fu_1055_p2 = (12'd16 - F2_7_fu_1037_p2);

assign sub_ln590_8_fu_1155_p2 = (12'd16 - F2_8_fu_1137_p2);

assign sub_ln590_9_fu_1255_p2 = (12'd16 - F2_9_fu_1237_p2);

assign sub_ln590_fu_355_p2 = (12'd16 - F2_fu_337_p2);

assign sub_ln997_fu_2693_p2 = (32'd32 - l_fu_2685_p3);

assign tmp_10_fu_1742_p3 = p_2_reg_2958[32'd31];

assign tmp_12_fu_1838_p4 = {{sh_amt_4_fu_1823_p3[11:5]}};

assign tmp_13_fu_1880_p3 = p_3_reg_2964[32'd31];

assign tmp_15_fu_1976_p4 = {{sh_amt_5_fu_1961_p3[11:5]}};

assign tmp_16_fu_2018_p3 = p_4_reg_2970[32'd31];

assign tmp_18_fu_2114_p4 = {{sh_amt_6_fu_2099_p3[11:5]}};

assign tmp_19_fu_2156_p3 = p_5_reg_2976[32'd31];

assign tmp_1_fu_1328_p3 = p_0_reg_2940[32'd31];

assign tmp_21_fu_2252_p4 = {{sh_amt_7_fu_2237_p3[11:5]}};

assign tmp_22_fu_2294_p3 = p_6_reg_2982[32'd31];

assign tmp_24_fu_2390_p4 = {{sh_amt_8_fu_2375_p3[11:5]}};

assign tmp_25_fu_2432_p3 = p_7_reg_2988[32'd31];

assign tmp_27_fu_2528_p4 = {{sh_amt_9_fu_2513_p3[11:5]}};

assign tmp_28_fu_2570_p3 = p_8_reg_3039[32'd31];

assign tmp_30_fu_2705_p4 = {{lsb_index_fu_2699_p2[31:1]}};

assign tmp_31_fu_2765_p3 = lsb_index_fu_2699_p2[32'd31];

assign tmp_3_fu_1424_p4 = {{sh_amt_1_fu_1409_p3[11:5]}};

assign tmp_4_fu_1466_p3 = p_s_reg_2946[32'd31];

assign tmp_6_fu_1562_p4 = {{sh_amt_2_fu_1547_p3[11:5]}};

assign tmp_7_fu_1604_p3 = p_1_reg_2952[32'd31];

assign tmp_9_fu_1700_p4 = {{sh_amt_3_fu_1685_p3[11:5]}};

assign tmp_V_3_fu_2670_p3 = ((p_Result_22_reg_3520[0:0] == 1'b1) ? tmp_V_reg_3526 : out_local_V_reg_3514);

assign tmp_V_fu_2659_p2 = (32'd0 - grp_myproject_fu_178_ap_return);

assign tmp_fu_1286_p4 = {{sh_amt_fu_1271_p3[11:5]}};

assign tmp_s_fu_2909_p3 = {{p_Result_22_reg_3520}, {add_ln1017_fu_2903_p2}};

assign trunc_ln1000_fu_2721_p1 = sub_ln997_fu_2693_p2[5:0];

assign trunc_ln564_1_fu_375_p1 = ireg_1_fu_371_p1[62:0];

assign trunc_ln564_2_fu_475_p1 = ireg_2_fu_471_p1[62:0];

assign trunc_ln564_3_fu_575_p1 = ireg_3_fu_571_p1[62:0];

assign trunc_ln564_4_fu_675_p1 = ireg_4_fu_671_p1[62:0];

assign trunc_ln564_5_fu_775_p1 = ireg_5_fu_771_p1[62:0];

assign trunc_ln564_6_fu_875_p1 = ireg_6_fu_871_p1[62:0];

assign trunc_ln564_7_fu_975_p1 = ireg_7_fu_971_p1[62:0];

assign trunc_ln564_8_fu_1075_p1 = ireg_8_fu_1071_p1[62:0];

assign trunc_ln564_9_fu_1175_p1 = ireg_9_fu_1171_p1[62:0];

assign trunc_ln564_fu_275_p1 = ireg_fu_271_p1[62:0];

assign trunc_ln574_1_fu_401_p1 = ireg_1_fu_371_p1[51:0];

assign trunc_ln574_2_fu_501_p1 = ireg_2_fu_471_p1[51:0];

assign trunc_ln574_3_fu_601_p1 = ireg_3_fu_571_p1[51:0];

assign trunc_ln574_4_fu_701_p1 = ireg_4_fu_671_p1[51:0];

assign trunc_ln574_5_fu_801_p1 = ireg_5_fu_771_p1[51:0];

assign trunc_ln574_6_fu_901_p1 = ireg_6_fu_871_p1[51:0];

assign trunc_ln574_7_fu_1001_p1 = ireg_7_fu_971_p1[51:0];

assign trunc_ln574_8_fu_1101_p1 = ireg_8_fu_1071_p1[51:0];

assign trunc_ln574_9_fu_1201_p1 = ireg_9_fu_1171_p1[51:0];

assign trunc_ln574_fu_301_p1 = ireg_fu_271_p1[51:0];

assign trunc_ln592_1_fu_467_p1 = man_V_5_fu_423_p3[31:0];

assign trunc_ln592_2_fu_567_p1 = man_V_8_fu_523_p3[31:0];

assign trunc_ln592_3_fu_667_p1 = man_V_11_fu_623_p3[31:0];

assign trunc_ln592_4_fu_767_p1 = man_V_14_fu_723_p3[31:0];

assign trunc_ln592_5_fu_867_p1 = man_V_17_fu_823_p3[31:0];

assign trunc_ln592_6_fu_967_p1 = man_V_20_fu_923_p3[31:0];

assign trunc_ln592_7_fu_1067_p1 = man_V_23_fu_1023_p3[31:0];

assign trunc_ln592_8_fu_1167_p1 = man_V_26_fu_1123_p3[31:0];

assign trunc_ln592_9_fu_1267_p1 = man_V_29_fu_1223_p3[31:0];

assign trunc_ln592_fu_367_p1 = man_V_2_fu_323_p3[31:0];

assign trunc_ln595_1_fu_1462_p1 = ashr_ln595_1_fu_1457_p2[31:0];

assign trunc_ln595_2_fu_1600_p1 = ashr_ln595_2_fu_1595_p2[31:0];

assign trunc_ln595_3_fu_1738_p1 = ashr_ln595_3_fu_1733_p2[31:0];

assign trunc_ln595_4_fu_1876_p1 = ashr_ln595_4_fu_1871_p2[31:0];

assign trunc_ln595_5_fu_2014_p1 = ashr_ln595_5_fu_2009_p2[31:0];

assign trunc_ln595_6_fu_2152_p1 = ashr_ln595_6_fu_2147_p2[31:0];

assign trunc_ln595_7_fu_2290_p1 = ashr_ln595_7_fu_2285_p2[31:0];

assign trunc_ln595_8_fu_2428_p1 = ashr_ln595_8_fu_2423_p2[31:0];

assign trunc_ln595_9_fu_2566_p1 = ashr_ln595_9_fu_2561_p2[31:0];

assign trunc_ln595_fu_1324_p1 = ashr_ln595_fu_1319_p2[31:0];

assign trunc_ln996_fu_2815_p1 = l_fu_2685_p3[7:0];

assign xor_ln1002_fu_2773_p2 = (tmp_31_fu_2765_p3 ^ 1'd1);

assign xor_ln580_1_fu_1481_p2 = (icmp_ln580_1_reg_3100 ^ 1'd1);

assign xor_ln580_2_fu_1619_p2 = (icmp_ln580_2_reg_3141 ^ 1'd1);

assign xor_ln580_3_fu_1757_p2 = (icmp_ln580_3_reg_3182 ^ 1'd1);

assign xor_ln580_4_fu_1895_p2 = (icmp_ln580_4_reg_3223 ^ 1'd1);

assign xor_ln580_5_fu_2033_p2 = (icmp_ln580_5_reg_3264 ^ 1'd1);

assign xor_ln580_6_fu_2171_p2 = (icmp_ln580_6_reg_3305 ^ 1'd1);

assign xor_ln580_7_fu_2309_p2 = (icmp_ln580_7_reg_3346 ^ 1'd1);

assign xor_ln580_8_fu_2447_p2 = (icmp_ln580_8_reg_3387 ^ 1'd1);

assign xor_ln580_9_fu_2585_p2 = (icmp_ln580_9_reg_3428 ^ 1'd1);

assign xor_ln580_fu_1343_p2 = (icmp_ln580_reg_3059 ^ 1'd1);

assign xor_ln591_1_fu_1515_p2 = (or_ln591_1_fu_1498_p2 ^ 1'd1);

assign xor_ln591_2_fu_1653_p2 = (or_ln591_2_fu_1636_p2 ^ 1'd1);

assign xor_ln591_3_fu_1791_p2 = (or_ln591_3_fu_1774_p2 ^ 1'd1);

assign xor_ln591_4_fu_1929_p2 = (or_ln591_4_fu_1912_p2 ^ 1'd1);

assign xor_ln591_5_fu_2067_p2 = (or_ln591_5_fu_2050_p2 ^ 1'd1);

assign xor_ln591_6_fu_2205_p2 = (or_ln591_6_fu_2188_p2 ^ 1'd1);

assign xor_ln591_7_fu_2343_p2 = (or_ln591_7_fu_2326_p2 ^ 1'd1);

assign xor_ln591_8_fu_2481_p2 = (or_ln591_8_fu_2464_p2 ^ 1'd1);

assign xor_ln591_9_fu_2619_p2 = (or_ln591_9_fu_2602_p2 ^ 1'd1);

assign xor_ln591_fu_1377_p2 = (or_ln591_fu_1360_p2 ^ 1'd1);

assign zext_ln1000_fu_2731_p1 = sub_ln1000_fu_2725_p2;

assign zext_ln1010_fu_2819_p1 = tmp_V_3_reg_3536;

assign zext_ln1011_fu_2842_p1 = add_ln1011_fu_2837_p2;

assign zext_ln1012_fu_2827_p1 = sub_ln1012_fu_2822_p2;

assign zext_ln1014_fu_2859_p1 = select_ln1011_reg_3552;

assign zext_ln1015_fu_2878_p1 = m_5_fu_2868_p4;

assign zext_ln501_1_fu_397_p1 = exp_tmp_1_fu_387_p4;

assign zext_ln501_2_fu_497_p1 = exp_tmp_2_fu_487_p4;

assign zext_ln501_3_fu_597_p1 = exp_tmp_3_fu_587_p4;

assign zext_ln501_4_fu_697_p1 = exp_tmp_4_fu_687_p4;

assign zext_ln501_5_fu_797_p1 = exp_tmp_5_fu_787_p4;

assign zext_ln501_6_fu_897_p1 = exp_tmp_6_fu_887_p4;

assign zext_ln501_7_fu_997_p1 = exp_tmp_7_fu_987_p4;

assign zext_ln501_8_fu_1097_p1 = exp_tmp_8_fu_1087_p4;

assign zext_ln501_9_fu_1197_p1 = exp_tmp_9_fu_1187_p4;

assign zext_ln501_fu_297_p1 = exp_tmp_fu_287_p4;

assign zext_ln578_1_fu_413_p1 = p_Result_5_fu_405_p3;

assign zext_ln578_2_fu_513_p1 = p_Result_7_fu_505_p3;

assign zext_ln578_3_fu_613_p1 = p_Result_9_fu_605_p3;

assign zext_ln578_4_fu_713_p1 = p_Result_11_fu_705_p3;

assign zext_ln578_5_fu_813_p1 = p_Result_13_fu_805_p3;

assign zext_ln578_6_fu_913_p1 = p_Result_15_fu_905_p3;

assign zext_ln578_7_fu_1013_p1 = p_Result_17_fu_1005_p3;

assign zext_ln578_8_fu_1113_p1 = p_Result_19_fu_1105_p3;

assign zext_ln578_9_fu_1213_p1 = p_Result_21_fu_1205_p3;

assign zext_ln578_fu_313_p1 = p_Result_3_fu_305_p3;

assign zext_ln595_1_fu_1453_p1 = $unsigned(sext_ln590_1_fu_1414_p1);

assign zext_ln595_2_fu_1591_p1 = $unsigned(sext_ln590_2_fu_1552_p1);

assign zext_ln595_3_fu_1729_p1 = $unsigned(sext_ln590_3_fu_1690_p1);

assign zext_ln595_4_fu_1867_p1 = $unsigned(sext_ln590_4_fu_1828_p1);

assign zext_ln595_5_fu_2005_p1 = $unsigned(sext_ln590_5_fu_1966_p1);

assign zext_ln595_6_fu_2143_p1 = $unsigned(sext_ln590_6_fu_2104_p1);

assign zext_ln595_7_fu_2281_p1 = $unsigned(sext_ln590_7_fu_2242_p1);

assign zext_ln595_8_fu_2419_p1 = $unsigned(sext_ln590_8_fu_2380_p1);

assign zext_ln595_9_fu_2557_p1 = $unsigned(sext_ln590_9_fu_2518_p1);

assign zext_ln595_fu_1315_p1 = $unsigned(sext_ln590_fu_1276_p1);


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "myproject_axi_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //myproject_axi

