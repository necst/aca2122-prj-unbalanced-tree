-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_1 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FBD5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111101111010101";
    constant ap_const_lv32_E28D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110001010001101";
    constant ap_const_lv32_FFFE3320 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100011001100100000";
    constant ap_const_lv32_FFFEEA2B : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101110101000101011";
    constant ap_const_lv32_CD04 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100110100000100";
    constant ap_const_lv32_FFFE34F9 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100011010011111001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_96CD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001011011001101";
    constant ap_const_lv32_7161 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000111000101100001";
    constant ap_const_lv32_D5E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001101010111100000";
    constant ap_const_lv32_6E1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000110111000011100";
    constant ap_const_lv32_26F2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010011011110010";
    constant ap_const_lv32_BE73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011111001110011";
    constant ap_const_lv32_FFFF620C : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110110001000001100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_77_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_fu_82_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_78_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_212_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_79_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_213_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_1_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_80_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_2_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_81_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln148_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_fu_184_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln148_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_217_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_fu_194_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln148_1_fu_208_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln148_1_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_218_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_1_fu_216_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_2_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_219_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_2_fu_226_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_3_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_3_fu_240_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_256_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_256_p9 : STD_LOGIC_VECTOR (31 downto 0);

    component myproject_axi_mux_73_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_73_32_1_1_U48 : component myproject_axi_mux_73_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_96CD,
        din1 => ap_const_lv32_7161,
        din2 => ap_const_lv32_D5E0,
        din3 => ap_const_lv32_6E1C,
        din4 => ap_const_lv32_26F2,
        din5 => ap_const_lv32_BE73,
        din6 => ap_const_lv32_FFFF620C,
        din7 => agg_result_fu_256_p8,
        dout => agg_result_fu_256_p9);




    activation_212_fu_118_p2 <= (comparison_fu_82_p2 and comparison_77_fu_88_p2);
    activation_213_fu_130_p2 <= (xor_ln135_fu_124_p2 and activation_212_fu_118_p2);
    activation_217_fu_136_p2 <= (comparison_79_fu_100_p2 and activation_213_fu_130_p2);
    activation_218_fu_160_p2 <= (xor_ln135_2_fu_154_p2 and activation_fu_148_p2);
    activation_219_fu_172_p2 <= (comparison_80_fu_106_p2 and and_ln133_fu_166_p2);
    activation_fu_148_p2 <= (xor_ln135_1_fu_142_p2 and activation_213_fu_130_p2);
    agg_result_fu_256_p8 <= 
        select_ln148_3_fu_240_p3 when (or_ln148_3_fu_234_p2(0) = '1') else 
        ap_const_lv3_6;
    and_ln133_fu_166_p2 <= (comparison_81_fu_112_p2 and activation_fu_148_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_256_p9;
    comparison_77_fu_88_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_E28D)) else "0";
    comparison_78_fu_94_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFE3320)) else "0";
    comparison_79_fu_100_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFEEA2B)) else "0";
    comparison_80_fu_106_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_CD04)) else "0";
    comparison_81_fu_112_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFE34F9)) else "0";
    comparison_fu_82_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FBD5)) else "0";
    or_ln148_1_fu_202_p2 <= (or_ln148_fu_188_p2 or activation_217_fu_136_p2);
    or_ln148_2_fu_220_p2 <= (or_ln148_1_fu_202_p2 or activation_218_fu_160_p2);
    or_ln148_3_fu_234_p2 <= (or_ln148_2_fu_220_p2 or activation_219_fu_172_p2);
    or_ln148_fu_188_p2 <= (xor_ln148_fu_178_p2 or comparison_78_fu_94_p2);
    select_ln148_1_fu_208_p3 <= 
        select_ln148_fu_194_p3 when (or_ln148_fu_188_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln148_2_fu_226_p3 <= 
        zext_ln148_1_fu_216_p1 when (or_ln148_1_fu_202_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln148_3_fu_240_p3 <= 
        select_ln148_2_fu_226_p3 when (or_ln148_2_fu_220_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln148_fu_194_p3 <= 
        ap_const_lv2_2 when (activation_212_fu_118_p2(0) = '1') else 
        zext_ln148_fu_184_p1;
    xor_ln135_1_fu_142_p2 <= (comparison_79_fu_100_p2 xor ap_const_lv1_1);
    xor_ln135_2_fu_154_p2 <= (comparison_80_fu_106_p2 xor ap_const_lv1_1);
    xor_ln135_fu_124_p2 <= (comparison_78_fu_94_p2 xor ap_const_lv1_1);
    xor_ln148_fu_178_p2 <= (ap_const_lv1_1 xor activation_212_fu_118_p2);
    zext_ln148_1_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln148_1_fu_208_p3),3));
    zext_ln148_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(comparison_fu_82_p2),2));
end behav;
