-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_4 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFF2893 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110010100010010011";
    constant ap_const_lv32_FFFF8825 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111000100000100101";
    constant ap_const_lv32_FFFE8C90 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101000110010010000";
    constant ap_const_lv32_AD2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001010110100101100";
    constant ap_const_lv32_120BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010000010111111";
    constant ap_const_lv32_FFFF45D6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110100010111010110";
    constant ap_const_lv32_1112B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001000100101011";
    constant ap_const_lv32_FFFF2B9E : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110010101110011110";
    constant ap_const_lv32_FFFEF387 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101111001110000111";
    constant ap_const_lv32_E579 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110010101111001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_11C81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001110010000001";
    constant ap_const_lv32_D755 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001101011101010101";
    constant ap_const_lv32_FFFFDEED : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111101111011101101";
    constant ap_const_lv32_F006 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111000000000110";
    constant ap_const_lv32_7A7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000111101001111101";
    constant ap_const_lv32_39D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011100111011000";
    constant ap_const_lv32_358D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011010110001101";
    constant ap_const_lv32_3220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011001000100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_FFFEDA2C : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101101101000101100";
    constant ap_const_lv32_FFFFC605 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111100011000000101";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_56_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_57_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_148_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_10_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_58_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_59_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_11_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_60_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_155_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_12_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_61_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_159_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_13_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_62_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_160_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_14_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_63_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_163_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_64_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_15_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln133_10_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_166_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_167_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln148_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln148_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_168_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_fu_320_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln148_13_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_fu_330_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln148_14_fu_344_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln148_14_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_169_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_5_fu_352_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_15_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_170_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_15_fu_362_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_16_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_171_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_16_fu_376_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_17_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_172_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_17_fu_390_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln148_18_fu_404_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln148_18_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_173_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln148_6_fu_412_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln148_19_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_174_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_19_fu_422_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln148_20_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_20_fu_436_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_452_p12 : STD_LOGIC_VECTOR (3 downto 0);
    signal agg_result_fu_452_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_114_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_114_32_1_1_U30 : component myproject_axi_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_11C81,
        din1 => ap_const_lv32_D755,
        din2 => ap_const_lv32_FFFFDEED,
        din3 => ap_const_lv32_F006,
        din4 => ap_const_lv32_7A7D,
        din5 => ap_const_lv32_39D8,
        din6 => ap_const_lv32_358D,
        din7 => ap_const_lv32_3220,
        din8 => ap_const_lv32_0,
        din9 => ap_const_lv32_FFFEDA2C,
        din10 => ap_const_lv32_FFFFC605,
        din11 => agg_result_fu_452_p12,
        dout => agg_result_fu_452_p13);




    activation_148_fu_164_p2 <= (comparison_fu_104_p2 xor ap_const_lv1_1);
    activation_155_fu_212_p2 <= (comparison_59_fu_128_p2 and activation_fu_194_p2);
    activation_159_fu_242_p2 <= (xor_ln135_12_fu_236_p2 and activation_155_fu_212_p2);
    activation_160_fu_248_p2 <= (comparison_61_fu_140_p2 and activation_159_fu_242_p2);
    activation_163_fu_278_p2 <= (xor_ln135_14_fu_272_p2 and activation_160_fu_248_p2);
    activation_166_fu_170_p2 <= (comparison_fu_104_p2 and comparison_56_fu_110_p2);
    activation_167_fu_182_p2 <= (comparison_57_fu_116_p2 and activation_148_fu_164_p2);
    activation_168_fu_206_p2 <= (comparison_fu_104_p2 and and_ln133_fu_200_p2);
    activation_169_fu_224_p2 <= (xor_ln135_11_fu_218_p2 and activation_fu_194_p2);
    activation_170_fu_230_p2 <= (comparison_60_fu_134_p2 and activation_155_fu_212_p2);
    activation_171_fu_260_p2 <= (xor_ln135_13_fu_254_p2 and activation_159_fu_242_p2);
    activation_172_fu_266_p2 <= (comparison_62_fu_146_p2 and activation_160_fu_248_p2);
    activation_173_fu_284_p2 <= (comparison_63_fu_152_p2 and activation_163_fu_278_p2);
    activation_174_fu_302_p2 <= (and_ln133_10_fu_296_p2 and activation_163_fu_278_p2);
    activation_fu_194_p2 <= (xor_ln135_10_fu_188_p2 and activation_148_fu_164_p2);
    agg_result_fu_452_p12 <= 
        select_ln148_20_fu_436_p3 when (or_ln148_20_fu_430_p2(0) = '1') else 
        ap_const_lv4_A;
    and_ln133_10_fu_296_p2 <= (xor_ln135_15_fu_290_p2 and comparison_64_fu_158_p2);
    and_ln133_fu_200_p2 <= (xor_ln135_fu_176_p2 and comparison_58_fu_122_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_452_p13;
    comparison_56_fu_110_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFF8825)) else "0";
    comparison_57_fu_116_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFE8C90)) else "0";
    comparison_58_fu_122_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_AD2C)) else "0";
    comparison_59_fu_128_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_120BF)) else "0";
    comparison_60_fu_134_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFF45D6)) else "0";
    comparison_61_fu_140_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_1112B)) else "0";
    comparison_62_fu_146_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFF2B9E)) else "0";
    comparison_63_fu_152_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFEF387)) else "0";
    comparison_64_fu_158_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_E579)) else "0";
    comparison_fu_104_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFF2893)) else "0";
    or_ln148_13_fu_324_p2 <= (or_ln148_fu_308_p2 or activation_168_fu_206_p2);
    or_ln148_14_fu_338_p2 <= (comparison_fu_104_p2 or activation_167_fu_182_p2);
    or_ln148_15_fu_356_p2 <= (or_ln148_14_fu_338_p2 or activation_169_fu_224_p2);
    or_ln148_16_fu_370_p2 <= (or_ln148_15_fu_356_p2 or activation_170_fu_230_p2);
    or_ln148_17_fu_384_p2 <= (or_ln148_16_fu_370_p2 or activation_171_fu_260_p2);
    or_ln148_18_fu_398_p2 <= (or_ln148_17_fu_384_p2 or activation_172_fu_266_p2);
    or_ln148_19_fu_416_p2 <= (or_ln148_18_fu_398_p2 or activation_173_fu_284_p2);
    or_ln148_20_fu_430_p2 <= (or_ln148_19_fu_416_p2 or activation_174_fu_302_p2);
    or_ln148_fu_308_p2 <= (activation_167_fu_182_p2 or activation_166_fu_170_p2);
    select_ln148_14_fu_344_p3 <= 
        select_ln148_fu_330_p3 when (or_ln148_13_fu_324_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln148_15_fu_362_p3 <= 
        zext_ln148_5_fu_352_p1 when (or_ln148_14_fu_338_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln148_16_fu_376_p3 <= 
        select_ln148_15_fu_362_p3 when (or_ln148_15_fu_356_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln148_17_fu_390_p3 <= 
        select_ln148_16_fu_376_p3 when (or_ln148_16_fu_370_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln148_18_fu_404_p3 <= 
        select_ln148_17_fu_390_p3 when (or_ln148_17_fu_384_p2(0) = '1') else 
        ap_const_lv3_7;
    select_ln148_19_fu_422_p3 <= 
        zext_ln148_6_fu_412_p1 when (or_ln148_18_fu_398_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln148_20_fu_436_p3 <= 
        select_ln148_19_fu_422_p3 when (or_ln148_19_fu_416_p2(0) = '1') else 
        ap_const_lv4_9;
    select_ln148_fu_330_p3 <= 
        zext_ln148_fu_320_p1 when (or_ln148_fu_308_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln135_10_fu_188_p2 <= (comparison_57_fu_116_p2 xor ap_const_lv1_1);
    xor_ln135_11_fu_218_p2 <= (comparison_59_fu_128_p2 xor ap_const_lv1_1);
    xor_ln135_12_fu_236_p2 <= (comparison_60_fu_134_p2 xor ap_const_lv1_1);
    xor_ln135_13_fu_254_p2 <= (comparison_61_fu_140_p2 xor ap_const_lv1_1);
    xor_ln135_14_fu_272_p2 <= (comparison_62_fu_146_p2 xor ap_const_lv1_1);
    xor_ln135_15_fu_290_p2 <= (comparison_63_fu_152_p2 xor ap_const_lv1_1);
    xor_ln135_fu_176_p2 <= (comparison_56_fu_110_p2 xor ap_const_lv1_1);
    xor_ln148_fu_314_p2 <= (ap_const_lv1_1 xor activation_166_fu_170_p2);
    zext_ln148_5_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln148_14_fu_344_p3),3));
    zext_ln148_6_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln148_18_fu_404_p3),4));
    zext_ln148_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln148_fu_314_p2),2));
end behav;
