-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_2 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFF5040 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110101000001000000";
    constant ap_const_lv32_8191 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000110010001";
    constant ap_const_lv32_1F5A5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111010110100101";
    constant ap_const_lv32_FFFF58A8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110101100010101000";
    constant ap_const_lv32_EF9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110111110011010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_EB11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110101100010001";
    constant ap_const_lv32_15A90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010101101010010000";
    constant ap_const_lv32_C072 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100000001110010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_FFFFAE71 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111010111001110001";
    constant ap_const_lv32_64A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000110010010100110";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_24_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_25_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_1_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_30_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_26_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_27_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_3_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_31_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_5_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_32_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_170_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_2_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_180_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_3_fu_194_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_3_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_33_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_1_fu_202_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_4_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_4_fu_212_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_228_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_228_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_63_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_63_32_1_1_U52 : component myproject_axi_mux_63_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_EB11,
        din1 => ap_const_lv32_15A90,
        din2 => ap_const_lv32_C072,
        din3 => ap_const_lv32_0,
        din4 => ap_const_lv32_FFFFAE71,
        din5 => ap_const_lv32_64A6,
        din6 => agg_result_fu_228_p7,
        dout => agg_result_fu_228_p8);




    activation_30_fu_104_p2 <= (comparison_fu_74_p2 xor ap_const_lv1_1);
    activation_31_fu_128_p2 <= (xor_ln195_1_fu_122_p2 and activation_30_fu_104_p2);
    activation_32_fu_140_p2 <= (comparison_24_fu_80_p2 and and_ln193_fu_134_p2);
    activation_33_fu_152_p2 <= (comparison_25_fu_86_p2 and and_ln193_3_fu_146_p2);
    activation_fu_116_p2 <= (xor_ln195_fu_110_p2 and comparison_fu_74_p2);
    agg_result_fu_228_p7 <= 
        select_ln208_4_fu_212_p3 when (or_ln208_4_fu_206_p2(0) = '1') else 
        ap_const_lv3_5;
    and_ln193_3_fu_146_p2 <= (comparison_27_fu_98_p2 and activation_30_fu_104_p2);
    and_ln193_fu_134_p2 <= (comparison_fu_74_p2 and comparison_26_fu_92_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_228_p8;
    comparison_24_fu_80_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_8191)) else "0";
    comparison_25_fu_86_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_1F5A5)) else "0";
    comparison_26_fu_92_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFF58A8)) else "0";
    comparison_27_fu_98_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_EF9A)) else "0";
    comparison_fu_74_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFF5040)) else "0";
    or_ln208_2_fu_174_p2 <= (or_ln208_fu_158_p2 or activation_32_fu_140_p2);
    or_ln208_3_fu_188_p2 <= (comparison_fu_74_p2 or activation_31_fu_128_p2);
    or_ln208_4_fu_206_p2 <= (or_ln208_3_fu_188_p2 or activation_33_fu_152_p2);
    or_ln208_5_fu_164_p2 <= (comparison_24_fu_80_p2 or activation_30_fu_104_p2);
    or_ln208_fu_158_p2 <= (activation_fu_116_p2 or activation_31_fu_128_p2);
    select_ln208_3_fu_194_p3 <= 
        select_ln208_fu_180_p3 when (or_ln208_2_fu_174_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_4_fu_212_p3 <= 
        zext_ln208_1_fu_202_p1 when (or_ln208_3_fu_188_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_fu_180_p3 <= 
        zext_ln208_fu_170_p1 when (or_ln208_fu_158_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_1_fu_122_p2 <= (comparison_25_fu_86_p2 xor ap_const_lv1_1);
    xor_ln195_fu_110_p2 <= (comparison_24_fu_80_p2 xor ap_const_lv1_1);
    zext_ln208_1_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_3_fu_194_p3),3));
    zext_ln208_fu_170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln208_5_fu_164_p2),2));
end behav;
