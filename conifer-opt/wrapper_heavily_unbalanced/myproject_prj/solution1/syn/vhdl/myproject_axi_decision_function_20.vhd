-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_20 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_20 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFEE293 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101110001010010011";
    constant ap_const_lv32_FFFF1B78 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110001101101111000";
    constant ap_const_lv32_13B03 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010011101100000011";
    constant ap_const_lv32_B0FB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011000011111011";
    constant ap_const_lv32_1B534 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011011010100110100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_1EBAF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011110101110101111";
    constant ap_const_lv32_FC97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111110010010111";
    constant ap_const_lv32_7226 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000111001000100110";
    constant ap_const_lv32_181EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011000000111101111";
    constant ap_const_lv32_FFFFA65A : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111010011001011010";
    constant ap_const_lv32_192DD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011001001011011101";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_20_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_21_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_3_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_25_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_22_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_23_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_8_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_26_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln208_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_27_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_180_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_8_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_190_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_9_fu_204_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_9_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_28_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_2_fu_212_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_10_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_10_fu_222_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_238_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_238_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_63_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_63_32_1_1_U25 : component myproject_axi_mux_63_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_1EBAF,
        din1 => ap_const_lv32_FC97,
        din2 => ap_const_lv32_7226,
        din3 => ap_const_lv32_181EF,
        din4 => ap_const_lv32_FFFFA65A,
        din5 => ap_const_lv32_192DD,
        din6 => agg_result_fu_238_p7,
        dout => agg_result_fu_238_p8);




    activation_25_fu_114_p2 <= (comparison_fu_84_p2 xor ap_const_lv1_1);
    activation_26_fu_138_p2 <= (xor_ln195_3_fu_132_p2 and activation_25_fu_114_p2);
    activation_27_fu_150_p2 <= (comparison_fu_84_p2 and and_ln193_fu_144_p2);
    activation_28_fu_162_p2 <= (comparison_21_fu_96_p2 and and_ln193_8_fu_156_p2);
    activation_fu_120_p2 <= (comparison_fu_84_p2 and comparison_20_fu_90_p2);
    agg_result_fu_238_p7 <= 
        select_ln208_10_fu_222_p3 when (or_ln208_10_fu_216_p2(0) = '1') else 
        ap_const_lv3_5;
    and_ln193_8_fu_156_p2 <= (comparison_23_fu_108_p2 and activation_25_fu_114_p2);
    and_ln193_fu_144_p2 <= (xor_ln195_fu_126_p2 and comparison_22_fu_102_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_238_p8;
    comparison_20_fu_90_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFF1B78)) else "0";
    comparison_21_fu_96_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_13B03)) else "0";
    comparison_22_fu_102_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_B0FB)) else "0";
    comparison_23_fu_108_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_1B534)) else "0";
    comparison_fu_84_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFEE293)) else "0";
    or_ln208_10_fu_216_p2 <= (or_ln208_9_fu_198_p2 or activation_28_fu_162_p2);
    or_ln208_8_fu_184_p2 <= (or_ln208_fu_168_p2 or activation_27_fu_150_p2);
    or_ln208_9_fu_198_p2 <= (comparison_fu_84_p2 or activation_26_fu_138_p2);
    or_ln208_fu_168_p2 <= (activation_fu_120_p2 or activation_26_fu_138_p2);
    select_ln208_10_fu_222_p3 <= 
        zext_ln208_2_fu_212_p1 when (or_ln208_9_fu_198_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_9_fu_204_p3 <= 
        select_ln208_fu_190_p3 when (or_ln208_8_fu_184_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_fu_190_p3 <= 
        zext_ln208_fu_180_p1 when (or_ln208_fu_168_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_3_fu_132_p2 <= (comparison_21_fu_96_p2 xor ap_const_lv1_1);
    xor_ln195_fu_126_p2 <= (comparison_20_fu_90_p2 xor ap_const_lv1_1);
    xor_ln208_fu_174_p2 <= (ap_const_lv1_1 xor activation_fu_120_p2);
    zext_ln208_2_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_9_fu_204_p3),3));
    zext_ln208_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln208_fu_174_p2),2));
end behav;
