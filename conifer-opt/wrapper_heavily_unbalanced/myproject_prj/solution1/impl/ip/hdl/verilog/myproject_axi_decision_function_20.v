// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_axi_decision_function_20 (
        ap_ready,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        ap_return
);


output   ap_ready;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
output  [31:0] ap_return;

wire   [0:0] comparison_fu_84_p2;
wire   [0:0] comparison_20_fu_90_p2;
wire   [0:0] comparison_21_fu_96_p2;
wire   [0:0] xor_ln195_3_fu_132_p2;
wire   [0:0] activation_25_fu_114_p2;
wire   [0:0] comparison_22_fu_102_p2;
wire   [0:0] xor_ln195_fu_126_p2;
wire   [0:0] and_ln193_fu_144_p2;
wire   [0:0] comparison_23_fu_108_p2;
wire   [0:0] and_ln193_8_fu_156_p2;
wire   [0:0] activation_fu_120_p2;
wire   [0:0] activation_26_fu_138_p2;
wire   [0:0] xor_ln208_fu_174_p2;
wire   [0:0] or_ln208_fu_168_p2;
wire   [0:0] activation_27_fu_150_p2;
wire   [1:0] zext_ln208_fu_180_p1;
wire   [0:0] or_ln208_8_fu_184_p2;
wire   [1:0] select_ln208_fu_190_p3;
wire   [1:0] select_ln208_9_fu_204_p3;
wire   [0:0] or_ln208_9_fu_198_p2;
wire   [0:0] activation_28_fu_162_p2;
wire   [2:0] zext_ln208_2_fu_212_p1;
wire   [0:0] or_ln208_10_fu_216_p2;
wire   [2:0] select_ln208_10_fu_222_p3;
wire   [2:0] agg_result_fu_238_p7;
wire   [31:0] agg_result_fu_238_p8;
wire    ap_ce_reg;

myproject_axi_mux_63_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_63_32_1_1_U25(
    .din0(32'd125871),
    .din1(32'd64663),
    .din2(32'd29222),
    .din3(32'd98799),
    .din4(32'd4294944346),
    .din5(32'd103133),
    .din6(agg_result_fu_238_p7),
    .dout(agg_result_fu_238_p8)
);

assign activation_25_fu_114_p2 = (comparison_fu_84_p2 ^ 1'd1);

assign activation_26_fu_138_p2 = (xor_ln195_3_fu_132_p2 & activation_25_fu_114_p2);

assign activation_27_fu_150_p2 = (comparison_fu_84_p2 & and_ln193_fu_144_p2);

assign activation_28_fu_162_p2 = (comparison_21_fu_96_p2 & and_ln193_8_fu_156_p2);

assign activation_fu_120_p2 = (comparison_fu_84_p2 & comparison_20_fu_90_p2);

assign agg_result_fu_238_p7 = ((or_ln208_10_fu_216_p2[0:0] == 1'b1) ? select_ln208_10_fu_222_p3 : 3'd5);

assign and_ln193_8_fu_156_p2 = (comparison_23_fu_108_p2 & activation_25_fu_114_p2);

assign and_ln193_fu_144_p2 = (xor_ln195_fu_126_p2 & comparison_22_fu_102_p2);

assign ap_ready = 1'b1;

assign ap_return = agg_result_fu_238_p8;

assign comparison_20_fu_90_p2 = (($signed(p_read2) < $signed(32'd4294908792)) ? 1'b1 : 1'b0);

assign comparison_21_fu_96_p2 = (($signed(p_read5) < $signed(32'd80643)) ? 1'b1 : 1'b0);

assign comparison_22_fu_102_p2 = (($signed(p_read3) < $signed(32'd45307)) ? 1'b1 : 1'b0);

assign comparison_23_fu_108_p2 = (($signed(p_read1) < $signed(32'd111924)) ? 1'b1 : 1'b0);

assign comparison_fu_84_p2 = (($signed(p_read4) < $signed(32'd4294894227)) ? 1'b1 : 1'b0);

assign or_ln208_10_fu_216_p2 = (or_ln208_9_fu_198_p2 | activation_28_fu_162_p2);

assign or_ln208_8_fu_184_p2 = (or_ln208_fu_168_p2 | activation_27_fu_150_p2);

assign or_ln208_9_fu_198_p2 = (comparison_fu_84_p2 | activation_26_fu_138_p2);

assign or_ln208_fu_168_p2 = (activation_fu_120_p2 | activation_26_fu_138_p2);

assign select_ln208_10_fu_222_p3 = ((or_ln208_9_fu_198_p2[0:0] == 1'b1) ? zext_ln208_2_fu_212_p1 : 3'd4);

assign select_ln208_9_fu_204_p3 = ((or_ln208_8_fu_184_p2[0:0] == 1'b1) ? select_ln208_fu_190_p3 : 2'd3);

assign select_ln208_fu_190_p3 = ((or_ln208_fu_168_p2[0:0] == 1'b1) ? zext_ln208_fu_180_p1 : 2'd2);

assign xor_ln195_3_fu_132_p2 = (comparison_21_fu_96_p2 ^ 1'd1);

assign xor_ln195_fu_126_p2 = (comparison_20_fu_90_p2 ^ 1'd1);

assign xor_ln208_fu_174_p2 = (1'd1 ^ activation_fu_120_p2);

assign zext_ln208_2_fu_212_p1 = select_ln208_9_fu_204_p3;

assign zext_ln208_fu_180_p1 = xor_ln208_fu_174_p2;

endmodule //myproject_axi_decision_function_20
