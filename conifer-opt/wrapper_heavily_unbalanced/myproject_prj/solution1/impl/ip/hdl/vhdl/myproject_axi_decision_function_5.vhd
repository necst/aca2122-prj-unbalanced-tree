-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_5 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFEE987 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101110100110000111";
    constant ap_const_lv32_FFFE00D7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100000000011010111";
    constant ap_const_lv32_12E05 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010111000000101";
    constant ap_const_lv32_FFFED782 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101101011110000010";
    constant ap_const_lv32_FFFE60B6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100110000010110110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_1EA05 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011110101000000101";
    constant ap_const_lv32_E701 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110011100000001";
    constant ap_const_lv32_1ECC7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011110110011000111";
    constant ap_const_lv32_8A64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000101001100100";
    constant ap_const_lv32_12B19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010101100011001";
    constant ap_const_lv32_FFFF9FEC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111001111111101100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_12_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_9_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_10_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_2_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_10_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_12_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_11_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_13_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_14_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_152_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_3_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_162_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_3_fu_176_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_4_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_15_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_1_fu_184_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_5_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_4_fu_194_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_216_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_6_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_216_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_63_32_1_1_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_63_32_1_1_x_U40 : component myproject_axi_mux_63_32_1_1_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_1EA05,
        din1 => ap_const_lv32_E701,
        din2 => ap_const_lv32_1ECC7,
        din3 => ap_const_lv32_8A64,
        din4 => ap_const_lv32_12B19,
        din5 => ap_const_lv32_FFFF9FEC,
        din6 => tmp_fu_216_p7,
        dout => tmp_fu_216_p8);




    activation_10_fu_98_p2 <= (comparison_fu_68_p2 xor ap_const_lv1_1);
    activation_12_fu_110_p2 <= (xor_ln195_fu_104_p2 and comparison_fu_68_p2);
    activation_13_fu_116_p2 <= (comparison_9_fu_80_p2 and activation_10_fu_98_p2);
    activation_14_fu_134_p2 <= (comparison_10_fu_86_p2 and activation_12_fu_110_p2);
    activation_15_fu_140_p2 <= (comparison_11_fu_92_p2 and activation_13_fu_116_p2);
    activation_fu_128_p2 <= (xor_ln195_2_fu_122_p2 and activation_10_fu_98_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        tmp_fu_216_p8 when (or_ln208_6_fu_202_p2(0) = '1') else 
        ap_const_lv32_0;
    comparison_10_fu_86_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFED782)) else "0";
    comparison_11_fu_92_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFE60B6)) else "0";
    comparison_12_fu_74_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFE00D7)) else "0";
    comparison_9_fu_80_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_12E05)) else "0";
    comparison_fu_68_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFEE987)) else "0";
    or_ln208_3_fu_156_p2 <= (or_ln208_fu_146_p2 or activation_14_fu_134_p2);
    or_ln208_4_fu_170_p2 <= (or_ln208_fu_146_p2 or activation_12_fu_110_p2);
    or_ln208_5_fu_188_p2 <= (or_ln208_4_fu_170_p2 or activation_15_fu_140_p2);
    or_ln208_6_fu_202_p2 <= (or_ln208_4_fu_170_p2 or activation_13_fu_116_p2);
    or_ln208_fu_146_p2 <= (comparison_12_fu_74_p2 or activation_fu_128_p2);
    select_ln208_3_fu_176_p3 <= 
        select_ln208_fu_162_p3 when (or_ln208_3_fu_156_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_4_fu_194_p3 <= 
        zext_ln208_1_fu_184_p1 when (or_ln208_4_fu_170_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_fu_162_p3 <= 
        zext_ln208_fu_152_p1 when (or_ln208_fu_146_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_fu_216_p7 <= 
        select_ln208_4_fu_194_p3 when (or_ln208_5_fu_188_p2(0) = '1') else 
        ap_const_lv3_5;
    xor_ln195_2_fu_122_p2 <= (comparison_9_fu_80_p2 xor ap_const_lv1_1);
    xor_ln195_fu_104_p2 <= (comparison_12_fu_74_p2 xor ap_const_lv1_1);
    zext_ln208_1_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_3_fu_176_p3),3));
    zext_ln208_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln195_fu_104_p2),2));
end behav;
