-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_13 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_13 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFF01B6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110000000110110110";
    constant ap_const_lv32_18764 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011000011101100100";
    constant ap_const_lv32_FFFE018D : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100000000110001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_961F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001011000011111";
    constant ap_const_lv32_B1B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011000110110000";
    constant ap_const_lv32_117EC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001011111101100";
    constant ap_const_lv32_FFFFCBDA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111100101111011010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_48_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_52_fu_54_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_66_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_53_fu_60_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_88_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_89_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_102_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_20_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_112_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_fu_128_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_fu_128_p6 : STD_LOGIC_VECTOR (31 downto 0);

    component myproject_axi_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_42_32_1_1_U96 : component myproject_axi_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_961F,
        din1 => ap_const_lv32_B1B0,
        din2 => ap_const_lv32_117EC,
        din3 => ap_const_lv32_FFFFCBDA,
        din4 => agg_result_fu_128_p5,
        dout => agg_result_fu_128_p6);




    activation_88_fu_78_p2 <= (xor_ln195_fu_72_p2 and activation_fu_66_p2);
    activation_89_fu_90_p2 <= (comparison_52_fu_54_p2 and and_ln193_fu_84_p2);
    activation_fu_66_p2 <= (comparison_fu_48_p2 xor ap_const_lv1_1);
    agg_result_fu_128_p5 <= 
        select_ln208_fu_112_p3 when (or_ln208_20_fu_106_p2(0) = '1') else 
        ap_const_lv2_3;
    and_ln193_fu_84_p2 <= (comparison_53_fu_60_p2 and activation_fu_66_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_128_p6;
    comparison_52_fu_54_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_18764)) else "0";
    comparison_53_fu_60_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFE018D)) else "0";
    comparison_fu_48_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFF01B6)) else "0";
    or_ln208_20_fu_106_p2 <= (or_ln208_fu_96_p2 or activation_89_fu_90_p2);
    or_ln208_fu_96_p2 <= (comparison_fu_48_p2 or activation_88_fu_78_p2);
    select_ln208_fu_112_p3 <= 
        zext_ln208_fu_102_p1 when (or_ln208_fu_96_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_fu_72_p2 <= (comparison_52_fu_54_p2 xor ap_const_lv1_1);
    zext_ln208_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(activation_fu_66_p2),2));
end behav;
