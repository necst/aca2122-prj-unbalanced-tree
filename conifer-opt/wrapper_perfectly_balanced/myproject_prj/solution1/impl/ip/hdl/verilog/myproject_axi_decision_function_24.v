// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_axi_decision_function_24 (
        ap_ready,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        ap_return
);


output   ap_ready;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
output  [31:0] ap_return;

wire   [0:0] comparison_fu_76_p2;
wire   [0:0] comparison_167_fu_82_p2;
wire   [0:0] xor_ln195_fu_112_p2;
wire   [0:0] comparison_168_fu_88_p2;
wire   [0:0] activation_211_fu_106_p2;
wire   [0:0] comparison_169_fu_94_p2;
wire   [0:0] and_ln193_fu_136_p2;
wire   [0:0] comparison_170_fu_100_p2;
wire   [0:0] and_ln193_79_fu_148_p2;
wire   [0:0] xor_ln195_21_fu_130_p2;
wire   [0:0] activation_fu_118_p2;
wire   [0:0] activation_212_fu_124_p2;
wire   [0:0] or_ln208_78_fu_166_p2;
wire   [0:0] or_ln208_fu_160_p2;
wire   [0:0] activation_213_fu_142_p2;
wire   [1:0] zext_ln208_fu_172_p1;
wire   [0:0] or_ln208_75_fu_176_p2;
wire   [1:0] select_ln208_fu_182_p3;
wire   [1:0] select_ln208_107_fu_196_p3;
wire   [0:0] or_ln208_76_fu_190_p2;
wire   [0:0] activation_214_fu_154_p2;
wire   [2:0] zext_ln208_24_fu_204_p1;
wire   [0:0] or_ln208_77_fu_208_p2;
wire   [2:0] select_ln208_108_fu_214_p3;
wire   [2:0] agg_result_fu_230_p7;
wire   [31:0] agg_result_fu_230_p8;
wire    ap_ce_reg;

myproject_axi_mux_63_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_63_32_1_1_U216(
    .din0(32'd52267),
    .din1(32'd57207),
    .din2(32'd4294954795),
    .din3(32'd37972),
    .din4(32'd4294963364),
    .din5(32'd51261),
    .din6(agg_result_fu_230_p7),
    .dout(agg_result_fu_230_p8)
);

assign activation_211_fu_106_p2 = (comparison_fu_76_p2 ^ 1'd1);

assign activation_212_fu_124_p2 = (comparison_168_fu_88_p2 & activation_211_fu_106_p2);

assign activation_213_fu_142_p2 = (comparison_167_fu_82_p2 & and_ln193_fu_136_p2);

assign activation_214_fu_154_p2 = (xor_ln195_21_fu_130_p2 & and_ln193_79_fu_148_p2);

assign activation_fu_118_p2 = (xor_ln195_fu_112_p2 & comparison_fu_76_p2);

assign agg_result_fu_230_p7 = ((or_ln208_77_fu_208_p2[0:0] == 1'b1) ? select_ln208_108_fu_214_p3 : 3'd5);

assign and_ln193_79_fu_148_p2 = (comparison_170_fu_100_p2 & activation_211_fu_106_p2);

assign and_ln193_fu_136_p2 = (comparison_fu_76_p2 & comparison_169_fu_94_p2);

assign ap_ready = 1'b1;

assign ap_return = agg_result_fu_230_p8;

assign comparison_167_fu_82_p2 = (($signed(p_read3) < $signed(32'd10605)) ? 1'b1 : 1'b0);

assign comparison_168_fu_88_p2 = (($signed(p_read1) < $signed(32'd4294837310)) ? 1'b1 : 1'b0);

assign comparison_169_fu_94_p2 = (($signed(p_read4) < $signed(32'd21165)) ? 1'b1 : 1'b0);

assign comparison_170_fu_100_p2 = (($signed(p_read3) < $signed(32'd136595)) ? 1'b1 : 1'b0);

assign comparison_fu_76_p2 = (($signed(p_read2) < $signed(32'd4294876990)) ? 1'b1 : 1'b0);

assign or_ln208_75_fu_176_p2 = (or_ln208_fu_160_p2 | activation_213_fu_142_p2);

assign or_ln208_76_fu_190_p2 = (comparison_fu_76_p2 | activation_212_fu_124_p2);

assign or_ln208_77_fu_208_p2 = (or_ln208_76_fu_190_p2 | activation_214_fu_154_p2);

assign or_ln208_78_fu_166_p2 = (comparison_167_fu_82_p2 | activation_211_fu_106_p2);

assign or_ln208_fu_160_p2 = (activation_fu_118_p2 | activation_212_fu_124_p2);

assign select_ln208_107_fu_196_p3 = ((or_ln208_75_fu_176_p2[0:0] == 1'b1) ? select_ln208_fu_182_p3 : 2'd3);

assign select_ln208_108_fu_214_p3 = ((or_ln208_76_fu_190_p2[0:0] == 1'b1) ? zext_ln208_24_fu_204_p1 : 3'd4);

assign select_ln208_fu_182_p3 = ((or_ln208_fu_160_p2[0:0] == 1'b1) ? zext_ln208_fu_172_p1 : 2'd2);

assign xor_ln195_21_fu_130_p2 = (comparison_168_fu_88_p2 ^ 1'd1);

assign xor_ln195_fu_112_p2 = (comparison_167_fu_82_p2 ^ 1'd1);

assign zext_ln208_24_fu_204_p1 = select_ln208_107_fu_196_p3;

assign zext_ln208_fu_172_p1 = or_ln208_78_fu_166_p2;

endmodule //myproject_axi_decision_function_24
