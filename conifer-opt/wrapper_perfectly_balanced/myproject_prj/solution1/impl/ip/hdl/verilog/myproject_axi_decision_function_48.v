// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_axi_decision_function_48 (
        ap_ready,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        ap_return
);


output   ap_ready;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
output  [31:0] ap_return;

wire   [0:0] comparison_fu_112_p2;
wire   [0:0] comparison_32_fu_118_p2;
wire   [0:0] comparison_33_fu_124_p2;
wire   [0:0] activation_39_fu_154_p2;
wire   [0:0] comparison_34_fu_130_p2;
wire   [0:0] activation_40_fu_160_p2;
wire   [0:0] comparison_35_fu_136_p2;
wire   [0:0] xor_ln195_fu_166_p2;
wire   [0:0] and_ln193_fu_190_p2;
wire   [0:0] comparison_36_fu_142_p2;
wire   [0:0] activation_41_fu_172_p2;
wire   [0:0] comparison_37_fu_148_p2;
wire   [0:0] and_ln193_32_fu_208_p2;
wire   [0:0] xor_ln195_13_fu_178_p2;
wire   [0:0] activation_fu_184_p2;
wire   [0:0] xor_ln208_fu_220_p2;
wire   [0:0] activation_42_fu_196_p2;
wire   [1:0] zext_ln208_fu_226_p1;
wire   [0:0] or_ln208_fu_230_p2;
wire   [1:0] select_ln208_fu_236_p3;
wire   [1:0] select_ln208_25_fu_244_p3;
wire   [0:0] activation_43_fu_202_p2;
wire   [2:0] zext_ln208_7_fu_252_p1;
wire   [0:0] or_ln208_22_fu_256_p2;
wire   [2:0] select_ln208_26_fu_262_p3;
wire   [0:0] or_ln208_23_fu_270_p2;
wire   [0:0] activation_44_fu_214_p2;
wire   [2:0] select_ln208_27_fu_276_p3;
wire   [0:0] or_ln208_24_fu_284_p2;
wire   [2:0] select_ln208_28_fu_290_p3;
wire   [2:0] agg_result_fu_306_p9;
wire   [31:0] agg_result_fu_306_p10;
wire    ap_ce_reg;

myproject_axi_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U26(
    .din0(32'd143723),
    .din1(32'd31043),
    .din2(32'd32022),
    .din3(32'd105578),
    .din4(32'd4294945531),
    .din5(32'd107145),
    .din6(32'd40444),
    .din7(32'd108558),
    .din8(agg_result_fu_306_p9),
    .dout(agg_result_fu_306_p10)
);

assign activation_39_fu_154_p2 = (comparison_fu_112_p2 ^ 1'd1);

assign activation_40_fu_160_p2 = (comparison_fu_112_p2 & comparison_32_fu_118_p2);

assign activation_41_fu_172_p2 = (comparison_33_fu_124_p2 & activation_39_fu_154_p2);

assign activation_42_fu_196_p2 = (comparison_fu_112_p2 & and_ln193_fu_190_p2);

assign activation_43_fu_202_p2 = (comparison_36_fu_142_p2 & activation_41_fu_172_p2);

assign activation_44_fu_214_p2 = (xor_ln195_13_fu_178_p2 & and_ln193_32_fu_208_p2);

assign activation_fu_184_p2 = (comparison_34_fu_130_p2 & activation_40_fu_160_p2);

assign agg_result_fu_306_p9 = ((or_ln208_24_fu_284_p2[0:0] == 1'b1) ? select_ln208_28_fu_290_p3 : 3'd7);

assign and_ln193_32_fu_208_p2 = (comparison_37_fu_148_p2 & activation_39_fu_154_p2);

assign and_ln193_fu_190_p2 = (xor_ln195_fu_166_p2 & comparison_35_fu_136_p2);

assign ap_ready = 1'b1;

assign ap_return = agg_result_fu_306_p10;

assign comparison_32_fu_118_p2 = (($signed(p_read3) < $signed(32'd4294908792)) ? 1'b1 : 1'b0);

assign comparison_33_fu_124_p2 = (($signed(p_read6) < $signed(32'd80643)) ? 1'b1 : 1'b0);

assign comparison_34_fu_130_p2 = (($signed(p_read7) < $signed(32'd78698)) ? 1'b1 : 1'b0);

assign comparison_35_fu_136_p2 = (($signed(p_read4) < $signed(32'd45307)) ? 1'b1 : 1'b0);

assign comparison_36_fu_142_p2 = (($signed(p_read2) < $signed(32'd111924)) ? 1'b1 : 1'b0);

assign comparison_37_fu_148_p2 = (($signed(p_read1) < $signed(32'd25808)) ? 1'b1 : 1'b0);

assign comparison_fu_112_p2 = (($signed(p_read5) < $signed(32'd4294894227)) ? 1'b1 : 1'b0);

assign or_ln208_22_fu_256_p2 = (comparison_fu_112_p2 | activation_43_fu_202_p2);

assign or_ln208_23_fu_270_p2 = (comparison_fu_112_p2 | activation_41_fu_172_p2);

assign or_ln208_24_fu_284_p2 = (or_ln208_23_fu_270_p2 | activation_44_fu_214_p2);

assign or_ln208_fu_230_p2 = (activation_42_fu_196_p2 | activation_40_fu_160_p2);

assign select_ln208_25_fu_244_p3 = ((or_ln208_fu_230_p2[0:0] == 1'b1) ? select_ln208_fu_236_p3 : 2'd3);

assign select_ln208_26_fu_262_p3 = ((comparison_fu_112_p2[0:0] == 1'b1) ? zext_ln208_7_fu_252_p1 : 3'd4);

assign select_ln208_27_fu_276_p3 = ((or_ln208_22_fu_256_p2[0:0] == 1'b1) ? select_ln208_26_fu_262_p3 : 3'd5);

assign select_ln208_28_fu_290_p3 = ((or_ln208_23_fu_270_p2[0:0] == 1'b1) ? select_ln208_27_fu_276_p3 : 3'd6);

assign select_ln208_fu_236_p3 = ((activation_40_fu_160_p2[0:0] == 1'b1) ? zext_ln208_fu_226_p1 : 2'd2);

assign xor_ln195_13_fu_178_p2 = (comparison_33_fu_124_p2 ^ 1'd1);

assign xor_ln195_fu_166_p2 = (comparison_32_fu_118_p2 ^ 1'd1);

assign xor_ln208_fu_220_p2 = (1'd1 ^ activation_fu_184_p2);

assign zext_ln208_7_fu_252_p1 = select_ln208_25_fu_244_p3;

assign zext_ln208_fu_226_p1 = xor_ln208_fu_220_p2;

endmodule //myproject_axi_decision_function_48
