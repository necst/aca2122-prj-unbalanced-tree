-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_13 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_13 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_12420 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010010000100000";
    constant ap_const_lv32_14CD8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010100110011011000";
    constant ap_const_lv32_FFFFCB20 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111100101100100000";
    constant ap_const_lv32_FFFF26B0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110010011010110000";
    constant ap_const_lv32_4B3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100101100111010";
    constant ap_const_lv32_493 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010010010011";
    constant ap_const_lv32_72C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000111001011001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_381D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011100000011101";
    constant ap_const_lv32_FFFFDD19 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111101110100011001";
    constant ap_const_lv32_2974 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010100101110100";
    constant ap_const_lv32_B8DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011100011011110";
    constant ap_const_lv32_45DC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100010111011100";
    constant ap_const_lv32_C429 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100010000101001";
    constant ap_const_lv32_FFFFB4FA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111011010011111010";
    constant ap_const_lv32_913C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001000100111100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_231_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_232_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_286_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_233_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_287_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_234_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_235_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_288_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_236_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_42_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_12_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln208_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_289_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_210_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_220_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_57_fu_228_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal activation_290_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_14_fu_236_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_43_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_58_fu_246_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_44_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_291_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_59_fu_260_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_45_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_60_fu_274_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_290_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_290_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_83_32_1_1_x13 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_83_32_1_1_x13_U280 : component myproject_axi_mux_83_32_1_1_x13
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_381D,
        din1 => ap_const_lv32_FFFFDD19,
        din2 => ap_const_lv32_2974,
        din3 => ap_const_lv32_B8DE,
        din4 => ap_const_lv32_45DC,
        din5 => ap_const_lv32_C429,
        din6 => ap_const_lv32_FFFFB4FA,
        din7 => ap_const_lv32_913C,
        din8 => agg_result_fu_290_p9,
        dout => agg_result_fu_290_p10);




    activation_286_fu_138_p2 <= (comparison_fu_96_p2 xor ap_const_lv1_1);
    activation_287_fu_144_p2 <= (comparison_fu_96_p2 and comparison_231_fu_102_p2);
    activation_288_fu_156_p2 <= (comparison_232_fu_108_p2 and activation_286_fu_138_p2);
    activation_289_fu_180_p2 <= (comparison_fu_96_p2 and and_ln193_fu_174_p2);
    activation_290_fu_186_p2 <= (comparison_235_fu_126_p2 and activation_288_fu_156_p2);
    activation_291_fu_198_p2 <= (xor_ln195_12_fu_162_p2 and and_ln193_42_fu_192_p2);
    activation_fu_168_p2 <= (comparison_233_fu_114_p2 and activation_287_fu_144_p2);
    agg_result_fu_290_p9 <= 
        select_ln208_60_fu_274_p3 when (or_ln208_45_fu_268_p2(0) = '1') else 
        ap_const_lv3_7;
    and_ln193_42_fu_192_p2 <= (comparison_236_fu_132_p2 and activation_286_fu_138_p2);
    and_ln193_fu_174_p2 <= (xor_ln195_fu_150_p2 and comparison_234_fu_120_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_290_p10;
    comparison_231_fu_102_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_14CD8)) else "0";
    comparison_232_fu_108_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFFCB20)) else "0";
    comparison_233_fu_114_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFF26B0)) else "0";
    comparison_234_fu_120_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_4B3A)) else "0";
    comparison_235_fu_126_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_493)) else "0";
    comparison_236_fu_132_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_72C8)) else "0";
    comparison_fu_96_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_12420)) else "0";
    or_ln208_43_fu_240_p2 <= (comparison_fu_96_p2 or activation_290_fu_186_p2);
    or_ln208_44_fu_254_p2 <= (comparison_fu_96_p2 or activation_288_fu_156_p2);
    or_ln208_45_fu_268_p2 <= (or_ln208_44_fu_254_p2 or activation_291_fu_198_p2);
    or_ln208_fu_214_p2 <= (activation_289_fu_180_p2 or activation_287_fu_144_p2);
    select_ln208_57_fu_228_p3 <= 
        select_ln208_fu_220_p3 when (or_ln208_fu_214_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_58_fu_246_p3 <= 
        zext_ln208_14_fu_236_p1 when (comparison_fu_96_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_59_fu_260_p3 <= 
        select_ln208_58_fu_246_p3 when (or_ln208_43_fu_240_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_60_fu_274_p3 <= 
        select_ln208_59_fu_260_p3 when (or_ln208_44_fu_254_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln208_fu_220_p3 <= 
        zext_ln208_fu_210_p1 when (activation_287_fu_144_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_12_fu_162_p2 <= (comparison_232_fu_108_p2 xor ap_const_lv1_1);
    xor_ln195_fu_150_p2 <= (comparison_231_fu_102_p2 xor ap_const_lv1_1);
    xor_ln208_fu_204_p2 <= (ap_const_lv1_1 xor activation_fu_168_p2);
    zext_ln208_14_fu_236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_57_fu_228_p3),3));
    zext_ln208_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln208_fu_204_p2),2));
end behav;
