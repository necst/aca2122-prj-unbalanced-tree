-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_36 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_36 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFF0A49 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110000101001001001";
    constant ap_const_lv32_FFFFFD99 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111110110011001";
    constant ap_const_lv32_FFFE143D : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100001010000111101";
    constant ap_const_lv32_1BD8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001101111011000";
    constant ap_const_lv32_E151 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110000101010001";
    constant ap_const_lv32_8239 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000001000111001";
    constant ap_const_lv32_1E042 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011110000001000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_108E5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000100011100101";
    constant ap_const_lv32_286F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010100001101111";
    constant ap_const_lv32_FFFFEE90 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110111010010000";
    constant ap_const_lv32_9ECE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001111011001110";
    constant ap_const_lv32_120C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010000011000111";
    constant ap_const_lv32_44C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100010011000100";
    constant ap_const_lv32_FFFFE046 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110000001000110";
    constant ap_const_lv32_10E8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000111010001011";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_103_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_104_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_128_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_105_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_129_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_106_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_107_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_130_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_108_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_103_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_30_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln208_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_131_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_218_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_228_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_79_fu_236_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal activation_132_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_18_fu_244_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_62_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_80_fu_254_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_63_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_133_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_81_fu_268_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_64_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_82_fu_282_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_298_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_298_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_83_32_1_1_x6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_83_32_1_1_x6_U145 : component myproject_axi_mux_83_32_1_1_x6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_108E5,
        din1 => ap_const_lv32_286F,
        din2 => ap_const_lv32_FFFFEE90,
        din3 => ap_const_lv32_9ECE,
        din4 => ap_const_lv32_120C7,
        din5 => ap_const_lv32_44C4,
        din6 => ap_const_lv32_FFFFE046,
        din7 => ap_const_lv32_10E8B,
        din8 => agg_result_fu_298_p9,
        dout => agg_result_fu_298_p10);




    activation_128_fu_146_p2 <= (comparison_fu_104_p2 xor ap_const_lv1_1);
    activation_129_fu_152_p2 <= (comparison_fu_104_p2 and comparison_103_fu_110_p2);
    activation_130_fu_164_p2 <= (comparison_104_fu_116_p2 and activation_128_fu_146_p2);
    activation_131_fu_188_p2 <= (comparison_fu_104_p2 and and_ln193_fu_182_p2);
    activation_132_fu_194_p2 <= (comparison_107_fu_134_p2 and activation_130_fu_164_p2);
    activation_133_fu_206_p2 <= (xor_ln195_30_fu_170_p2 and and_ln193_103_fu_200_p2);
    activation_fu_176_p2 <= (comparison_105_fu_122_p2 and activation_129_fu_152_p2);
    agg_result_fu_298_p9 <= 
        select_ln208_82_fu_282_p3 when (or_ln208_64_fu_276_p2(0) = '1') else 
        ap_const_lv3_7;
    and_ln193_103_fu_200_p2 <= (comparison_108_fu_140_p2 and activation_128_fu_146_p2);
    and_ln193_fu_182_p2 <= (xor_ln195_fu_158_p2 and comparison_106_fu_128_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_298_p10;
    comparison_103_fu_110_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFFFD99)) else "0";
    comparison_104_fu_116_p2 <= "1" when (signed(p_read6) < signed(ap_const_lv32_FFFE143D)) else "0";
    comparison_105_fu_122_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_1BD8)) else "0";
    comparison_106_fu_128_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_E151)) else "0";
    comparison_107_fu_134_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_8239)) else "0";
    comparison_108_fu_140_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_1E042)) else "0";
    comparison_fu_104_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFF0A49)) else "0";
    or_ln208_62_fu_248_p2 <= (comparison_fu_104_p2 or activation_132_fu_194_p2);
    or_ln208_63_fu_262_p2 <= (comparison_fu_104_p2 or activation_130_fu_164_p2);
    or_ln208_64_fu_276_p2 <= (or_ln208_63_fu_262_p2 or activation_133_fu_206_p2);
    or_ln208_fu_222_p2 <= (activation_131_fu_188_p2 or activation_129_fu_152_p2);
    select_ln208_79_fu_236_p3 <= 
        select_ln208_fu_228_p3 when (or_ln208_fu_222_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_80_fu_254_p3 <= 
        zext_ln208_18_fu_244_p1 when (comparison_fu_104_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_81_fu_268_p3 <= 
        select_ln208_80_fu_254_p3 when (or_ln208_62_fu_248_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_82_fu_282_p3 <= 
        select_ln208_81_fu_268_p3 when (or_ln208_63_fu_262_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln208_fu_228_p3 <= 
        zext_ln208_fu_218_p1 when (activation_129_fu_152_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_30_fu_170_p2 <= (comparison_104_fu_116_p2 xor ap_const_lv1_1);
    xor_ln195_fu_158_p2 <= (comparison_103_fu_110_p2 xor ap_const_lv1_1);
    xor_ln208_fu_212_p2 <= (ap_const_lv1_1 xor activation_fu_176_p2);
    zext_ln208_18_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_79_fu_236_p3),3));
    zext_ln208_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln208_fu_212_p2),2));
end behav;
