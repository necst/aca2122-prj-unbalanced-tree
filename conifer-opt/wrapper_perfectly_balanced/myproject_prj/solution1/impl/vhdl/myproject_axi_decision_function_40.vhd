-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_40 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_40 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_F1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111000111101111";
    constant ap_const_lv32_1F83A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011111100000111010";
    constant ap_const_lv32_11D65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001110101100101";
    constant ap_const_lv32_FFFDC225 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111011100001000100101";
    constant ap_const_lv32_C8E5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100100011100101";
    constant ap_const_lv32_22400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100010010000000000";
    constant ap_const_lv32_184C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011000010011000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_14704 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010100011100000100";
    constant ap_const_lv32_FFFFDD95 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111101110110010101";
    constant ap_const_lv32_13080 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010011000010000000";
    constant ap_const_lv32_4925 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100100100100101";
    constant ap_const_lv32_2E24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010111000100100";
    constant ap_const_lv32_12A51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010010101001010001";
    constant ap_const_lv32_182B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011000001010110011";
    constant ap_const_lv32_8DC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100011011100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_79_fu_94_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_80_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_98_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_81_fu_106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_99_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_82_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_83_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_100_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_84_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_80_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_29_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln208_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_101_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_202_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_212_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_65_fu_220_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal activation_102_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_15_fu_228_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_51_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_66_fu_238_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_52_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_103_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_67_fu_252_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_53_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_68_fu_266_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_282_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_282_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_83_32_1_1_x1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_83_32_1_1_x1_U130 : component myproject_axi_mux_83_32_1_1_x1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_14704,
        din1 => ap_const_lv32_FFFFDD95,
        din2 => ap_const_lv32_13080,
        din3 => ap_const_lv32_4925,
        din4 => ap_const_lv32_2E24,
        din5 => ap_const_lv32_12A51,
        din6 => ap_const_lv32_182B3,
        din7 => ap_const_lv32_8DC,
        din8 => agg_result_fu_282_p9,
        dout => agg_result_fu_282_p10);




    activation_100_fu_148_p2 <= (comparison_80_fu_100_p2 and activation_98_fu_130_p2);
    activation_101_fu_172_p2 <= (comparison_fu_88_p2 and and_ln193_fu_166_p2);
    activation_102_fu_178_p2 <= (comparison_83_fu_118_p2 and activation_100_fu_148_p2);
    activation_103_fu_190_p2 <= (xor_ln195_29_fu_154_p2 and and_ln193_80_fu_184_p2);
    activation_98_fu_130_p2 <= (comparison_fu_88_p2 xor ap_const_lv1_1);
    activation_99_fu_136_p2 <= (comparison_fu_88_p2 and comparison_79_fu_94_p2);
    activation_fu_160_p2 <= (comparison_81_fu_106_p2 and activation_99_fu_136_p2);
    agg_result_fu_282_p9 <= 
        select_ln208_68_fu_266_p3 when (or_ln208_53_fu_260_p2(0) = '1') else 
        ap_const_lv3_7;
    and_ln193_80_fu_184_p2 <= (comparison_84_fu_124_p2 and activation_98_fu_130_p2);
    and_ln193_fu_166_p2 <= (xor_ln195_fu_142_p2 and comparison_82_fu_112_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_282_p10;
    comparison_79_fu_94_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_1F83A)) else "0";
    comparison_80_fu_100_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_11D65)) else "0";
    comparison_81_fu_106_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFDC225)) else "0";
    comparison_82_fu_112_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_C8E5)) else "0";
    comparison_83_fu_118_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_22400)) else "0";
    comparison_84_fu_124_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_184C0)) else "0";
    comparison_fu_88_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_F1EF)) else "0";
    or_ln208_51_fu_232_p2 <= (comparison_fu_88_p2 or activation_102_fu_178_p2);
    or_ln208_52_fu_246_p2 <= (comparison_fu_88_p2 or activation_100_fu_148_p2);
    or_ln208_53_fu_260_p2 <= (or_ln208_52_fu_246_p2 or activation_103_fu_190_p2);
    or_ln208_fu_206_p2 <= (activation_99_fu_136_p2 or activation_101_fu_172_p2);
    select_ln208_65_fu_220_p3 <= 
        select_ln208_fu_212_p3 when (or_ln208_fu_206_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_66_fu_238_p3 <= 
        zext_ln208_15_fu_228_p1 when (comparison_fu_88_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_67_fu_252_p3 <= 
        select_ln208_66_fu_238_p3 when (or_ln208_51_fu_232_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_68_fu_266_p3 <= 
        select_ln208_67_fu_252_p3 when (or_ln208_52_fu_246_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln208_fu_212_p3 <= 
        zext_ln208_fu_202_p1 when (activation_99_fu_136_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_29_fu_154_p2 <= (comparison_80_fu_100_p2 xor ap_const_lv1_1);
    xor_ln195_fu_142_p2 <= (comparison_79_fu_94_p2 xor ap_const_lv1_1);
    xor_ln208_fu_196_p2 <= (ap_const_lv1_1 xor activation_fu_160_p2);
    zext_ln208_15_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_65_fu_220_p3),3));
    zext_ln208_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln208_fu_196_p2),2));
end behav;
