-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_26 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_26 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_15A71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010101101001110001";
    constant ap_const_lv32_FFFE8984 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101000100110000100";
    constant ap_const_lv32_EB70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110101101110000";
    constant ap_const_lv32_9815 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001100000010101";
    constant ap_const_lv32_18218 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011000001000011000";
    constant ap_const_lv32_7C62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000111110001100010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_23484 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100011010010000100";
    constant ap_const_lv32_E7D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110011111010111";
    constant ap_const_lv32_1BC7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000011011110001111011";
    constant ap_const_lv32_FFFFADD6 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111010110111010110";
    constant ap_const_lv32_155E5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010101010111100101";
    constant ap_const_lv32_8CEE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000110011101110";
    constant ap_const_lv32_17EF7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010111111011110111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_160_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_156_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_196_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_23_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_157_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_158_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_198_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_159_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_199_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_200_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_86_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_192_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_81_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_201_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_202_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_115_fu_216_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_82_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_26_fu_224_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_83_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_202_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_116_fu_234_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_84_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_117_fu_248_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_270_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_85_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_270_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_73_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_73_32_1_1_U42 : component myproject_axi_mux_73_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_23484,
        din1 => ap_const_lv32_E7D7,
        din2 => ap_const_lv32_1BC7B,
        din3 => ap_const_lv32_FFFFADD6,
        din4 => ap_const_lv32_155E5,
        din5 => ap_const_lv32_8CEE,
        din6 => ap_const_lv32_17EF7,
        din7 => tmp_fu_270_p8,
        dout => tmp_fu_270_p9);




    activation_196_fu_126_p2 <= (comparison_fu_90_p2 xor ap_const_lv1_1);
    activation_198_fu_138_p2 <= (xor_ln195_fu_132_p2 and comparison_fu_90_p2);
    activation_199_fu_144_p2 <= (comparison_156_fu_102_p2 and activation_196_fu_126_p2);
    activation_200_fu_162_p2 <= (comparison_160_fu_96_p2 and comparison_157_fu_108_p2);
    activation_201_fu_168_p2 <= (comparison_158_fu_114_p2 and activation_198_fu_138_p2);
    activation_202_fu_174_p2 <= (comparison_159_fu_120_p2 and activation_199_fu_144_p2);
    activation_fu_156_p2 <= (xor_ln195_23_fu_150_p2 and activation_196_fu_126_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        tmp_fu_270_p9 when (or_ln208_85_fu_256_p2(0) = '1') else 
        ap_const_lv32_0;
    comparison_156_fu_102_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_EB70)) else "0";
    comparison_157_fu_108_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_9815)) else "0";
    comparison_158_fu_114_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_18218)) else "0";
    comparison_159_fu_120_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_7C62)) else "0";
    comparison_160_fu_96_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFE8984)) else "0";
    comparison_fu_90_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_15A71)) else "0";
    or_ln208_81_fu_196_p2 <= (comparison_160_fu_96_p2 or activation_fu_156_p2);
    or_ln208_82_fu_210_p2 <= (or_ln208_81_fu_196_p2 or activation_201_fu_168_p2);
    or_ln208_83_fu_228_p2 <= (or_ln208_81_fu_196_p2 or activation_198_fu_138_p2);
    or_ln208_84_fu_242_p2 <= (or_ln208_83_fu_228_p2 or activation_202_fu_174_p2);
    or_ln208_85_fu_256_p2 <= (or_ln208_83_fu_228_p2 or activation_199_fu_144_p2);
    or_ln208_86_fu_186_p2 <= (comparison_fu_90_p2 or comparison_156_fu_102_p2);
    or_ln208_fu_180_p2 <= (activation_fu_156_p2 or activation_200_fu_162_p2);
    select_ln208_115_fu_216_p3 <= 
        select_ln208_fu_202_p3 when (or_ln208_81_fu_196_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_116_fu_234_p3 <= 
        zext_ln208_26_fu_224_p1 when (or_ln208_82_fu_210_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_117_fu_248_p3 <= 
        select_ln208_116_fu_234_p3 when (or_ln208_83_fu_228_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_fu_202_p3 <= 
        zext_ln208_fu_192_p1 when (or_ln208_fu_180_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_fu_270_p8 <= 
        select_ln208_117_fu_248_p3 when (or_ln208_84_fu_242_p2(0) = '1') else 
        ap_const_lv3_6;
    xor_ln195_23_fu_150_p2 <= (comparison_156_fu_102_p2 xor ap_const_lv1_1);
    xor_ln195_fu_132_p2 <= (comparison_160_fu_96_p2 xor ap_const_lv1_1);
    zext_ln208_26_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_115_fu_216_p3),3));
    zext_ln208_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln208_86_fu_186_p2),2));
end behav;
