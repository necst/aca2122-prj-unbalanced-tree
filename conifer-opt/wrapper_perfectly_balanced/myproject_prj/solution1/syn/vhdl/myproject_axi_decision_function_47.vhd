-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_47 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_47 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFEFD50 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101111110101010000";
    constant ap_const_lv32_13F44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010011111101000100";
    constant ap_const_lv32_B36F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011001101101111";
    constant ap_const_lv32_E0BB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110000010111011";
    constant ap_const_lv32_17755 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010111011101010101";
    constant ap_const_lv32_A53D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001010010100111101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_15AAB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010101101010101011";
    constant ap_const_lv32_50D6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000101000011010110";
    constant ap_const_lv32_11C9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001110010011011";
    constant ap_const_lv32_FFFFB93B : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111011100100111011";
    constant ap_const_lv32_9BA0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001001101110100000";
    constant ap_const_lv32_154D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001010101001101";
    constant ap_const_lv32_F5B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111010110111000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_38_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_39_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_46_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_40_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_41_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_42_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_37_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_15_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_51_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_52_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_25_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_198_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal activation_53_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_202_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_30_fu_216_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_26_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_8_fu_224_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_27_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_54_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_31_fu_234_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_28_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_32_fu_248_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_264_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_264_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_73_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_73_32_1_1_U87 : component myproject_axi_mux_73_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_15AAB,
        din1 => ap_const_lv32_50D6,
        din2 => ap_const_lv32_11C9B,
        din3 => ap_const_lv32_FFFFB93B,
        din4 => ap_const_lv32_9BA0,
        din5 => ap_const_lv32_154D,
        din6 => ap_const_lv32_F5B8,
        din7 => agg_result_fu_264_p8,
        dout => agg_result_fu_264_p9);




    activation_46_fu_126_p2 <= (comparison_fu_90_p2 xor ap_const_lv1_1);
    activation_51_fu_138_p2 <= (xor_ln195_fu_132_p2 and comparison_fu_90_p2);
    activation_52_fu_162_p2 <= (comparison_38_fu_96_p2 and and_ln193_fu_156_p2);
    activation_53_fu_168_p2 <= (comparison_41_fu_114_p2 and activation_fu_144_p2);
    activation_54_fu_180_p2 <= (xor_ln195_15_fu_150_p2 and and_ln193_37_fu_174_p2);
    activation_fu_144_p2 <= (comparison_39_fu_102_p2 and activation_46_fu_126_p2);
    agg_result_fu_264_p8 <= 
        select_ln208_32_fu_248_p3 when (or_ln208_28_fu_242_p2(0) = '1') else 
        ap_const_lv3_6;
    and_ln193_37_fu_174_p2 <= (comparison_42_fu_120_p2 and activation_46_fu_126_p2);
    and_ln193_fu_156_p2 <= (comparison_fu_90_p2 and comparison_40_fu_108_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_264_p9;
    comparison_38_fu_96_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_13F44)) else "0";
    comparison_39_fu_102_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_B36F)) else "0";
    comparison_40_fu_108_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_E0BB)) else "0";
    comparison_41_fu_114_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_17755)) else "0";
    comparison_42_fu_120_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_A53D)) else "0";
    comparison_fu_90_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFEFD50)) else "0";
    or_ln208_25_fu_192_p2 <= (comparison_38_fu_96_p2 or activation_46_fu_126_p2);
    or_ln208_26_fu_210_p2 <= (comparison_fu_90_p2 or activation_53_fu_168_p2);
    or_ln208_27_fu_228_p2 <= (comparison_fu_90_p2 or activation_fu_144_p2);
    or_ln208_28_fu_242_p2 <= (or_ln208_27_fu_228_p2 or activation_54_fu_180_p2);
    or_ln208_fu_186_p2 <= (activation_52_fu_162_p2 or activation_51_fu_138_p2);
    select_ln208_30_fu_216_p3 <= 
        select_ln208_fu_202_p3 when (comparison_fu_90_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_31_fu_234_p3 <= 
        zext_ln208_8_fu_224_p1 when (or_ln208_26_fu_210_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_32_fu_248_p3 <= 
        select_ln208_31_fu_234_p3 when (or_ln208_27_fu_228_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_fu_202_p3 <= 
        zext_ln208_fu_198_p1 when (or_ln208_fu_186_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_15_fu_150_p2 <= (comparison_39_fu_102_p2 xor ap_const_lv1_1);
    xor_ln195_fu_132_p2 <= (comparison_38_fu_96_p2 xor ap_const_lv1_1);
    zext_ln208_8_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_30_fu_216_p3),3));
    zext_ln208_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln208_25_fu_192_p2),2));
end behav;
