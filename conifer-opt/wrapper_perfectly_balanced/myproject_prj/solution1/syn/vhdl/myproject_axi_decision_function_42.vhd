-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_42 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_42 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_FFFE8FEF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111101000111111101111";
    constant ap_const_lv32_FFFFB9F1 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111011100111110001";
    constant ap_const_lv32_E693 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001110011010010011";
    constant ap_const_lv32_AD90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001010110110010000";
    constant ap_const_lv32_FFFFBD36 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111011110100110110";
    constant ap_const_lv32_FFFE6B97 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100110101110010111";
    constant ap_const_lv32_C003 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_16673 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010110011001110011";
    constant ap_const_lv32_5AD5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000101101011010101";
    constant ap_const_lv32_FFFFF604 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111011000000100";
    constant ap_const_lv32_A2ED : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001010001011101101";
    constant ap_const_lv32_F63F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111011000111111";
    constant ap_const_lv32_FFFFC8FA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111100100011111010";
    constant ap_const_lv32_351D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000011010100011101";
    constant ap_const_lv32_14A3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010100101000111100";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_67_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_68_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_84_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_69_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_85_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_70_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_71_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_86_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_72_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln193_66_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_25_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln208_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_87_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_218_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_228_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_55_fu_236_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal activation_88_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_13_fu_244_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_45_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_56_fu_254_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_46_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_89_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_57_fu_268_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_47_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_58_fu_282_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_298_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_fu_298_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_83_32_1_1_x4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_83_32_1_1_x4_U117 : component myproject_axi_mux_83_32_1_1_x4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_16673,
        din1 => ap_const_lv32_5AD5,
        din2 => ap_const_lv32_FFFFF604,
        din3 => ap_const_lv32_A2ED,
        din4 => ap_const_lv32_F63F,
        din5 => ap_const_lv32_FFFFC8FA,
        din6 => ap_const_lv32_351D,
        din7 => ap_const_lv32_14A3C,
        din8 => agg_result_fu_298_p9,
        dout => agg_result_fu_298_p10);




    activation_84_fu_146_p2 <= (comparison_fu_104_p2 xor ap_const_lv1_1);
    activation_85_fu_152_p2 <= (comparison_fu_104_p2 and comparison_67_fu_110_p2);
    activation_86_fu_164_p2 <= (comparison_68_fu_116_p2 and activation_84_fu_146_p2);
    activation_87_fu_188_p2 <= (comparison_fu_104_p2 and and_ln193_fu_182_p2);
    activation_88_fu_194_p2 <= (comparison_71_fu_134_p2 and activation_86_fu_164_p2);
    activation_89_fu_206_p2 <= (xor_ln195_25_fu_170_p2 and and_ln193_66_fu_200_p2);
    activation_fu_176_p2 <= (comparison_69_fu_122_p2 and activation_85_fu_152_p2);
    agg_result_fu_298_p9 <= 
        select_ln208_58_fu_282_p3 when (or_ln208_47_fu_276_p2(0) = '1') else 
        ap_const_lv3_7;
    and_ln193_66_fu_200_p2 <= (comparison_72_fu_140_p2 and activation_84_fu_146_p2);
    and_ln193_fu_182_p2 <= (xor_ln195_fu_158_p2 and comparison_70_fu_128_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= agg_result_fu_298_p10;
    comparison_67_fu_110_p2 <= "1" when (signed(p_read5) < signed(ap_const_lv32_FFFFB9F1)) else "0";
    comparison_68_fu_116_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_E693)) else "0";
    comparison_69_fu_122_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_AD90)) else "0";
    comparison_70_fu_128_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFFBD36)) else "0";
    comparison_71_fu_134_p2 <= "1" when (signed(p_read6) < signed(ap_const_lv32_FFFE6B97)) else "0";
    comparison_72_fu_140_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_C003)) else "0";
    comparison_fu_104_p2 <= "1" when (signed(p_read4) < signed(ap_const_lv32_FFFE8FEF)) else "0";
    or_ln208_45_fu_248_p2 <= (comparison_fu_104_p2 or activation_88_fu_194_p2);
    or_ln208_46_fu_262_p2 <= (comparison_fu_104_p2 or activation_86_fu_164_p2);
    or_ln208_47_fu_276_p2 <= (or_ln208_46_fu_262_p2 or activation_89_fu_206_p2);
    or_ln208_fu_222_p2 <= (activation_87_fu_188_p2 or activation_85_fu_152_p2);
    select_ln208_55_fu_236_p3 <= 
        select_ln208_fu_228_p3 when (or_ln208_fu_222_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_56_fu_254_p3 <= 
        zext_ln208_13_fu_244_p1 when (comparison_fu_104_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_57_fu_268_p3 <= 
        select_ln208_56_fu_254_p3 when (or_ln208_45_fu_248_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln208_58_fu_282_p3 <= 
        select_ln208_57_fu_268_p3 when (or_ln208_46_fu_262_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln208_fu_228_p3 <= 
        zext_ln208_fu_218_p1 when (activation_85_fu_152_p2(0) = '1') else 
        ap_const_lv2_2;
    xor_ln195_25_fu_170_p2 <= (comparison_68_fu_116_p2 xor ap_const_lv1_1);
    xor_ln195_fu_158_p2 <= (comparison_67_fu_110_p2 xor ap_const_lv1_1);
    xor_ln208_fu_212_p2 <= (ap_const_lv1_1 xor activation_fu_176_p2);
    zext_ln208_13_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_55_fu_236_p3),3));
    zext_ln208_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln208_fu_212_p2),2));
end behav;
