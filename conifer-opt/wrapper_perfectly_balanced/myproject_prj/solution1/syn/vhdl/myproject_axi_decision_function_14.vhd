-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_axi_decision_function_14 is
port (
    ap_ready : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of myproject_axi_decision_function_14 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_100CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000011001010";
    constant ap_const_lv32_FFFDED51 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111011110110101010001";
    constant ap_const_lv32_11E62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010001111001100010";
    constant ap_const_lv32_FFFE339B : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111100011001110011011";
    constant ap_const_lv32_FFFF71D7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110111000111010111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_B67C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011011001111100";
    constant ap_const_lv32_C169 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100000101101001";
    constant ap_const_lv32_8D99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000110110011001";
    constant ap_const_lv32_FFFFEC32 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111110110000110010";
    constant ap_const_lv32_88B1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000100010110001";
    constant ap_const_lv32_592 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010110010010";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal comparison_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_230_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_227_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_279_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln195_13_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_228_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_281_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal comparison_229_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_282_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln208_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_283_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_152_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_46_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_fu_162_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln208_62_fu_176_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln208_47_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal activation_284_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_15_fu_184_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_48_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln208_63_fu_194_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_216_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln208_49_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_216_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_axi_mux_63_32_1_1_x0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mux_63_32_1_1_x0_U275 : component myproject_axi_mux_63_32_1_1_x0
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_B67C,
        din1 => ap_const_lv32_C169,
        din2 => ap_const_lv32_8D99,
        din3 => ap_const_lv32_FFFFEC32,
        din4 => ap_const_lv32_88B1,
        din5 => ap_const_lv32_592,
        din6 => tmp_fu_216_p7,
        dout => tmp_fu_216_p8);




    activation_279_fu_98_p2 <= (comparison_fu_68_p2 xor ap_const_lv1_1);
    activation_281_fu_110_p2 <= (xor_ln195_fu_104_p2 and comparison_fu_68_p2);
    activation_282_fu_116_p2 <= (comparison_227_fu_80_p2 and activation_279_fu_98_p2);
    activation_283_fu_134_p2 <= (comparison_228_fu_86_p2 and activation_281_fu_110_p2);
    activation_284_fu_140_p2 <= (comparison_229_fu_92_p2 and activation_282_fu_116_p2);
    activation_fu_128_p2 <= (xor_ln195_13_fu_122_p2 and activation_279_fu_98_p2);
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        tmp_fu_216_p8 when (or_ln208_49_fu_202_p2(0) = '1') else 
        ap_const_lv32_0;
    comparison_227_fu_80_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_11E62)) else "0";
    comparison_228_fu_86_p2 <= "1" when (signed(p_read3) < signed(ap_const_lv32_FFFE339B)) else "0";
    comparison_229_fu_92_p2 <= "1" when (signed(p_read1) < signed(ap_const_lv32_FFFF71D7)) else "0";
    comparison_230_fu_74_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_FFFDED51)) else "0";
    comparison_fu_68_p2 <= "1" when (signed(p_read2) < signed(ap_const_lv32_100CA)) else "0";
    or_ln208_46_fu_156_p2 <= (or_ln208_fu_146_p2 or activation_283_fu_134_p2);
    or_ln208_47_fu_170_p2 <= (or_ln208_fu_146_p2 or activation_281_fu_110_p2);
    or_ln208_48_fu_188_p2 <= (or_ln208_47_fu_170_p2 or activation_284_fu_140_p2);
    or_ln208_49_fu_202_p2 <= (or_ln208_47_fu_170_p2 or activation_282_fu_116_p2);
    or_ln208_fu_146_p2 <= (comparison_230_fu_74_p2 or activation_fu_128_p2);
    select_ln208_62_fu_176_p3 <= 
        select_ln208_fu_162_p3 when (or_ln208_46_fu_156_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln208_63_fu_194_p3 <= 
        zext_ln208_15_fu_184_p1 when (or_ln208_47_fu_170_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln208_fu_162_p3 <= 
        zext_ln208_fu_152_p1 when (or_ln208_fu_146_p2(0) = '1') else 
        ap_const_lv2_2;
    tmp_fu_216_p7 <= 
        select_ln208_63_fu_194_p3 when (or_ln208_48_fu_188_p2(0) = '1') else 
        ap_const_lv3_5;
    xor_ln195_13_fu_122_p2 <= (comparison_227_fu_80_p2 xor ap_const_lv1_1);
    xor_ln195_fu_104_p2 <= (comparison_230_fu_74_p2 xor ap_const_lv1_1);
    zext_ln208_15_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln208_62_fu_176_p3),3));
    zext_ln208_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln195_fu_104_p2),2));
end behav;
